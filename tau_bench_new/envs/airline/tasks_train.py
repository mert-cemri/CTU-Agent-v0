"""
Generated tasks for airline domain.
Generated at: 2025-08-04T02:54:59.077028
Total tasks: 530 + 560 = 1090
"""

from tau_bench.tau_types import Task, Action

TASKS_TRAIN = [
    Task(
        annotator="gpt-4o",
        user_id="lucas_wilson_8118",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li3866@example.com. You are organized, optimistic, patient, polite. First, retrieve user details for Lucas Wilson using email lucas.wilson2040@example.com to ensure you have the correct information for booking. Next, search for flights from JFK International Airport to LAX International Airport on 2023-11-25 to find the best available options for Lucas Wilson. Once you have identified a suitable flight, proceed to book a reservation for Lucas Wilson on flight F1234 from JFK to LAX on 2023-11-25.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.wilson2040@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_wilson_8118", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_johnson_1294",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are optimistic, confident. First, get_user_details for user Daiki Johnson to retrieve user ID and profile information, which is essential for ensuring a seamless booking experience. Once you have confirmed Daiki's user ID, proceed to book_reservation for user ID U3136 on flight F789, departing on 2023-12-15, with seat preference window. This will ensure Daiki has a comfortable and preferred seating arrangement on their upcoming journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "daiki_johnson_1294"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_johnson_1294", "flight_id": "F789", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_brown_3860",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Silva'} and your email is aarav.silva8543@example.com. You are flexible, direct, independent, confident. \"Book reservation for Ava Brown on flight F1234 with seat preference 'window' and meal preference 'vegetarian'\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_brown_3860", "flight_number": "F1234", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_silva_9133",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Johansson'} and your email is yusuf.johansson1385@example.com. You are direct, independent. Book reservation for user Mia Silva on flight F123 from airport A567 to airport A890 on date 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_silva_9133", "flight_number": "F123", "departure_airport": "A567", "arrival_airport": "A890", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_8513",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Kovacs'} and your email is ethan.kovacs1120@example.com. You are independent, confident, polite, cautious. \"Search for flights from JFK to LAX on 2023-11-15 for Evelyn Brown using the book_reservation tool\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_brown_8513", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_rossi_4467",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Li'} and your email is ethan.li3632@example.com. You are polite, patient, cautious, logical. \"Book reservation for Daiki Rossi on flight JL123 from Tokyo to Rome on 2023-11-15 with a preference for window seat.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_rossi_4467", "flight_number": "JL123", "departure_city": "Tokyo", "arrival_city": "Rome", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_rossi_1806",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Moore'} and your email is sophia.moore3998@example.com. You are cautious, optimistic, organized. First, book a reservation for Yara Rossi on flight F123 using user ID U001 and payment method P789 to ensure her travel plans are secured. Once the reservation is confirmed, proceed to update the seat selection for Yara Rossi's reservation R345 to seat 12A, providing her with a more comfortable seating arrangement for her journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_rossi_1806", "flight_id": "F123", "payment_method": "P789"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R345", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johnson_3148",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Rossi'} and your email is fatima.rossi1052@example.com. You are direct, cautious, polite, organized. First, retrieve user details for Fatima Johnson using email fatima.johnson5264@example.com to verify her user ID. Once you have confirmed her user ID, proceed to book a reservation for Fatima on flight F789 from JFK to LAX using the verified user ID and ensure her preferred seating is accommodated. This sequence ensures that the booking is made accurately and efficiently, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.johnson5264@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johnson_3148", "flight_number": "F789", "departure": "JFK", "destination": "LAX", "preferred_seating": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_ahmed_2732",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Anderson'} and your email is juan.anderson1791@example.com. You are logical, optimistic. First, retrieve user details for Sofia Ahmed using email sofia.ahmed2997@example.com to verify her user ID. Once her identity is confirmed, proceed to search for available flights from JFK International Airport to Heathrow Airport on her desired travel date. After identifying a suitable flight, book a reservation for Sofia Ahmed on flight F1234, ensuring to include her meal preferences and select her preferred seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.ahmed2997@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LHR"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_ahmed_2732", "flight_number": "F1234", "meal_preference": "vegetarian", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_gonzalez_5516",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Gonzalez'} and your email is sophia.gonzalez7573@example.com. You are patient, cautious. Retrieve user details for Chen Gonzalez using email chen.gonzalez3972@example.com to verify user ID. Once the user ID is confirmed, proceed to search for available flights from New York (JFK) to Los Angeles (LAX) on December 15, 2023. After identifying a suitable flight, book a reservation for the user ID associated with chen.gonzalez3972@example.com on flight F1234 from JFK to LAX.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.gonzalez3972@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_gonzalez_5516", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_sanchez_7773",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson3802@example.com. You are cautious, confident, optimistic. First, retrieve user details for Aarav Sanchez using email aarav.sanchez9663@example.com to confirm identity, ensuring that you have the correct passenger information. Once confirmed, proceed to search for flights departing from LAX to JFK on Aarav's desired travel date, ensuring that you find the most suitable options based on his preferences. After identifying the best flight option, book a reservation for Aarav on flight F5678 from LAX to JFK, making sure to secure his preferred seating to enhance his travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.sanchez9663@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "aarav_sanchez_7773"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "aarav_sanchez_7773"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_sanchez_7773", "flight_number": "F5678", "departure": "LAX", "arrival": "JFK", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_patel_3102",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Taylor'} and your email is fatima.taylor9198@example.com. You are flexible, optimistic, independent, direct. First, get user details for James Patel using email james.patel7281@example.com to verify user ID. Once you have confirmed the user ID, proceed to book a reservation for James Patel on flight F12345 from airport A6789.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.patel7281@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_patel_3102", "flight_id": "F12345", "airport_id": "A6789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_moore_2080",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Patel'} and your email is omar.patel5555@example.com. You are polite, flexible. First, retrieve user details for Olivia Moore using her email olivia.moore1716@example.com to confirm her user ID. Once you have confirmed her user ID, proceed to book a reservation for Olivia Moore on flight F456 using the obtained user ID. After the reservation is successfully made, retrieve the reservation details for Olivia Moore to confirm her booking on flight F456.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.moore1716@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_moore_2080", "flight_id": "F456"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "olivia_moore_2080", "flight_id": "F456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_khan_2987",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are polite, optimistic, patient. Book reservation for Mei Khan on flight F1234 from JFK to LAX, including seat selection and meal preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_khan_2987", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_1489",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen9719@example.com. You are independent, logical, cautious. First, retrieve user details for Harper Lopez using their email harper.lopez8439@example.com to confirm user ID. Once the user ID is confirmed, proceed to search for flights from New York (JFK) to Los Angeles (LAX) on December 15, 2023, for Harper Lopez. This sequence ensures that you have the correct user information before booking any flights, maintaining accuracy and efficiency in the reservation process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.lopez8439@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "harper_lopez_1489"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "harper_lopez_1489", "origin": "JFK", "destination": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_6045",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Patel'} and your email is james.patel1360@example.com. You are patient, logical, confident. First, book a reservation for Ethan Nguyen on flight F123 from JFK to LAX on 2023-11-15 with a seat preference of aisle and a meal preference of vegetarian. Once the reservation is confirmed, check the flight status for flight F123 on 2023-11-15 to ensure it is on time. Finally, check in Ethan Nguyen for flight F123 with the reservation ID you receive, ensuring he is all set for his journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_nguyen_6045", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ethan_nguyen_6045", "reservation_id": "RES12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Nguyen'} and your email is isabella.nguyen8385@example.com. You are cautious, organized. First, retrieve user details for Yara Lee using email yara.lee5793@example.com to confirm user ID. Once you have confirmed the user ID, list all available airports to find suitable departure and destination options. After identifying the appropriate airports, proceed to search for flights from LAX (Los Angeles International Airport) to JFK (John F. Kennedy International Airport) on 2023-12-15 for the confirmed user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.lee5793@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_lopez_2185",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Rossi'} and your email is noah.rossi9901@example.com. You are direct, polite. First, get user details for user with email isabella.lopez5223@example.com to verify identity and preferences. Once verified, search for flights from JFK to LAX for the date 2023-11-15 for user Isabella Lopez. After confirming her preferences, proceed to book reservation for flight ID F1234 for user Isabella Lopez with seat preference aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.lopez5223@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_lopez_2185", "flight_id": "F1234", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_kim_3844",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johnson'} and your email is mason.johnson4736@example.com. You are cautious, flexible, patient. First, retrieve user details for Ivan Kim using email ivan.kim8149@example.com to confirm user ID. Once you have confirmed Ivan Kim's user ID, proceed to book a reservation for user ID U123 with flight number F12345, departing from airport A456 to airport B789 on date 2023-11-15. Finally, get the reservation details for reservation ID R56789 to verify all booking information for Ivan Kim, ensuring accuracy and completeness before finalizing the process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.kim8149@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_kim_3844", "flight_number": "F12345", "departure_airport": "A456", "arrival_airport": "B789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R56789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_rossi_1297",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Li'} and your email is yusuf.li3816@example.com. You are organized, patient, independent. First, get reservation details for Reservation ID R1122 to confirm booking information and itinerary. Once you have verified the details, proceed to check in for User ID U3096 on Reservation ID R1122 to receive the boarding pass and seat assignment. This ensures that all information is accurate and the passenger is ready for their upcoming flight.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R1122"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "amelia_rossi_1297", "reservation_id": "R1122"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_gonzalez_2305",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Jackson'} and your email is james.jackson9342@example.com. You are independent, patient, logical, organized. First, book a reservation for Olivia Gonzalez on flight AA1234 departing from LAX on 2023-11-15, with an aisle seating preference. Once the booking is confirmed, obtain the reservation details to verify the booking reference and seat assignment. Finally, update the reservation to include a special meal preference for a vegetarian option, ensuring Olivia's travel needs are fully accommodated.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_gonzalez_2305", "flight_number": "AA1234", "departure_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "olivia_gonzalez_2305"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "olivia_gonzalez_2305", "special_request": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_silva_1659",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Lee'} and your email is daiki.lee6987@example.com. You are optimistic, direct, confident. First, use get_user_details with email james.silva8362@example.com to retrieve James Silva's user ID and profile information. Once you have his details, proceed to use search_flights with departure_airport \"JFK\", destination_airport \"LAX\", and date \"2023-12-15\" to find available flights for James. This will help ensure that James can travel on his preferred date, aligning with our commitment to excellent customer service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.silva8362@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_taylor_6100",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Taylor'} and your email is mei.taylor3805@example.com. You are direct, organized, optimistic. Book reservation for flight F456 from airport A789 to airport A101 with user ID U123 for Yusuf Taylor.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F456", "departure_airport": "A789", "arrival_airport": "A101", "user_id": "yusuf_taylor_6100", "passenger_name": "Yusuf Taylor"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_6400",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Lopez'} and your email is ivan.lopez7081@example.com. You are direct, optimistic, logical. Search for flights departing from LAX to JFK on a specified date that fits Ethan's schedule, ensuring the options align with his preferred travel times. Once a suitable flight is identified, book a reservation for Ethan Hernandez on flight F1234, ensuring his seat preference and meal options are selected to enhance his travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ethan_hernandez_6400"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_6400", "flight_number": "F1234", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5753",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Jackson'} and your email is noah.jackson8496@example.com. You are flexible, organized, cautious. First, retrieve user details for Anya Sanchez using email anya.sanchez6891@example.com to confirm user identity. Once her identity is verified, proceed to search for available flights from JFK to LAX on her desired travel date. After identifying suitable options, book a reservation for Anya Sanchez on flight ID 'FL1234' from JFK to LAX with her preferred seating.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.sanchez6891@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_sanchez_5753", "flight_id": "FL1234", "departure": "JFK", "destination": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito1753@example.com. You are direct, polite. First, get user details for Sophia Wilson using email sophia.wilson3098@example.com to verify account information, ensuring her profile is up-to-date for the upcoming booking. Next, book a reservation for Sophia Wilson on flight F123 from Airport ID A456 to Airport ID A789 on date 2023-12-15, confirming that all travel preferences and special requests are noted. Finally, check in for reservation R789 for user Sophia Wilson to secure her boarding pass and seat assignment, providing her with a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.wilson3098@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_id": "F123", "departure_airport_id": "A456", "arrival_airport_id": "A789", "date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R789", "user_id": "sophia_wilson_1550"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_jackson_4713",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Taylor'} and your email is fatima.taylor9198@example.com. You are cautious, independent, optimistic, logical. Retrieve user details for Lucas Jackson using email lucas.jackson5157@example.com to confirm user ID. Once you have confirmed the user ID, search for flights from JFK to LAX on 2023-11-15 for this user. After identifying a suitable flight, proceed to book a reservation for Lucas Jackson on flight F12345 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.jackson5157@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_jackson_4713", "flight_id": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_santos_5621",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Ito'} and your email is lei.ito5159@example.com. You are confident, patient, direct. First, search for flights from airport A567 to airport A890 on date 2023-11-15 for available options to accommodate a client meeting. Once you have identified a suitable flight, book a reservation for user liam.santos3021@example.com on flight F1234 with a window seat preference to ensure comfort during the journey. Finally, check the flight status for flight F1234 on date 2023-11-15 to ensure it's on schedule, providing peace of mind for the traveler's itinerary.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_santos_5621", "flight_id": "F1234", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F1234", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_martin_1679",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are polite, direct, cautious. Retrieve user details for Mohamed Martin using email mohamed.martin3438@example.com to confirm identity and gather user ID. Once the user ID is confirmed, search for flights from airport ID A123 to destination airport ID A456 on the preferred travel dates for Mohamed Martin. Ensure that the flight options align with the user's preferences and provide a summary of available flights for review.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.martin3438@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mohamed_martin_1679"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A123"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_garcia_5901",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ito'} and your email is james.ito8311@example.com. You are confident, flexible, cautious, logical. First, search for available flights from JFK to LAX on 2023-11-15 for user Anya Garcia to find the best options for her travel. Once you have identified a suitable flight, proceed to book a reservation for user Anya Garcia on flight F123 from JFK to LAX with a seat preference for a window to ensure her comfort during the journey. Finally, check the flight status for flight F123 departing on 2023-11-15 to ensure it is on schedule, providing peace of mind for Anya Garcia and facilitating any necessary adjustments in case of changes.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_garcia_5901", "flight_number": "F123", "departure": "JFK", "arrival": "LAX", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_wilson_8288",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Jackson'} and your email is noah.jackson8496@example.com. You are patient, confident. Book reservation for User ID associated with email amelia.wilson7199@example.com on Flight ID \"AA123\" from JFK to LAX on 2023-11-25.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_wilson_8288", "flight_id": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_davis_2676",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Sanchez'} and your email is ava.sanchez2398@example.com. You are logical, flexible, organized. Book a reservation for Chen Davis from New York (JFK) to Los Angeles (LAX) on December 15, 2023, with flight ID F56789.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_davis_2676", "flight_id": "F56789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_kim_8539",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Santos'} and your email is liam.santos3021@example.com. You are patient, cautious, logical. Book a reservation for Raj on flight F789 from the nearest airport to New York City, ensuring a window seat.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "New York City"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_kim_8539", "flight_number": "F789", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_gonzalez_3910",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Davis'} and your email is yara.davis9842@example.com. You are organized, cautious, flexible. Search flights from airport ID A101 to airport ID A202 on date 2023-11-15 for potential travel options. Once you identify a suitable flight, book a reservation for Ethan Gonzalez on flight ID F5678 with a seat preference for a window seat. This will ensure Ethan has a confirmed booking with his preferred seating for his upcoming business trip.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_gonzalez_3910", "flight_id": "F5678", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_1941",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi1664@example.com. You are patient, polite. First, get user details for Fatima Rossi using email fatima.rossi5024@example.com to verify user ID and preferences. Once you have confirmed the user ID as U1234, proceed to book a reservation for Fatima Rossi on flight F7890 from JFK to LAX on 2023-11-15 using the verified user ID. After successfully booking the reservation, retrieve the reservation details for Fatima Rossi's booking on flight F7890 to confirm the reservation specifics, ensuring all information is accurate and complete for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5024@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_1941", "flight_id": "F7890", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "fatima_rossi_1941", "flight_id": "F7890"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_santos_3403",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Taylor'} and your email is mei.taylor3805@example.com. You are logical, optimistic. First, get reservation details for Sofia Santos’ booking on flight F1234 to confirm the reservation is accurate. Once you have verified the booking information, proceed to check in Sofia Santos for her flight F1234, ensuring you select her preferred seat if it is available. This will ensure a smooth and efficient travel experience for Sofia, aligning with our commitment to customer satisfaction.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sofia_santos_3403", "flight_number": "F1234"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sofia_santos_3403", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_anderson_6237",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Anderson'} and your email is evelyn.anderson3204@example.com. You are logical, polite, flexible, optimistic. First, get user details for user Aarav Anderson using email aarav.anderson2369@example.com to retrieve user ID. Once you have the user ID, proceed to book a reservation for user ID U789 on flight number F456 with destination airport ID D789 using the book_reservation tool. After successfully booking the reservation, check in user ID U789 for flight number F456 using the check_in tool to receive the boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.anderson2369@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_anderson_6237", "flight_number": "F456", "destination_airport_id": "D789"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "aarav_anderson_6237", "flight_number": "F456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_davis_6741",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Kovacs'} and your email is james.kovacs1201@example.com. You are independent, confident, patient. Search for flights departing from JFK Airport to LAX Airport on December 15th, 2023, ensuring the options include flight AA1234. Once you have identified the available flights, proceed to book a reservation for user Yara Davis on flight AA1234 from JFK to LAX on the chosen date.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA1234", "departure_date": "2023-12-15", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_davis_6741", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_anderson_8280",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kovacs'} and your email is mia.kovacs4378@example.com. You are optimistic, independent, patient, cautious. Retrieve user details for Anya Anderson using her email anya.anderson4088@example.com to verify user ID and membership status. Once the user ID is confirmed, search for flights from New York (JFK) to Los Angeles (LAX) on 2023-12-15 using the obtained user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.anderson4088@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_kim_6595",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are confident, logical, flexible, organized. Search for available flights from LAX to JFK on December 15, 2023, for user James Kim. Once you have identified the best option, proceed to book a reservation for James Kim on flight F789 from LAX to JFK on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_kim_6595", "flight_number": "F789", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_nguyen_4239",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee7898@example.com. You are direct, organized. First, get user details for user isabella.nguyen8385@example.com to confirm identity and retrieve user ID for booking. Once you have confirmed the user ID, proceed to search for flights from airport ID A123 to destination airport ID A456 on 2023-11-15. This will ensure that the user has a valid booking option available.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.nguyen8385@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_rossi_4078",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Anderson'} and your email is liam.anderson3611@example.com. You are patient, cautious. Use get_user_details with the email \"evelyn.rossi3321@example.com\" to retrieve Evelyn Rossi's user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.rossi3321@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_kim_3687",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Davis'} and your email is james.davis1376@example.com. You are flexible, independent. Retrieve user details for Lei Kim using email lei.kim3388@example.com to confirm user ID, and then book a reservation for Lei Kim on flight F123 from JFK to LAX using the user ID obtained. This process is crucial to ensure that Lei Kim's travel plans are accurately recorded in our system, allowing for a smooth check-in experience and efficient customer service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lei.kim3388@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_kim_3687", "flight_number": "F123", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_davis_3310",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Smith'} and your email is mason.smith6255@example.com. You are organized, direct, logical. Book reservation for user ID associated with raj.davis1201@example.com on flight AA1234 from JFK to LAX on 2023-12-01.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_davis_3310", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_davis_4522",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Lee'} and your email is evelyn.lee1772@example.com. You are flexible, organized, cautious. Book a reservation for Ivan Davis on flight number AA123 from JFK to LAX on his preferred travel date. After securing the booking, check in Ivan Davis for his flight AA123 to secure his seat and obtain a boarding pass. Finally, get reservation details for Ivan Davis's booking to confirm seat assignment and boarding time.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_davis_4522", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "travel_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ivan_davis_4522", "flight_number": "AA123"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ivan_davis_4522", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_8677",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Jackson'} and your email is emma.jackson2892@example.com. You are optimistic, direct, logical. First, retrieve user details for Harper Garcia using email harper.garcia8018@example.com to ensure accuracy in the booking process. Then, search for available flights from JFK to LAX on 2023-11-15 to find suitable options for Harper's travel needs. Once you identify an appropriate flight, book a reservation for Harper Garcia on flight F123 from JFK to LAX, ensuring an aisle seat is selected for comfort during the journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.garcia8018@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_garcia_8677", "flight_id": "F123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_martin_1679",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Wilson'} and your email is mohamed.wilson2728@example.com. You are independent, organized. Retrieve user details for Mohamed Martin using email mohamed.martin3438@example.com to confirm identity and retrieve user ID. Once you have confirmed the identity and obtained the user ID, search for available flights from JFK International Airport to Heathrow Airport on the preferred travel date of November 15, 2023. This task is essential for ensuring Mohamed Martin's travel arrangements are accurately processed and aligned with his preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.martin3438@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mohamed_martin_1679"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LHR"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LHR", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_ito_2789",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Rossi'} and your email is juan.rossi3718@example.com. You are optimistic, flexible, confident, logical. Olivia Ito, a valued client, needs to travel from JFK to SFO for a business meeting on the 15th of next month. First, search for flights from JFK to SFO on the desired travel date for Olivia Ito to find the most suitable options. Once you have identified a convenient flight, proceed to book a reservation for Olivia Ito on flight F1234 from JFK to SFO to ensure her timely arrival.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_ito_2789", "flight_number": "F1234", "departure": "JFK", "arrival": "SFO", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_rossi_7264",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Moore'} and your email is fatima.moore5533@example.com. You are patient, independent, confident. First, search for available flights from New York (JFK) to Los Angeles (LAX) on 2023-11-20 for potential booking. Once you find a suitable flight, proceed to book a reservation for Juan Rossi on flight DL456 from New York (JFK) to Los Angeles (LAX) on 2023-11-20 using user ID U3718. After securing the reservation, calculate the baggage fees for Juan Rossi for flight DL456, considering he has one checked bag and two carry-ons.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_rossi_7264", "flight_number": "DL456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20", "passenger_name": "Juan Rossi"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "juan_rossi_7264", "flight_number": "DL456", "checked_bags": 1, "carry_ons": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_li_9671",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kovacs'} and your email is mia.kovacs4378@example.com. You are polite, independent. Book reservation for Juan Li on flight AA123 from JFK to LAX on 2023-12-15, with seat preference 'window'.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_li_9671", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_johnson_6488",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Khan'} and your email is anya.khan3991@example.com. You are optimistic, organized, logical, flexible. Retrieve user details for Liam Johnson to confirm identity and retrieve user ID. Then, search for flights from JFK to LAX on December 15th, 2023, to find suitable options for Liam Johnson. This will help ensure that the correct passenger information is used when identifying the best flight options available for his travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "liam_johnson_6488"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "liam_johnson_6488"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_ahmed_2732",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Silva'} and your email is james.silva8362@example.com. You are flexible, organized, patient, independent. First, retrieve user details for Sofia Ahmed using email sofia.ahmed2997@example.com to get her user ID. Next, book a reservation for Sofia Ahmed with user ID U12345 on flight AA100 from JFK to LAX on 2023-11-21. Finally, check-in for reservation ID R56789 for flight AA100 on 2023-11-21 to ensure a smooth travel experience for Sofia.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.ahmed2997@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_ahmed_2732", "flight_number": "AA100", "departure": "JFK", "destination": "LAX", "date": "2023-11-21"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R56789", "flight_number": "AA100", "date": "2023-11-21"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_9352",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Wilson'} and your email is evelyn.wilson9461@example.com. You are direct, patient. First, search for flights from JFK to LAX on 2023-11-15 for Raj Khan to find suitable travel options. Once you have identified a preferred flight, proceed to book a reservation for Raj Khan on flight F123 from JFK to LAX on 2023-11-15, ensuring all details are correctly entered for a smooth booking process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": {"first_name": "Raj", "last_name": "Khan"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_hernandez_9827",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Lopez'} and your email is anya.lopez6991@example.com. You are independent, confident. First, search for flights from LAX to JFK on the upcoming Friday for Mei Hernandez to find the best available options. Once you have identified the most suitable flight, proceed to book a reservation for Mei Hernandez on Flight F12345 from LAX to JFK on the upcoming Friday, ensuring all details are correct and the booking is confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mei_hernandez_9827"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "upcoming Friday"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_hernandez_9827", "flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "upcoming Friday"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_jackson_7257",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are flexible, direct, cautious, organized. First, search for available flights from LAX to JFK for the preferred travel dates of Olivia Jackson. Once you have identified a suitable flight, proceed to book a reservation for Olivia Jackson on flight AA123 from LAX to JFK, ensuring all necessary passenger details are included.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "olivia_jackson_7257"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_jackson_7257", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "passenger_first_name": "Olivia", "passenger_last_name": "Jackson", "passenger_email": "olivia.jackson@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_3247",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Brown'} and your email is ava.brown2670@example.com. You are logical, cautious, flexible, patient. Search for flights from JFK to LAX for user Isabella Khan using available flight search options. Once you identify a suitable flight based on her preferences, book a reservation for the flight using the book_reservation tool, ensuring you have the specific flight ID, date, and seat preference ready for the booking process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_3247", "flight_id": "FL123", "date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_9352",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johnson'} and your email is mei.johnson1890@example.com. You are cautious, optimistic, patient, polite. Please book a reservation for Raj Khan on flight AA123 from JFK to LAX on 2023-11-15, ensuring his seat preference is aisle. Once the reservation is confirmed, calculate the total fare for Raj's reservation, including taxes and baggage fees, to provide him with a comprehensive cost overview. Finally, check Raj in for flight AA123 on 2023-11-15 to secure his boarding pass and seat assignment, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle", "passenger_name": {"first_name": "Raj", "last_name": "Khan"}}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_johnson_4260",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Martin'} and your email is harper.martin5272@example.com. You are patient, organized, direct, confident. Search for available flights from LAX to JFK on Chen Johnson's preferred travel dates. Once you have identified the suitable options, proceed to book a reservation for Chen Johnson on flight F123 from LAX to JFK, ensuring all passenger details are correct.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "chen_johnson_4260"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_johnson_4260", "flight_number": "F123", "departure": "LAX", "destination": "JFK", "passenger_details": {"first_name": "Chen", "last_name": "Johnson", "email": "chen.johnson@example.com"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_johansson_9644",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Jackson'} and your email is lucas.jackson5157@example.com. You are flexible, polite, confident. First, retrieve user details for user with email amelia.johansson1133@example.com to confirm identity and preferences. Once confirmed, proceed to search for flights from JFK to LAX departing on 2023-11-15 and returning on 2023-11-22 for user Amelia Johansson. After selecting the appropriate flights, book reservation for flight F123 from JFK to LAX on 2023-11-15 with return flight F456 on 2023-11-22 for user Amelia Johansson.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.johansson1133@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_id": "F123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_id": "F456", "departure_date": "2023-11-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_gonzalez_4431",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen2184@example.com. You are patient, optimistic, organized. \"Book reservation for Sofia Gonzalez from LAX to JFK on flight AA123 departing 2023-11-15 with seat preference window\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_gonzalez_4431", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_9061",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Sanchez'} and your email is liam.sanchez8750@example.com. You are flexible, direct, logical, organized. Book a reservation for Mei Wilson on flight F123 from airport A456 to airport A789 for a specific date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_9061", "flight_number": "F123", "departure_airport": "A456", "arrival_airport": "A789", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_nguyen_1995",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Lee'} and your email is aarav.lee5880@example.com. You are direct, patient, polite, flexible. First, get user details for Sophia Nguyen using her email sophia.nguyen5624@example.com to retrieve her user ID. Once you have the user ID, calculate potential flight options for a round trip from SFO to JFK departing on 2023-11-15 and returning on 2023-11-22. Finally, book a reservation for the retrieved user ID on the selected flight option to ensure her travel plans are confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.nguyen5624@example.com"}
            ),
            Action(
                name="calculate",
                kwargs={"departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-11-15", "return_date": "2023-11-22"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_nguyen_1995", "flight_option": "selected_flight_option"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_rossi_9663",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Garcia'} and your email is aarav.garcia6639@example.com. You are polite, patient, cautious, direct. Book reservation for Aarav Rossi on flight AA123 from JFK to LAX with a window seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_rossi_9663", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_lopez_9068",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Gonzalez'} and your email is olivia.gonzalez4421@example.com. You are patient, logical. Book a reservation for Ava Lopez on flight F789 from JFK to LAX on November 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_lopez_9068", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_sanchez_2625",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ahmed'} and your email is mia.ahmed1335@example.com. You are logical, polite, independent. Retrieve the user's details using email ava.sanchez3468@example.com to confirm user ID for reservation processing. Once the user ID is confirmed, book a reservation for Ava Sanchez on flight ID AA123 using her user ID and preferred seat selection. This ensures that Ava has a confirmed seat on her desired flight, facilitating a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.sanchez3468@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_sanchez_2625", "flight_id": "AA123", "seat_selection": "preferred"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_patel_1045",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Hernandez'} and your email is mohamed.hernandez8983@example.com. You are flexible, direct, polite. Book reservation for Harper Patel on flight F123 from LAX to JFK on 15th December 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_patel_1045", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_ahmed_8302",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Khan'} and your email is amelia.khan3954@example.com. You are patient, direct. First, book a reservation for user Harper Ahmed on flight AA123 from JFK to LAX on November 15, 2023, in economy class. Once the reservation is confirmed, proceed to check in Harper Ahmed for the same flight using the reservation ID provided. Ensure all details are accurate to facilitate a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_ahmed_8302", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_ahmed_8302", "reservation_id": "RES123456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_wilson_1123",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson6900@example.com. You are direct, cautious, flexible, optimistic. First, retrieve user details for Yara Wilson using email yara.wilson5847@example.com to confirm identity before proceeding with any booking actions. Once her identity is confirmed, list all available airports to help Yara Wilson decide on departure and destination options for her upcoming flight reservation. Finally, book reservation for Yara Wilson on Flight F1234 from JFK to LAX, departing on November 15, 2023, in Economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.wilson5847@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_wilson_1123", "flight_number": "F1234", "departure_airport": "JFK", "destination_airport": "LAX", "departure_date": "2023-11-15", "class": "Economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_1055",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Moore'} and your email is raj.moore1097@example.com. You are polite, patient, optimistic. Aarav Nguyen is planning a business trip and needs to finalize his travel arrangements. First, book a reservation for Aarav Nguyen on flight AA123 departing from JFK to SFO on October 15, 2023, with user ID U9719. Once the reservation is confirmed, proceed to check in for flight AA123 using reservation R5678 to secure Aarav's boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "SFO", "departure_date": "2023-10-15", "user_id": "aarav_nguyen_1055"}
            ),
            Action(
                name="check_in",
                kwargs={"flight_number": "AA123", "reservation_id": "R5678", "user_id": "aarav_nguyen_1055"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_5128",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Brown'} and your email is aarav.brown4253@example.com. You are organized, logical, flexible. \"Book reservation for user Mohamed Taylor on flight F12345 from JFK to LAX on 2023-11-05 in economy class\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_5128", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-05", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_wilson_8118",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Johansson'} and your email is omar.johansson3839@example.com. You are optimistic, logical, confident. Search for flights departing from JFK International Airport to LAX International Airport on December 15, 2023, to find suitable options for our client, Lucas Wilson. Once you have identified a flight that matches his schedule, proceed to book a reservation for Lucas Wilson on flight F12345 from JFK to LAX with a window seat preference. This will ensure Lucas has a comfortable journey, aligning with our commitment to providing excellent customer service.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_wilson_8118", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_lopez_2185",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Garcia'} and your email is noah.garcia7790@example.com. You are polite, organized, patient. First, search for flights from JFK to LAX on December 15, 2023, with a return on December 22, 2023, for 1 adult. Once you have identified a suitable flight, proceed to get_user_details for isabella.lopez5223@example.com to confirm her personal and contact information. After confirming the details, book_reservation for flight F12345 from JFK to LAX for user isabella.lopez5223@example.com, ensuring a window seat preference is selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_lopez_2185"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_lopez_2185", "flight_id": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_lopez_2185",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed1896@example.com. You are cautious, confident, independent. Retrieve user details for Isabella Lopez using email isabella.lopez5223@example.com to verify account information, ensuring all her personal and payment details are accurate and up-to-date. Once verified, proceed to book a reservation for Isabella Lopez on flight F12345, utilizing her confirmed account details to secure the booking seamlessly.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_lopez_2185"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_lopez_2185", "flight_number": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_garcia_6211",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ahmed'} and your email is amelia.ahmed2287@example.com. You are independent, confident. First, get user details for user Evelyn Garcia using email evelyn.garcia5661@example.com to confirm identity. Once her identity is confirmed, proceed to book a reservation for her with departure from JFK Airport to LAX Airport on flight F123 on 2023-11-15. This ensures that we have the correct passenger information before finalizing the booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.garcia5661@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_garcia_6211", "departure_airport": "JFK", "arrival_airport": "LAX", "flight_number": "F123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_ahmed_8302",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Hernandez'} and your email is liam.hernandez2653@example.com. You are cautious, organized, polite. Retrieve user details for Harper Ahmed using email harper.ahmed9372@example.com to verify user ID and reservation history. Once verified, proceed to book a reservation for Harper Ahmed on Flight AA123 from JFK to LAX, ensuring to include seat selection and meal preference. After successfully booking the reservation, check-in Harper Ahmed for Flight AA123 to secure the boarding pass and confirm luggage check-in.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.ahmed9372@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "harper_ahmed_8302"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_ahmed_8302", "flight_number": "AA123", "departure": "JFK", "destination": "LAX", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_ahmed_8302", "flight_number": "AA123", "luggage_check_in": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_6762",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Ahmed'} and your email is evelyn.ahmed7132@example.com. You are confident, polite, optimistic, patient. Book a flight reservation for user Yusuf Kovacs from LAX (Los Angeles International Airport) to JFK (John F. Kennedy International Airport) on December 15, 2023, using the book_reservation tool. After booking, retrieve Yusuf Kovacs' reservation details using the get_reservation_details tool to confirm all updates and ensure accuracy. In the event of any issues during the booking process, such as incorrect passenger information or payment errors, promptly address these by verifying the details and reattempting the booking if necessary, ensuring a smooth customer experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_6762", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "passenger_first_name": "Yusuf", "passenger_last_name": "Kovacs"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_kovacs_6762"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_muller_1116",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Brown'} and your email is anya.brown7942@example.com. You are logical, flexible, patient. Book reservation for Daiki Muller on flight F1234 from Tokyo to Los Angeles on 2023-12-15, seating preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_muller_1116", "flight_number": "F1234", "departure": "Tokyo", "destination": "Los Angeles", "date": "2023-12-15", "seating_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_muller_3384",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Lopez'} and your email is juan.lopez8898@example.com. You are optimistic, logical, independent. First, get user details for user with email liam.muller3463@example.com to verify identity and preferences, ensuring that all information is accurate and up-to-date. Once verified, proceed to book a reservation for user Liam Muller on Flight F123 from JFK to LAX departing on 2023-11-25, confirming seat selection and meal preferences. After the reservation is successfully made, check in user Liam Muller for Flight F123 to ensure that his boarding pass is issued and ready for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.muller3463@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_muller_3384", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-25", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "liam_muller_3384", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_muller_1116",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Johnson'} and your email is harper.johnson9867@example.com. You are optimistic, organized. Retrieve user details using email daiki.muller6236@example.com to confirm identity and preferences. Once confirmed, get airport information for the airport nearest to the user's location to check available flights. After identifying the nearest airport, search for flights departing from this airport to a destination specified by the user, ensuring that the options align with the user's preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.muller6236@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "user_location"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest_airport_location"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "nearest_airport_code", "destination": "user_specified_destination"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_johansson_6921",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Jackson'} and your email is olivia.jackson4179@example.com. You are confident, organized, patient, optimistic. Search for available flights from Stockholm Arlanda Airport (ARN) to John F. Kennedy International Airport (JFK) on December 15, 2023. Once you find a suitable flight, book a reservation for Yusuf Johansson on flight F4521 from ARN to JFK on December 15, 2023 with a seat preference for a window. After booking, get the reservation details for Yusuf Johansson's booking on flight F4521 to confirm the booking status and seat assignment, ensuring everything is in order for his travel plans.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_johansson_6921", "flight_number": "F4521", "departure_airport": "ARN", "arrival_airport": "JFK", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_johansson_6921", "flight_number": "F4521"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_li_3601",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Jackson'} and your email is ava.jackson4706@example.com. You are logical, patient, polite. First, book a reservation for Emma Li on flight AA1051 from LAX to JFK on 2023-11-15, returning on 2023-11-22, using her email emma.li1051@example.com for confirmation. Once the booking is confirmed, proceed to search for available upgrades to business class on the same flight for Emma Li to enhance her travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_li_3601", "flight_number": "AA1051", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "return_date": "2023-11-22", "passenger_name": {"first_name": "Emma", "last_name": "Li"}, "email": "emma.li1051@example.com"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "emma_li_3601", "action": "search_upgrades", "flight_number": "AA1051", "departure_date": "2023-11-15", "class": "business"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_muller_1498",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Jackson'} and your email is sophia.jackson7991@example.com. You are flexible, polite. Retrieve user details for Juan Muller using email juan.muller7460@example.com to obtain user ID. Once you have obtained the user ID, book a reservation for user ID U101 for flight ID F789, ensuring to include seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.muller7460@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_muller_1498", "flight_id": "F789", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_wilson_8653",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Li'} and your email is james.li5284@example.com. You are logical, direct. Retrieve user details for Yusuf Wilson to confirm user ID using the email yusuf.wilson1006@example.com.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.wilson1006@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_sanchez_8117",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Santos'} and your email is harper.santos7981@example.com. You are optimistic, organized, confident. First, calculate the total cost for Fatima Sanchez's reservation on flight AA100, including taxes and fees, to ensure she is aware of the complete financial details for her travel from JFK to LAX. Once the total cost is confirmed and communicated, proceed to check in Fatima Sanchez for flight AA100 departing on November 15, 2023, to secure her boarding pass and ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "fatima_sanchez_8117", "flight_number": "AA100"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "fatima_sanchez_8117", "flight_number": "AA100"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "fatima_sanchez_8117", "flight_number": "AA100", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Thomas'} and your email is mei.thomas9437@example.com. You are direct, organized. Book reservation for Ethan on flight number AA123 from JFK to LAX on 2023-12-15 using user ID obtained previously.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_johansson_9644",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Hernandez'} and your email is liam.hernandez2558@example.com. You are polite, patient, logical. First, retrieve user details for Amelia Johansson using email amelia.johansson1133@example.com to ensure you have the correct passenger information. Next, search for flights from JFK Airport to LAX Airport on the specified travel date to find suitable travel options for Amelia. Once you have identified an appropriate flight, book a reservation for Amelia Johansson on Flight F12345, including her seat selection and meal preference. Finally, retrieve reservation details for Amelia Johansson to confirm that all booking information is accurate and complete before sending her the confirmation email.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.johansson1133@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "amelia_johansson_9644"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "F12345", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_johansson_9644"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8701",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Brown'} and your email is ava.brown2670@example.com. You are optimistic, patient. First, list all airports to find potential departure and destination options for Mei's upcoming travel plans. Once the options are reviewed and Mei decides on her travel itinerary, book a reservation for Mei Lee from LAX to JFK on flight F1234 for the date 2023-11-15. After successfully booking the flight, get the reservation details for Mei Lee's booking to confirm the reservation and obtain the reservation ID.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lee_8701", "flight_number": "F1234", "departure_airport": "LAX", "destination_airport": "JFK", "date": "2023-11-15", "passenger_name": "Mei Lee"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mei_lee_8701", "passenger_name": "Mei Lee"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_patel_9446",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Taylor'} and your email is lucas.taylor7450@example.com. You are logical, polite. Book reservation for Chen Patel on flight number AA123 using user ID obtained from user details, and then get reservation details for Chen Patel on flight number AA123 to confirm booking and seat assignment. Ensure that all details are accurate and up-to-date to facilitate a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_patel_9446", "flight_number": "AA123"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "chen_patel_9446", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_silva_8071",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Thomas'} and your email is james.thomas5223@example.com. You are direct, cautious. First, retrieve user details for Yara Silva using email yara.silva7778@example.com to verify the user ID necessary for reservation tasks. Once verified, search for available flights from airport ID A123 to destination airport ID B456 on 2023-12-15 for Yara Silva. After identifying a suitable flight, proceed to book a reservation for Yara Silva on flight F789 departing from airport ID A123 to airport ID B456 on 2023-12-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.silva7778@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "arrival_airport_id": "B456", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_silva_8071", "flight_id": "F789", "departure_airport_id": "A123", "arrival_airport_id": "B456", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_sanchez_8204",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Kim'} and your email is noah.kim2865@example.com. You are polite, optimistic. First, get_user_details for the user with email liam.sanchez8750@example.com to retrieve their user ID and preferences. Once you have the user ID, proceed to book_reservation for user ID U789 on flight F456 from airport A123 to A789 on 2023-11-15, ensuring to include their seat preference and any special requests. This sequence will ensure that the booking process is personalized and efficient, enhancing the customer's travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.sanchez8750@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_sanchez_8204", "flight_id": "F456", "from_airport": "A123", "to_airport": "A789", "date": "2023-11-15", "seat_preference": "aisle", "special_requests": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_khan_9070",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Anderson'} and your email is chen.anderson2368@example.com. You are cautious, patient, confident, flexible. First, get user details for Evelyn Khan using email evelyn.khan8752@example.com to verify her account information. Once her account is verified, proceed to book a reservation for Evelyn Khan on flight F1234 from JFK to LAX for December 15th, 2023.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.khan8752@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_khan_9070", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_li_6867",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Santos'} and your email is ava.santos7003@example.com. You are optimistic, cautious, direct, independent. Retrieve user details for Evelyn Li using her email evelyn.li5694@example.com to verify user ID. Once you have verified Evelyn Li's user ID, proceed to book a reservation for her on flight number FL123 using the retrieved user ID. This ensures that Evelyn's booking is accurately linked to her account, facilitating a smooth check-in process and enhancing her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.li5694@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_li_6867", "flight_number": "FL123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lee_7603",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are independent, organized, patient. Book a reservation for Daiki Lee on flight DL3427 from the selected departure airport to the destination airport.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lee_7603", "flight_number": "DL3427", "passenger_name": "Daiki Lee", "departure_airport": "selected departure airport", "destination_airport": "destination airport"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_brown_5782",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown5591@example.com. You are flexible, independent, organized. Retrieve user details for Raj Brown using the email raj.brown6519@example.com to confirm user ID and preferences. Then, search for flights departing from the selected airport to Raj Brown's desired destination on the preferred travel date. Ensure that the flight options align with Raj's preferences for a seamless booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.brown6519@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_brown_5782"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_rossi_9663",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are cautious, organized. First, list all available airports to identify departure and destination options for Aarav Rossi's upcoming business trip. Once you have selected the most convenient airports, check the flight status for flights from the chosen departure airport to the destination airport on Aarav's desired travel date to ensure availability and on-time performance. Finally, proceed to book a reservation for Aarav Rossi on the selected flight using his user ID and the flight ID, ensuring his travel plans are confirmed and organized efficiently.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "destination_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_rossi_9663", "flight_id": "FL1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_garcia_1905",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Nguyen'} and your email is evelyn.nguyen7538@example.com. You are cautious, confident, direct, patient. Book a new reservation for Yara Garcia from JFK to LAX on flight F1234 using the user ID obtained. After booking, confirm the reservation details for the newly booked flight to ensure all information is accurate. This will help maintain our airline's reputation for reliability and ensure a smooth travel experience for Ms. Garcia.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_garcia_1905", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yara_garcia_1905", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_nguyen_3427",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Sanchez'} and your email is juan.sanchez9043@example.com. You are patient, flexible. First, get user details for Omar Nguyen (omar.nguyen7292@example.com) to verify user ID and travel preferences. Once verified, search for flights from JFK to LAX on the desired travel date to find suitable options for Omar. After identifying a suitable flight, book a reservation for Omar Nguyen on flight F123 from JFK to LAX, ensuring seat preference and meal options are selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.nguyen7292@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_nguyen_3427", "flight_id": "F123", "departure": "JFK", "destination": "LAX", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_taylor_2700",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Thomas'} and your email is mei.thomas3105@example.com. You are cautious, optimistic, confident. First, retrieve user details for Emma Taylor using email emma.taylor9655@example.com to confirm her identity and gather reservation history. Once her details are verified, proceed to search for available flights from JFK to LAX on the desired travel date provided by Emma Taylor. After identifying a suitable flight, book a reservation for Emma Taylor on flight F123 from JFK to LAX, ensuring her user details and preferred seating are accurately recorded.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "emma_taylor_2700"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "emma_taylor_2700"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_taylor_2700", "flight_number": "F123", "departure": "JFK", "arrival": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_kim_9517",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are confident, logical. Search for available flights from LAX to JFK on November 15, 2023, for Lei Kim. Once you have identified the most suitable flight, proceed to book a reservation for Lei Kim on flight F456 from LAX to JFK for November 15, 2023, using the provided user ID and payment details. After successfully booking the flight, calculate the total cost for Lei Kim's flight reservation, ensuring to include any additional fees or discounts applicable.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_kim_9517", "flight_id": "F456", "departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "lei_kim_9517", "flight_id": "F456", "departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7587",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Santos'} and your email is james.santos8116@example.com. You are patient, logical. Book reservation for Ivan Wilson on flight UA123 departing from SFO on 2023-12-15, using his user details and preferred seat preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_wilson_7587"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_wilson_7587", "flight_number": "UA123", "departure_airport": "SFO", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_davis_8874",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Wilson'} and your email is mei.wilson4812@example.com. You are flexible, optimistic, independent, confident. First, retrieve user details for Sophia Davis using her email sophia.davis4814@example.com to verify her user ID. Once verified, search for flights from JFK International Airport to LAX with a departure date of 2023-11-15 for Sophia. After identifying a suitable flight, proceed to book a reservation for Sophia on flight F1234 departing from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.davis4814@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_davis_8874", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_sanchez_7340",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs5639@example.com. You are confident, logical, independent. Book reservation for Raj Sanchez on flight AA123 from JFK to LAX on November 15th in business class. Once the reservation is confirmed, get reservation details for Raj Sanchez's booking to confirm seat assignment and meal preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_sanchez_7340", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "business"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_sanchez_7340", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lopez_9471",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Hernandez'} and your email is lucas.hernandez5349@example.com. You are confident, direct, cautious. Search for available flights from JFK to LAX on 2023-12-15 for user Mei Lopez (mei.lopez4337@example.com), ensuring to find options that match her schedule preferences. Once you have identified a suitable flight, proceed to book a reservation on flight F123 from JFK to LAX for Mei Lopez, making sure to select an aisle seat as per her preference. This will ensure a smooth booking process and enhance customer satisfaction by meeting her specific seating request.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mei_lopez_9471"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lopez_9471", "flight_number": "F123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_sanchez_4739",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Jackson'} and your email is mia.jackson4610@example.com. You are direct, cautious. Book a reservation for Amelia Sanchez on flight AA100 from JFK to LAX on Saturday, using user ID and preferred seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_sanchez_4739", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "Saturday", "preferred_seating": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_gonzalez_3910",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Lopez'} and your email is ivan.lopez7081@example.com. You are cautious, patient, independent, optimistic. First, retrieve Ethan Gonzalez's user details using email ethan.gonzalez4384@example.com to ensure we have the correct information on file. Next, search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) for the upcoming weekend to find suitable travel options for Ethan. Once a suitable flight is identified, book a reservation for Ethan Gonzalez on flight F123 departing from LAX to JFK.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.gonzalez4384@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_gonzalez_3910", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_santos_6012",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Jackson'} and your email is daiki.jackson3105@example.com. You are cautious, logical, flexible, polite. First, retrieve reservation details for reservation ID 98765 to confirm the booking information for Raj Santos using the get_reservation_details tool. Once confirmed, update the reservation to include a special meal request for Raj Santos using the book_reservation tool. Finally, retrieve the reservation details again for reservation ID 98765 to confirm the updated meal preference using the get_reservation_details tool.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "98765"}
            ),
            Action(
                name="book_reservation",
                kwargs={"reservation_id": "98765", "user_id": "raj_santos_6012", "special_request": "special meal request"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "98765"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7416",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Silva'} and your email is isabella.silva6885@example.com. You are polite, independent, direct, cautious. First, retrieve user details for Ivan Wilson using email ivan.wilson5573@example.com to confirm his identity and ensure that you have the correct passenger information. Once his identity is confirmed, proceed to book a reservation for Ivan Wilson on flight AA123 from JFK to LAX on 2023-11-15, selecting seat 12A to secure his preferred seating. After the booking is successfully made, retrieve the reservation details for Ivan Wilson’s reservation on flight AA123 to confirm the booking and seat assignment, ensuring all information is accurate and up to date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.wilson5573@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_wilson_7416", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat": "12A"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ivan_wilson_7416", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_garcia_2940",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Hernandez'} and your email is ethan.hernandez2569@example.com. You are organized, optimistic. \"Calculate total cost for a flight reservation for Ava Garcia from the nearest airport to New York on 2023-12-15, returning on 2023-12-22\"",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_user_details",
                kwargs={"user_id": "ava_garcia_2940"}
            ),
            Action(
                name="calculate",
                kwargs={"origin": "nearest_airport", "destination": "New York", "departure_date": "2023-12-15", "return_date": "2023-12-22", "user_id": "ava_garcia_2940"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_6381",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Taylor'} and your email is lucas.taylor9816@example.com. You are logical, optimistic. Book reservation for user Harper Santos with flight number AA123 on 2023-12-15 from JFK to LAX.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_6381", "flight_number": "AA123", "date": "2023-12-15", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_silva_1659",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Santos'} and your email is lei.santos1045@example.com. You are direct, independent, flexible. Search for available flights from JFK to LAX on the desired date using the book_reservation tool. Once you have identified a suitable flight, proceed to book a reservation for user James Silva on flight AA123 using book_reservation with user ID and flight details. After successfully booking the reservation, calculate the total cost of the booked reservation for user James Silva and confirm payment details to ensure a smooth transaction.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"from_airport": "JFK", "to_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_silva_1659", "flight_number": "AA123"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "james_silva_1659", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_taylor_6100",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Brown'} and your email is raj.brown6519@example.com. You are cautious, polite, organized, direct. First, retrieve user details for Yusuf Taylor using email yusuf.taylor8412@example.com to verify account information, ensuring that all personal details are up-to-date for a seamless booking process. Next, book a reservation for Yusuf Taylor on Flight ID F1234 from Airport ID A567 to Airport ID A890 on March 15th, 2024, taking care to confirm seat preferences and any special requirements. Finally, retrieve reservation details for Yusuf Taylor's newly booked reservation to confirm booking status and flight details, providing him with all necessary information for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.taylor8412@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_taylor_6100", "flight_id": "F1234", "from_airport_id": "A567", "to_airport_id": "A890", "date": "2024-03-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_taylor_6100"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_anderson_2319",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Silva'} and your email is sophia.silva5929@example.com. You are patient, logical. First, retrieve user details for Lei Anderson using email lei.anderson8099@example.com to confirm user ID. Next, list all available airports to find the nearest airport for Lei Anderson's travel plans, ensuring that the options are convenient for her departure location. Finally, get airport information for the closest airport to Lei Anderson to confirm available airlines and services, ensuring she has a smooth and pleasant travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lei.anderson8099@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "closest_airport_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5251",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Lopez'} and your email is chen.lopez3735@example.com. You are logical, confident. First, get user details for Anya Sanchez using email anya.sanchez5778@example.com to retrieve the user ID necessary for reservation tasks. Next, search available flights from JFK to LAX for Anya Sanchez on the upcoming weekend to find the best options for her travel. Finally, book a reservation for Anya Sanchez on flight F123 departing from JFK to LAX on October 15th using the user ID retrieved, ensuring her travel plans are confirmed efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.sanchez5778@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_sanchez_5251", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_santos_9228",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Sanchez'} and your email is raj.sanchez1048@example.com. You are optimistic, cautious. Book reservation for Yusuf Santos for a flight from JFK to LAX on November 15, 2023, returning on November 22, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_santos_9228", "first_name": "Yusuf", "last_name": "Santos", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-22", "email": "raj.sanchez1048@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_li_4844",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Martin'} and your email is evelyn.martin3593@example.com. You are patient, cautious, polite, optimistic. First, get_user_details with email noah.li2453@example.com to retrieve user ID and profile information, which is necessary for managing travel bookings. Once you have the user ID, proceed to book_reservation for user ID U789 on flight F1234 from LAX to JFK with seat preference aisle, ensuring the customer has a comfortable journey. After the reservation is confirmed, check_flight_status for flight F1234 departing from LAX on 2023-11-15 to ensure it's on schedule, providing the customer with peace of mind regarding their travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.li2453@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_li_4844", "flight_id": "F1234", "from": "LAX", "to": "JFK", "seat_preference": "aisle"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F1234", "departure_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_ahmed_9365",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Taylor'} and your email is fatima.taylor9198@example.com. You are cautious, optimistic. Retrieve user details for Harper Ahmed using email harper.ahmed4982@example.com to ensure the correct passenger information is on file. Then, search for available flights from airport ID A123 to A789 departing on March 15, 2024, to find suitable travel options. Finally, book a reservation for Harper Ahmed on flight ID F456 from airport ID A123 to A789, ensuring to include their seat preference of aisle and a vegetarian meal option for a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.ahmed4982@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_ahmed_9365", "flight_id": "F456", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_7943",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li2453@example.com. You are confident, cautious, organized. First, use get_user_details to retrieve the user ID for Raj Khan using the email raj.khan6740@example.com. Once you have the user ID, proceed to book_reservation to reserve a flight for Raj Khan from JFK International Airport using the retrieved user ID. Specify the flight ID as FL123, seat preference as aisle, and note any special meal requirements such as vegetarian. After booking, use get_reservation_details to confirm the reservation details for Raj Khan, ensuring that the flight times and seat assignments are accurate and meet his preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.khan6740@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_7943", "flight_id": "FL123", "departure_airport": "JFK", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_khan_7943"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_moore_9694",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are organized, independent, optimistic, flexible. First, retrieve reservation details for Sophia Moore's booking on flight AA123 to confirm booking information. Once confirmed, update Sophia Moore's reservation on flight AA123 to include a window seat preference to enhance her travel experience. Finally, check-in Sophia Moore for flight AA123 to secure her boarding pass and ensure a smooth boarding process.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sophia_moore_9694", "flight_number": "AA123"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "sophia_moore_9694", "flight_number": "AA123", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sophia_moore_9694", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_muller_1116",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are confident, independent, flexible. Retrieve user details for Daiki Muller using the email daiki.muller6236@example.com to confirm user ID, and then proceed to book a reservation for Daiki Muller on flight AA123 from JFK to LAX, including seat selection. This ensures that Daiki's travel plans are accurately recorded and confirmed, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.muller6236@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_muller_1116", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_khan_2521",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Santos'} and your email is raj.santos2136@example.com. You are independent, direct, optimistic, cautious. First, retrieve user details for Liam Khan using email liam.khan7273@example.com to confirm user identity and preferences. Once confirmed, search for flights from JFK International Airport to LAX International Airport on 2023-12-15 for available options, ensuring that you identify flights that align with Liam's preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.khan7273@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_garcia_4224",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Patel'} and your email is harper.patel6919@example.com. You are logical, direct, independent, flexible. Retrieve reservation details for Sophia Garcia's booking on flight AA1234 to verify all information is correct. Once confirmed, proceed to check-in Sophia Garcia for flight AA1234 using her reservation details to secure her seat.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sophia_garcia_4224", "flight_number": "AA1234"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sophia_garcia_4224", "flight_number": "AA1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_5634",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Anderson'} and your email is lei.anderson8099@example.com. You are cautious, independent. Book reservation for user ID on flight F123 from JFK to LAX, ensuring seat preference is aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_5634", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_9564",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson3802@example.com. You are confident, cautious, flexible, independent. Search for flights from airport ID A123 to destination airport ID B456 on Yusuf's preferred travel dates. Once you have identified the suitable flights, proceed to book a reservation for user ID U789 on the selected flight, ensuring to include seat selection and meal preference. This will ensure Yusuf has a confirmed booking with all necessary preferences accounted for.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yusuf_kovacs_9564"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "arrival_airport_id": "B456", "preferred_dates": ["2023-11-15", "2023-11-16"]}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_9564", "flight_id": "FL123", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_anderson_9197",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Lee'} and your email is anya.lee6655@example.com. You are direct, cautious, flexible. Retrieve the user's details using the email chen.anderson2368@example.com to gather their user ID for booking purposes. Once you have obtained the user ID, proceed to book a reservation for that user on flight number AA123 from LAX to JFK on the specified travel date. This sequence ensures that the booking is made under the correct user account, facilitating a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_anderson_9197", "flight_number": "AA123", "departure": "LAX", "destination": "JFK", "travel_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_rossi_4874",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Muller'} and your email is fatima.muller7881@example.com. You are polite, organized, direct, confident. Book a reservation for Lei Rossi from JFK to LAX on flight F12345 departing on 2023-12-15 with a window seat preference. Following the booking, update Lei Rossi's reservation on the same flight to add a special meal request for a vegetarian option. This ensures that Lei's travel experience is both comfortable and tailored to their dietary needs.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_rossi_4874", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lei_rossi_4874", "flight_number": "F12345", "special_request": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Taylor'} and your email is yusuf.taylor8412@example.com. You are independent, polite, flexible, logical. First, search for flights from airport ID A123 to destination airport ID A456 on 2023-12-15 to gather options for our client, Ethan Li. Once you have identified a suitable flight, proceed to book a reservation for Ethan Li on flight ID F789 from airport ID A123 to A456 on 2023-12-15. Ensure that the booking confirmation is sent to Ethan and provide him with the details for a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_9571", "flight_id": "F789", "departure_airport_id": "A123", "destination_airport_id": "A456", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_9830",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Li'} and your email is ivan.li1620@example.com. You are patient, polite, optimistic, flexible. First, get user details for Mohamed Taylor using email mohamed.taylor5881@example.com to ensure all information is accurate and up-to-date. Next, book a reservation for Mohamed Taylor on flight AA101 from JFK to LAX on 2023-11-15, ensuring that all preferences and requirements are met for a comfortable journey. Finally, secure a reservation for Mohamed Taylor on the return flight AA202 from LAX to JFK on 2023-11-20, confirming that the itinerary aligns with his travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.taylor5881@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA101", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA202", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_jackson_4826",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Li'} and your email is daiki.li2854@example.com. You are confident, independent, patient, optimistic. Retrieve user details for Olivia Jackson using her email olivia.jackson4179@example.com to verify her account. Once verified, search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) for user Olivia Jackson on 2023-11-15. After finding a suitable flight, book a reservation for Olivia Jackson on flight F123 from JFK to LAX for 2023-11-15 using her account details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.jackson4179@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_jackson_4826", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_gonzalez_5516",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Wilson'} and your email is amelia.wilson7199@example.com. You are direct, patient. Retrieve user details for Chen Gonzalez using email chen.gonzalez3972@example.com to confirm user ID for upcoming operations. Once confirmed, search for flights from Los Angeles (LAX) to New York (JFK) departing on November 15, 2023, to find available options for Chen Gonzalez.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.gonzalez3972@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_khan_9070",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Silva'} and your email is yara.silva7778@example.com. You are cautious, independent, direct, flexible. Retrieve user details for Evelyn Khan using email evelyn.khan8752@example.com to confirm user ID and preferences. Once confirmed, proceed to book a reservation for Evelyn Khan on flight F1234 from JFK to LAX, ensuring her seating preferences are met. After the booking is complete, retrieve the reservation details for Evelyn Khan to confirm the booking reference and seating allocation, ensuring all information is accurate and ready for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.khan8752@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_khan_9070", "flight_number": "F1234", "departure": "JFK", "destination": "LAX", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "evelyn_khan_9070"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_garcia_8705",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Anderson'} and your email is juan.anderson1791@example.com. You are logical, patient, flexible, direct. Book reservation for user Liam Garcia from JFK to LAX on flight AA1234 with seat preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_garcia_8705", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_kovacs_6640",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Lee'} and your email is aarav.lee5880@example.com. You are cautious, optimistic. Please book a reservation for James Kovacs on flight AA123 using the provided user ID and flight details. Once the reservation is confirmed, proceed to update his seating preference to an aisle seat on the same flight. This ensures James has a comfortable journey, aligning with our commitment to customer satisfaction.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_kovacs_6640", "flight_number": "AA123"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "james_kovacs_6640", "flight_number": "AA123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_lee_6825",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson3802@example.com. You are optimistic, confident, polite, patient. Book reservation for Chen Lee on flight F1234 from the nearest airport to Los Angeles with seat preference for a window seat.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "Los Angeles"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_lee_6825", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_johnson_5613",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Davis'} and your email is chen.davis3247@example.com. You are direct, confident. Book reservation for Ivan Johnson on flight F789, using user ID U101, with preferred seating in business class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F789", "user_id": "ivan_johnson_5613", "class": "business"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_taylor_9065",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Sanchez'} and your email is liam.sanchez8750@example.com. You are patient, organized. Book reservation for user Sophia Taylor on flight AA123 from JFK to LAX on 2023-11-25, seat preference aisle",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_taylor_9065", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-25", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_santos_6012",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Rossi'} and your email is daiki.rossi1310@example.com. You are cautious, independent. First, get reservation details for reservation ID R5678 to confirm booking for Raj Santos. Once confirmed, proceed to check in for Raj Santos on reservation ID R5678 for flight AA1234. After check-in, calculate baggage fees for Raj Santos on flight AA1234 with 2 checked bags to ensure all travel requirements are met before departure.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R5678"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "flight_number": "AA1234", "user_id": "raj_santos_6012"}
            ),
            Action(
                name="calculate",
                kwargs={"flight_number": "AA1234", "user_id": "raj_santos_6012", "checked_bags": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Santos'} and your email is ava.santos7003@example.com. You are cautious, confident, independent. \"Book reservation for user 'James Ahmed' from 'JFK' to 'LAX' on date '2023-11-20' with flight number 'AA123'\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_ahmed_4322", "departure_airport": "JFK", "arrival_airport": "LAX", "flight_number": "AA123", "date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_taylor_9065",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Kovacs'} and your email is ethan.kovacs3760@example.com. You are direct, cautious, optimistic, confident. Search for flights from JFK to LAX on 2023-11-15 for user Sophia Taylor and, once you find a suitable option, proceed to book a reservation for her on flight F789. This will ensure she has a confirmed seat for her upcoming trip, aligning with her travel plans.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_taylor_9065", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_taylor_8806",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Muller'} and your email is ivan.muller6623@example.com. You are flexible, polite, independent, cautious. Retrieve user details for Juan Taylor using email juan.taylor9216@example.com to confirm his identity and preferences. Once confirmed, search for available flights from LAX to JFK (John F. Kennedy International Airport) on 2023-11-25 to find the best travel option for him. After selecting the most suitable flight, book a reservation for Juan Taylor on flight F1234 from LAX to JFK on 2023-11-25, ensuring all his travel needs are met.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.taylor9216@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-25"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_taylor_8806", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_johansson_6921",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Smith'} and your email is anya.smith8361@example.com. You are logical, optimistic, patient, flexible. First, search for flights departing from JFK to LAX on November 15th, 2023, to find available options for a client. Once you have identified a suitable flight, proceed to book a reservation for Yusuf Johansson on flight F12345 from JFK to LAX on November 15th, 2023.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_johansson_6921", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_johnson_8493",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Wilson'} and your email is mohamed.wilson2728@example.com. You are confident, patient. Retrieve user details for Omar Johnson using email omar.johnson8258@example.com to confirm user ID. Once you have confirmed his user ID, search for available flights between the selected departure and arrival airports for Omar's preferred travel dates. After selecting a suitable flight, book a reservation for Omar Johnson using his user ID and the flight details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.johnson8258@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_johnson_8493", "flight_id": "FL123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_muller_7373",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi4666@example.com. You are organized, cautious, optimistic. Book reservation for Fatima on Flight F123 departing from JFK to LAX with a return on Flight F456.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_muller_7373", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "return_flight_number": "F456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_lopez_9956",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Anderson'} and your email is yara.anderson7387@example.com. You are patient, flexible. First, retrieve user details for Ivan Lopez using the email ivan.lopez7081@example.com to confirm user ID for reservation purposes. Next, list all available airports to identify potential departure and arrival locations for Ivan Lopez's upcoming trip, ensuring that the selected airports align with his travel preferences. Finally, book a reservation for Ivan Lopez on flight number AA123 from JFK to LAX on 2023-12-15, making sure to accommodate his seat preference and dietary needs to enhance his travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.lopez7081@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_lopez_9956", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle", "dietary_needs": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Gonzalez'} and your email is yusuf.gonzalez6753@example.com. You are organized, polite, flexible, cautious. Book a reservation for Ethan Hernandez on flight F1024, departing from JFK to LAX.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_number": "F1024", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_9352",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Taylor'} and your email is chen.taylor8734@example.com. You are flexible, confident, logical, patient. Search for flights from JFK to LAX on 2023-12-15 for Raj Khan to find suitable travel options. Once you have identified the best option, book a reservation for flight number FL456 from JFK to LAX for user Raj Khan with seat preference window. After booking, get reservation details for Raj Khan's booking on flight number FL456 to confirm ticket and seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "FL456", "departure": "JFK", "destination": "LAX", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_khan_9352", "flight_number": "FL456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_sanchez_8204",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Moore'} and your email is raj.moore1097@example.com. You are cautious, direct, confident, independent. Search for flights departing from LAX to JFK on the desired travel date specified by the user. Once you have identified a suitable flight, book a reservation for user Liam Sanchez on flight F1234 from LAX to JFK on the desired travel date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_sanchez_8204", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "travel_date": "desired_travel_date"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_wilson_8118",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Moore'} and your email is olivia.moore1716@example.com. You are direct, cautious, flexible. First, book a reservation for Lucas Wilson on flight AA123 from JFK to LAX on November 15, 2023, using his stored payment information. Once the booking is confirmed, update Lucas Wilson's reservation to include a special meal request for vegetarian options on flight AA123. Finally, check in Lucas Wilson for his flight AA123 from JFK to LAX to secure his boarding pass and ensure all details are in order for a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_wilson_8118", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lucas_wilson_8118", "flight_number": "AA123", "special_request": "vegetarian meal"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "lucas_wilson_8118", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5251",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Garcia'} and your email is sophia.garcia3812@example.com. You are patient, polite, confident. First, get user details for Anya Sanchez using email anya.sanchez5778@example.com to retrieve user ID and reservation history. Once you have the user ID, proceed to book a reservation for user ID U001 for flight AA123 from JFK to LAX on October 15, 2023, with a seat preference for the window. After securing the reservation, check in for user ID U001 for flight AA123 on October 15, 2023, to ensure the boarding pass and seat assignment are confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.sanchez5778@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_sanchez_5251", "flight_number": "AA123", "departure": "JFK", "destination": "LAX", "date": "2023-10-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "anya_sanchez_5251", "flight_number": "AA123", "date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_kovacs_1132",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith9832@example.com. You are polite, optimistic, cautious, organized. First, retrieve user details for Ethan Kovacs using the email ethan.kovacs3760@example.com to ensure we have the correct customer information on file. Next, search for flights from JFK to LAX departing on 2023-11-08 to find suitable travel options for Ethan Kovacs. Once you have identified an appropriate flight, proceed to book a reservation for Ethan Kovacs on flight F1234, ensuring a window seat preference is selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.kovacs3760@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_kovacs_1132", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_anderson_6815",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ito'} and your email is harper.ito9302@example.com. You are independent, cautious. Book a reservation for user Liam Anderson (liam.anderson3611@example.com) on flight F123 from JFK to LAX on November 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_anderson_6815", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_email": "liam.anderson3611@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_kovacs_3082",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Jackson'} and your email is sophia.jackson7991@example.com. You are flexible, independent. Get reservation details for user Harper Kovacs with reservation ID R5678 to review current bookings.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "harper_kovacs_3082", "reservation_id": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_silva_7735",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi6938@example.com. You are optimistic, cautious, confident, polite. Book a reservation for Fatima Silva on flight ID F789, departing from airport ID A123 to airport ID A456, with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_silva_7735", "flight_id": "F789", "departure_airport_id": "A123", "arrival_airport_id": "A456", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_anderson_2080",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez7190@example.com. You are polite, organized, cautious. First, use the get_user_details tool to verify user information for Yara Anderson with email yara.anderson7387@example.com to ensure her details are correct before proceeding with any reservations. Once verified, use the book_reservation tool to reserve a seat for Yara Anderson on flight F123 from the departure airport, ensuring all reservation details are accurate and confirmed. Finally, use the check_in tool to complete check-in for Yara Anderson on her reserved flight F123, ensuring she is ready for her journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yara_anderson_2080"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_anderson_2080", "flight_number": "F123", "departure_airport": "JFK"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yara_anderson_2080", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_silva_2256",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Brown'} and your email is mohamed.brown5678@example.com. You are cautious, flexible, organized. Book a reservation for user Noah Silva on flight F1234 from JFK Airport to LAX Airport on 2023-11-15 using book_reservation.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_silva_2256", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_ahmed_2248",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Patel'} and your email is mason.patel6016@example.com. You are logical, flexible, organized. Book reservation for Fatima Ahmed on flight F123 from JFK to LAX on 2023-11-10 with seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_ahmed_2248", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-10", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_anderson_8585",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Brown'} and your email is aarav.brown4253@example.com. You are logical, polite, organized, independent. Retrieve the user details for Anya Anderson using the email anya.anderson2168@example.com to confirm account information. Once confirmed, search for flights from JFK to LAX on the specified travel dates to find suitable itineraries for Anya. After selecting the most appropriate flight, book a reservation for Anya using her user details and confirm her seating preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.anderson2168@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "anya_anderson_8585"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_anderson_8585", "flight_id": "FL123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_rossi_1806",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kovacs'} and your email is raj.kovacs4133@example.com. You are polite, logical, confident. First, search for flights from JFK to LAX on 2023-11-15 for Yara Rossi to find available options. Once you have identified a suitable flight, proceed to book a reservation for Yara Rossi on flight F1234 from JFK to LAX in business class. After successfully booking the reservation, retrieve the reservation details for Yara Rossi to confirm the reservation and seat assignment, ensuring everything is in order for her upcoming travel.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_rossi_1806", "flight_number": "F1234", "class": "business"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yara_rossi_1806"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_8677",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Davis'} and your email is ivan.davis6795@example.com. You are optimistic, independent, polite, direct. Search for flights from JFK Airport to LAX Airport on 2023-11-15 for Harper Garcia. Once you find a suitable option, proceed to book a reservation for Harper Garcia on flight F123 from JFK to LAX on 2023-11-15, ensuring a window seat preference.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_garcia_8677", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_brown_2409",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Nguyen'} and your email is lucas.nguyen9405@example.com. You are logical, confident, direct, organized. Book a reservation for user anya.brown7942@example.com on flight F123 from JFK to LAX on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_brown_2409", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_sanchez_8544",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ito'} and your email is mia.ito6295@example.com. You are polite, optimistic, organized, independent. Please begin by retrieving user details for Mei Sanchez using the email mei.sanchez6580@example.com. Once you have confirmed her details, proceed to list all airports to identify the nearest one for Mei Sanchez. This information will help us in providing personalized travel options and ensuring a smooth booking experience for her upcoming trip.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.sanchez6580@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_jackson_4826",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kovacs'} and your email is mason.kovacs8863@example.com. You are organized, direct. Book a reservation for Olivia Jackson on flight AA123 from LAX to JFK on October 20, 2023, using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_jackson_4826", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-10-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_3563",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen1044@example.com. You are patient, optimistic, polite. First, retrieve user details for Aarav Lee using email aarav.lee5880@example.com to ensure you have the correct personal and location information. Next, list all airports to find the nearest one to Aarav Lee's location, as this will be essential for planning his travel. Finally, search for flights departing from the identified airport to New York City on 15th December 2023, ensuring you find the best options for his travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.lee5880@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "Aarav Lee's location"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ahmed_3713",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are polite, optimistic, cautious, logical. First, get user details for Mia Ahmed using email mia.ahmed1335@example.com to retrieve her user ID. Once you have Mia's user ID, proceed to search for available flights from Mia's nearest airport to her desired destination on specific dates. This will help ensure Mia can travel on her preferred schedule.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.ahmed1335@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"user_id": "mia_ahmed_3713"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"user_id": "mia_ahmed_3713", "origin": "nearest_airport_code", "destination": "desired_destination_code", "departure_date": "2023-11-01", "return_date": "2023-11-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_ahmed_3737",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Lopez'} and your email is juan.lopez8898@example.com. You are optimistic, flexible. Book a reservation for Omar Ahmed on flight ID F1234 with seat preference and meal selection.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_ahmed_3737", "flight_id": "F1234", "seat_preference": "aisle", "meal_selection": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lee_9572",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Smith'} and your email is emma.smith8074@example.com. You are direct, confident, polite, flexible. First, get user details for Anya Lee using email anya.lee3359@example.com to retrieve her user ID and preferences. Once you have the necessary information, proceed to book a reservation for Anya Lee on flight F123 from JFK to LAX, ensuring she has a window seat in the economy class. This sequence ensures that her preferences are considered during the booking process, enhancing customer satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.lee3359@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lee_9572", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_wilson_1123",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Khan'} and your email is fatima.khan6332@example.com. You are independent, patient, confident, flexible. \"Book reservation for user Yara Wilson on flight AA101 from JFK to LAX with preferred seating\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_wilson_1123", "flight_number": "AA101", "departure_airport": "JFK", "arrival_airport": "LAX", "preferred_seating": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_jackson_2156",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Ahmed'} and your email is daiki.ahmed9601@example.com. You are organized, independent, patient, direct. Retrieve user details for Mia Jackson using email mia.jackson4610@example.com to verify user ID. Once verified, search for available flights departing from JFK Airport to LAX Airport on the date specified by Mia Jackson. After confirming the flight details, book a reservation for Mia Jackson on flight F123 from JFK to LAX, ensuring all user details are correct.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.jackson4610@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "flight_number": "F123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_jackson_2156", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_rossi_4467",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Silva'} and your email is evelyn.silva5743@example.com. You are optimistic, direct. First, retrieve user details for Daiki Rossi using their email (daiki.rossi1310@example.com) to confirm user ID and preferences. Once you have confirmed the user ID, proceed to search for flights from the identified nearest airport to Tokyo for Daiki Rossi, considering a flexible travel date range. This sequential approach ensures that you have all necessary user information before searching for the most suitable flight options, aligning with our commitment to providing personalized and efficient service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.rossi1310@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest to Daiki Rossi"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_moore_8640",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Jackson'} and your email is liam.jackson6651@example.com. You are optimistic, direct. Retrieve user details for Raj Moore using email raj.moore9581@example.com to verify user ID and preferences for flight booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.moore9581@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_davis_9130",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Khan'} and your email is evelyn.khan8752@example.com. You are polite, flexible, patient, confident. Please search for flights departing from JFK Airport to LAX Airport on December 15, 2023, and once you find a suitable option, proceed to book a reservation for Ava Davis on flight F1234 from JFK to LAX on December 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_davis_9130", "flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_6762",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Davis'} and your email is fatima.davis2844@example.com. You are confident, flexible. Book a reservation for Yusuf on flight AA123 from JFK International Airport to LAX with a preferred seat selection and meal option.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_6762", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_li_3668",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Wilson'} and your email is yusuf.wilson1006@example.com. You are independent, organized, patient, flexible. Book a reservation for Mia Li from LAX to JFK on December 15, 2023, with flight preference for morning departure.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_li_3668", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "departure_time_preference": "morning", "passenger_name": {"first_name": "Mia", "last_name": "Li"}, "contact_email": "yusuf.wilson1006@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_jackson_2190",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Santos'} and your email is liam.santos3021@example.com. You are polite, flexible. Retrieve user details for Emma Jackson using her email emma.jackson2892@example.com to verify her identity and gather necessary user ID for booking. Once you have successfully verified Emma's identity and obtained her user ID, search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) on 2023-12-15 to find available options. This will help in ensuring that Emma can secure a suitable flight for her travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.jackson2892@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "emma_jackson_2190"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_9391",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Li'} and your email is ethan.li9943@example.com. You are cautious, organized, independent, optimistic. Retrieve user details for Lucas Rossi using email lucas.rossi6938@example.com to verify user ID for booking purposes. Once you have confirmed the user ID, proceed to book a reservation for Lucas Rossi on flight F1234 from JFK to LAX. This sequence ensures that Lucas Rossi's booking is accurately linked to his user profile, facilitating a smooth check-in process and enhancing customer satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.rossi6938@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_rossi_9391", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_anderson_8585",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Davis'} and your email is ivan.davis6795@example.com. You are logical, direct. Book a reservation for Anya Anderson on flight AA123 from JFK to LAX on October 15, 2023",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_anderson_8585", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johansson_1766",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are polite, confident, direct, optimistic. First, retrieve reservation details for Fatima Johansson's booking to confirm flight itinerary and seat assignment on flight AA123 from JFK to LAX on October 15th, 2023. Once confirmed, update Fatima Johansson's reservation to include an extra checked bag and confirm the updated total cost. Finally, check in Fatima Johansson for flight AA123, selecting her meal preferences and confirming her window seat assignment.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "fatima_johansson_1766"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "fatima_johansson_1766", "extra_checked_bags": 1}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "fatima_johansson_1766", "meal_preference": "vegetarian", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_davis_4522",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Jackson'} and your email is mia.jackson4610@example.com. You are polite, flexible. Book reservation for Ivan Davis on flight F12345 from JFK to LAX, including seat selection and meal preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_davis_4522", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_selection": "12A", "meal_preference": "Vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_9564",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are patient, confident, organized, cautious. Book a reservation for Yusuf Kovacs on flight F12345 from JFK to LAX, ensuring availability and seating preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_9564", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "seating_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_patel_4950",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Lee'} and your email is anya.lee3359@example.com. You are optimistic, logical, organized. Book reservation for user mason.patel6016@example.com on flight AA123 departing on 2023-12-15 from LAX to JFK. Once the reservation is confirmed, get reservation details for user mason.patel6016@example.com to confirm booking information. After verifying the details, check in for flight AA123 for user mason.patel6016@example.com to receive the boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_patel_4950", "flight_number": "AA123", "departure_date": "2023-12-15", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mason_patel_4950"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mason_patel_4950", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_6691",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Patel'} and your email is olivia.patel6423@example.com. You are cautious, confident, logical. Retrieve user details for Chen Nguyen using email chen.nguyen2526@example.com to confirm user ID. Once confirmed, book a reservation for Chen Nguyen on flight AA123 from SFO to JFK, departing on 2023-12-15. After booking the reservation, proceed to check in Chen Nguyen for flight AA123 using the booking reference to select a preferred seat, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.nguyen2526@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_6691", "flight_number": "AA123", "departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "chen_nguyen_6691", "flight_number": "AA123", "booking_reference": "BR123456", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_2421",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Smith'} and your email is anya.smith8361@example.com. You are cautious, logical, optimistic, flexible. Retrieve user details for Lucas Rossi using email lucas.rossi4133@example.com to confirm user ID. Once confirmed, book a reservation for user ID 'U1234' on flight ID 'AA1234' departing from 'JFK' to 'LAX' on December 15, 2023. After booking, check in for reservation ID 'R5678' for user ID 'U1234' to secure the boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.rossi4133@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_rossi_2421", "flight_id": "AA1234", "departure": "JFK", "destination": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "user_id": "lucas_rossi_2421"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_rossi_1806",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Patel'} and your email is sophia.patel3802@example.com. You are flexible, polite, organized. First, get user details for user Yara Rossi using email yara.rossi1917@example.com to retrieve user ID. Once you have the user ID, proceed to search for flights from JFK Airport to LAX Airport departing on 2023-11-15. After identifying a suitable flight, book a reservation for the retrieved user ID on the selected flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.rossi1917@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_rossi_1806", "flight_id": "FL123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_ahmed_8438",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Smith'} and your email is evelyn.smith7561@example.com. You are cautious, polite, direct. Book reservation for Evelyn Ahmed from JFK to LAX on flight number A1234, including seat selection",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_ahmed_8438", "flight_number": "A1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_6637",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Thomas'} and your email is mei.thomas9437@example.com. You are polite, optimistic, direct. First, retrieve user details for Yara Lee using email yara.lee3901@example.com to confirm identity as part of the booking process. Once her identity is confirmed, search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15th, 2023, to find available options. After selecting the most suitable flight, proceed to book a reservation for user Yara Lee on flight F123 from LAX to JFK with a window seat preference, ensuring her travel plans are secured.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.lee3901@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_6637", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_gonzalez_3796",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Taylor'} and your email is mei.taylor3805@example.com. You are confident, organized. Book a reservation for Harper Gonzalez from JFK to LAX on flight AA123 departing 2023-11-15, and then calculate baggage fees for Harper Gonzalez's reservation to ensure all costs are covered. This will ensure that Harper's travel plans are confirmed and financially prepared, enhancing the overall customer experience with the airline.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_gonzalez_3796", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "harper_gonzalez_3796", "calculation_type": "baggage_fees", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_4016",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Lee'} and your email is mason.lee8809@example.com. You are independent, patient. Retrieve user details for Ethan Li using email ethan.li9943@example.com to confirm user ID. Then, book a reservation for Ethan Li on flight F789 from JFK to LAX using the user ID from the retrieved details. This will ensure that Ethan Li has a confirmed seat on the flight, facilitating a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.li9943@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_4016", "flight_number": "F789", "departure": "JFK", "arrival": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_davis_5069",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Kovacs'} and your email is james.kovacs1201@example.com. You are direct, confident, logical. First, check the flight status for flight F1234 from JFK to LAX on December 15, 2023, to ensure it is on schedule. Once confirmed, proceed to book a reservation for user Harper Davis on this flight using user ID U7823. After successfully booking the reservation, calculate the baggage fees for Harper Davis, who will be checking in 2 bags for this flight.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_davis_5069", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "harper_davis_5069", "flight_number": "F1234", "baggage_count": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Li'} and your email is mia.li3818@example.com. You are optimistic, confident. First, search for flights departing from JFK to LAX on 2023-11-20 for availability to ensure there are open seats for our clients. Once availability is confirmed, proceed to book a reservation for user ID U123 for flight F456 from JFK to LAX on 2023-11-20. This sequence will help us secure travel arrangements efficiently and provide timely service to our customers.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_id": "F456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_martin_5489",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li2895@example.com. You are cautious, flexible, patient. Book reservation for User (chen.martin3409@example.com) on flight AA123 from JFK to LAX on September 25, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_martin_5489", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-09-25", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_muller_2311",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Davis'} and your email is isabella.davis7889@example.com. You are organized, cautious. First, check flight status for flight F456 to provide user U123 with current information, ensuring they are aware of any delays or changes. Once the flight status is confirmed, check in user U123 for flight F456 with reservation R789 and select seat 12A to ensure a smooth boarding process. Finally, calculate total cost for reservation R789 including baggage fees and taxes to provide user U123 with a complete overview of their travel expenses.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F456"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "isabella_muller_2311", "reservation_id": "R789", "seat_number": "12A"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_gonzalez_6040",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Sanchez'} and your email is raj.sanchez1380@example.com. You are flexible, direct, logical. First, retrieve user details for Mohamed Gonzalez using email mohamed.gonzalez1202@example.com to confirm user ID. Once confirmed, proceed to book a reservation for Mohamed Gonzalez from JFK to LAX on flight AA123, seat 12A, for departure on 2023-12-15. After securing the booking, send a confirmation email to mohamed.gonzalez1202@example.com with the itinerary and check-in details for the flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.gonzalez1202@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_gonzalez_6040", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_number": "12A"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mohamed_gonzalez_6040", "flight_number": "AA123", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_garcia_9415",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Johansson'} and your email is fatima.johansson8122@example.com. You are optimistic, direct. Book a reservation for Mohamed Garcia from JFK to LAX with flight AA123 on 2023-12-15, including seat preference and meal choice.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_garcia_9415", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_santos_9046",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Muller'} and your email is ivan.muller6623@example.com. You are organized, confident, logical. First, search for available flights from JFK to LAX on the desired travel date to ensure there are suitable options for our client, James Santos. Once you have identified a suitable flight, proceed to book a reservation for James Santos on flight F123 from JFK to LAX. This will ensure that our client has a confirmed seat on his preferred flight.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_santos_9046", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Rossi'} and your email is juan.rossi3718@example.com. You are confident, independent. First, retrieve the reservation details for reservation ID RES5678 for user Ethan Li to ensure all information is accurate and up-to-date. Once verified, proceed to check in Ethan Li for flight number AA123 on the date 2023-11-15, ensuring all necessary check-in procedures are completed smoothly and efficiently.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "RES5678", "user_id": "ethan_li_9571"}
            ),
            Action(
                name="check_in",
                kwargs={"flight_number": "AA123", "date": "2023-11-15", "user_id": "ethan_li_9571"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_garcia_6211",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Smith'} and your email is harper.smith9133@example.com. You are flexible, cautious, optimistic, logical. Book reservation for user evelyn.garcia5661@example.com from JFK to LAX on flight F9876 departing on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_garcia_6211", "email": "evelyn.garcia5661@example.com", "flight_number": "F9876", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8515",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Patel'} and your email is omar.patel5555@example.com. You are direct, polite. First, retrieve user details for Mei Lee using email mei.lee1220@example.com to ensure her information is accurate. Next, search for flights from airport ID A123 (e.g., Los Angeles International Airport) to airport ID A456 (e.g., John F. Kennedy International Airport) on 2023-12-20. Once you have identified a suitable flight, proceed to book a reservation for Mei Lee on flight ID F789 departing on 2023-12-20, ensuring seat selection and meal preferences are specified.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.lee1220@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lee_8515", "flight_id": "F789", "departure_date": "2023-12-20", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7416",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown5591@example.com. You are confident, organized, flexible. Book a reservation for Ivan Wilson on flight F12345 from JFK to LAX for the date 2023-11-15, using user ID obtained previously.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_wilson_7416", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_7450",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Ito'} and your email is liam.ito5014@example.com. You are logical, optimistic. First, retrieve user details for Mason Lee using their email address mason.lee8809@example.com to ensure you have the correct information for booking. Then, search for flights from LAX to JFK on the desired travel date to find suitable options. This sequence ensures that you have Mason's details ready to proceed with booking a reservation on flight AA100 from LAX to JFK, departing on the desired date, once an appropriate flight is identified.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.lee8809@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "flight_number": "AA100", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_7450", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_patel_4950",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Kovacs'} and your email is james.kovacs1201@example.com. You are direct, organized, logical. Book reservation for Mason Patel on flight AA1234 departing from ORD, specifying seat preference and baggage requirements.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_patel_4950", "flight_number": "AA1234", "departure_airport": "ORD", "seat_preference": "aisle", "baggage": "1 checked bag"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_lopez_1974",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Martin'} and your email is noah.martin5657@example.com. You are logical, cautious, organized. First, use get_user_details to retrieve the user ID for Juan Lopez using the email juan.lopez8898@example.com. Once you have identified Juan's user ID, list all available airports to determine the nearest airport to his location. This information will be crucial for ensuring Juan's travel arrangements are efficiently managed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.lopez8898@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_gonzalez_6040",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Jackson'} and your email is james.jackson9342@example.com. You are confident, direct, organized, flexible. Book reservation for user ID obtained for flight AA100 from JFK to LAX on the specified date, considering user preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_gonzalez_6040", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "preferences": {"seat_preference": "aisle", "meal_preference": "vegetarian"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_brown_5782",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Rossi'} and your email is amelia.rossi3096@example.com. You are flexible, logical, optimistic. First, retrieve user details for Raj Brown using email raj.brown6519@example.com to verify existing reservations. Once confirmed, proceed to search for flights departing from airport ID A123 to destination airport ID A456 on the desired travel dates to ensure availability.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.brown6519@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_brown_5782"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "destination_airport_id": "A456", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_garcia_4633",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Kim'} and your email is ivan.kim8149@example.com. You are direct, cautious, independent. First, book a reservation for Isabella Garcia on flight AA123 from Los Angeles (LAX) to New York (JFK) on 2023-11-15. Once the booking is confirmed, proceed to get the reservation details to confirm her seat assignment. This ensures that Isabella has a confirmed seat and allows for any necessary adjustments before her travel date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_garcia_4633", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "isabella_garcia_4633"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_4151",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Wilson'} and your email is yusuf.wilson1006@example.com. You are cautious, organized, flexible, logical. First, search for flights from JFK to LAX on the preferred date of travel to find the best options for user Isabella Khan. Once you have identified the suitable flight, book a reservation for Isabella Khan on flight F123 from JFK to LAX, ensuring her seating preference is an aisle seat. After the reservation is confirmed, check-in for Isabella Khan on flight F123 to secure her seat and obtain her boarding pass.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-10-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_4151", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "isabella_khan_4151", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_rossi_7655",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi9097@example.com. You are direct, organized, patient. Retrieve user details for Sofia Rossi using email sofia.rossi8377@example.com to verify user ID. Once you have confirmed her user ID, proceed to book a reservation for Sofia Rossi on flight F1234 from JFK to LAX, ensuring to use her user ID and her preferred seating option. After successfully booking the reservation, check in Sofia Rossi for her flight F1234 using her reservation ID to receive a boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_rossi_7655", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sofia_rossi_7655", "flight_number": "F1234", "reservation_id": "res_12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_ito_8898",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Santos'} and your email is sophia.santos7908@example.com. You are independent, polite. First, search for flights from airport ID A001 to airport ID A002 on date '2023-11-15' to find available options. Once you have identified a suitable flight, proceed to book a reservation for user ID U456 on flight ID F123 with seat choice '12A' and meal preference 'vegetarian'. After successfully booking the reservation, check in user ID U456 for flight ID F123 to obtain the boarding pass, ensuring a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A001", "arrival_airport_id": "A002", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_ito_8898", "flight_id": "F123", "seat_choice": "12A", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "raj_ito_8898", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7267",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Khan'} and your email is amelia.khan7634@example.com. You are logical, organized, direct. First, get_user_details for user 'liam.smith3091@example.com' to retrieve user ID and ensure correct user context. Once you have confirmed the user details, calculate best flight options for user 'liam.smith3091@example.com' from 'JFK' to 'LAX' based on price and schedule to provide them with the most efficient travel itinerary.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.smith3091@example.com"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "liam_smith_7267", "from": "JFK", "to": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_thomas_8955",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Smith'} and your email is ava.smith2792@example.com. You are optimistic, logical, organized, direct. Book reservation for Liam Thomas on flight AA123 from JFK to LAX on October 25, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_thomas_8955", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_ahmed_6699",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Gonzalez'} and your email is noah.gonzalez5162@example.com. You are flexible, patient, optimistic, logical. First, get the user details for Aarav Ahmed (aarav.ahmed6812@example.com) to retrieve his user ID and review his reservation history. Next, search for flights from Airport A123 to Airport B456 on Aarav Ahmed's preferred travel dates. Once you have identified a suitable flight, proceed to book the reservation using the obtained user ID, selecting flight F789 with Aarav's seat preference and payment details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.ahmed6812@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "aarav_ahmed_6699"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_ahmed_6699", "flight_id": "F789", "seat_preference": "window", "payment_details": {"card_number": "1234567812345678", "expiry_date": "12/25", "cvv": "123"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_2126",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim1896@example.com. You are patient, organized, direct, logical. Book reservation for user Harper Garcia from JFK to LAX on flight AA123 for 2023-11-15 in economy class. Once the booking is confirmed, get reservation details for Harper Garcia to confirm booking information and retrieve reservation ID. This ensures that Harper's travel plans are accurately recorded and ready for any further actions, such as check-in or modifications.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_garcia_2126", "first_name": "Harper", "last_name": "Garcia", "email": "harper.garcia@example.com", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "harper_garcia_2126", "first_name": "Harper", "last_name": "Garcia"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Garcia'} and your email is sophia.garcia3812@example.com. You are optimistic, organized, flexible, polite. First, book a reservation on flight F1234 for user ID U001, ensuring to note their seat preference and meal choice to enhance their travel experience. Once the reservation is confirmed, proceed to check in for reservation R9021 to secure their seat and obtain the boarding pass, ensuring a smooth and hassle-free travel process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F1234", "user_id": "james_ahmed_4322", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R9021", "user_id": "james_ahmed_4322"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_davis_4522",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Lopez'} and your email is anya.lopez6991@example.com. You are organized, cautious, confident, polite. Please search available flights from airport A123 to airport A456 on 2023-11-25. Once you have identified suitable options, proceed to book a reservation for user U001 (Ivan Davis) on flight F789 from airport A123 to airport A456. This task is part of ensuring Ivan Davis's travel arrangements are confirmed and seamless.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_davis_4522", "flight_id": "F789", "departure_airport": "A123", "arrival_airport": "A456", "date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_kim_6383",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis6849@example.com. You are logical, organized, cautious. Use the get_user_details tool with the parameter email set to noah.kim2865@example.com to retrieve Noah Kim's user ID. Then, use the book_reservation tool with user_id set to Noah Kim's user ID, departure_airport set to LAX, arrival_airport set to JFK, flight_number set to AA100, and date set to 2023-11-20 to book a flight. This task is part of ensuring that all executive travel arrangements are confirmed for the upcoming business meeting in New York.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_kim_6383", "departure_airport": "LAX", "arrival_airport": "JFK", "flight_number": "AA100", "date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_7360",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Taylor'} and your email is noah.taylor2496@example.com. You are cautious, flexible, patient. First, get_user_details for Ethan Nguyen using email ethan.nguyen6753@example.com to retrieve user ID, as he is interested in booking a flight. Next, check_flight_status for flight F123 from airport JFK to LAX for the date 2023-12-15 to verify schedule and availability, ensuring that Ethan's preferred travel date and time are confirmed. Finally, book_reservation for user ID U001 on flight F123 from JFK to LAX on 2023-12-15 with seat preference window, providing Ethan with his desired seating arrangement and securing his travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.nguyen6753@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_nguyen_7360", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_garcia_3316",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Moore'} and your email is aarav.moore8670@example.com. You are logical, direct, cautious, confident. Retrieve user details for Raj using email raj.garcia9382@example.com to verify user ID. Once you have confirmed Raj's user ID, proceed to search for flights from JFK International Airport to Los Angeles International Airport on Raj's preferred travel date. This will ensure that you have the necessary information to assist Raj in booking his travel efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.garcia9382@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_garcia_3316"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_moore_2080",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Garcia'} and your email is ethan.garcia2794@example.com. You are organized, polite. First, retrieve user details for Olivia Moore using email olivia.moore1716@example.com to verify account information and ensure her profile is up-to-date. Next, list all available airports to identify departure and destination options for Olivia Moore, focusing on flights departing from JFK and arriving at LAX. Finally, book a reservation for Olivia Moore on flight FL123 from JFK to LAX on October 25, 2023, ensuring to include her seat preference and meal options to enhance her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.moore1716@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_moore_2080", "flight_number": "FL123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-25", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johnson_6882",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Davis'} and your email is omar.davis7857@example.com. You are polite, cautious. Book a reservation for Fatima Johnson from JFK Airport to LAX Airport on flight ID F123 for date 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johnson_6882", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15", "passenger_name": "Fatima Johnson"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_santos_2092",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Lee'} and your email is daiki.lee6987@example.com. You are confident, direct, logical. Retrieve user details for Mia Santos using email mia.santos3745@example.com to confirm user ID for reservation processing. Once you have confirmed the user ID, proceed to book a reservation for Mia Santos on flight AA123 from JFK to LAX on 2023-11-15. This sequence ensures that Mia Santos is properly booked for her upcoming flight, streamlining the reservation process in preparation for subsequent check-in procedures.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.santos3745@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_santos_2092", "flight_number": "AA123", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_wilson_8866",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are logical, optimistic, patient. Book_reservation for Harper Wilson using user ID obtained, departing from A001 to arrival airport A002 on flight F123.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_wilson_8866", "departure_airport": "A001", "arrival_airport": "A002", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_li_3668",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Anderson'} and your email is lei.anderson8099@example.com. You are patient, logical. First, retrieve user details for Mia Li using email mia.li3818@example.com to verify her user ID. Once you have confirmed Mia Li's user ID, proceed to check her in for reservation ID R456 to secure her seat assignment. This ensures that Mia Li is ready for her upcoming flight with a confirmed seat, enhancing her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.li3818@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mia_li_3668", "reservation_id": "R456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_anderson_8718",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Davis'} and your email is sophia.davis4814@example.com. You are patient, confident, direct. Book reservation for Sofia Anderson on flight F123 from JFK to LAX on 2023-12-15, using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_anderson_8718", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "passenger_name": "Sofia Anderson"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_johnson_6495",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Santos'} and your email is ava.santos7003@example.com. You are organized, cautious. First, retrieve user details for Raj Johnson to confirm identity and account status. Once confirmed, proceed to search for flights departing from John F. Kennedy International Airport (JFK) to Los Angeles International Airport (LAX) on December 10, 2023. After identifying available flights, book a reservation for user Raj Johnson on Flight F123 from JFK to LAX with a seat preference for a window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "raj_johnson_6495"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-10"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_johnson_6495", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_7287",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are direct, polite, organized, optimistic. First, get user details for Sofia Kim using email sofia.kim1937@example.com to confirm her identity for booking purposes. Once her identity is confirmed, proceed to book a reservation for Sofia Kim on flight ID F1234 from JFK International Airport to LAX International Airport on 2023-11-15. After successfully booking the reservation, check in Sofia Kim for reservation ID R5678 for the same flight, ensuring she is ready for her journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.kim1937@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_7287", "flight_id": "F1234", "departure_airport": "JFK International Airport", "arrival_airport": "LAX International Airport", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sofia_kim_7287", "reservation_id": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Santos'} and your email is harper.santos7981@example.com. You are optimistic, cautious, polite. First, get user details for user Sophia Wilson (sophia.wilson3098@example.com) to retrieve her user ID and preferences, as this will help us personalize her travel experience. Next, list all airports to find available departure and arrival options for user Sophia Wilson, ensuring we can offer her the most convenient flight choices. Finally, book a reservation for user Sophia Wilson with user ID U102 for Flight F123 from airport A456 to airport A789 on 2023-11-25, securing her travel plans well in advance.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "sophia_wilson_1550"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_id": "F123", "departure_airport_id": "A456", "arrival_airport_id": "A789", "date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_garcia_1177",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Kovacs'} and your email is ava.kovacs1250@example.com. You are direct, optimistic. Please search for flights from JFK to LAX on December 15th, 2023, to find available options. Once you have identified a suitable flight, proceed to book a reservation for Aarav Garcia on flight F1234 from JFK to LAX on December 15th, 2023, and retrieve the reservation ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_garcia_1177", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_li_1537",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kim'} and your email is mia.kim6850@example.com. You are optimistic, independent, flexible, polite. First, book a reservation for Olivia Li using her user ID, selecting flight \"AA100\" from JFK to LAX. Once the reservation is confirmed, calculate the total cost of Olivia's reservation, ensuring to include any applicable taxes and fees. This will help Olivia understand the full expense of her travel and prepare accordingly.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_li_1537", "flight_id": "AA100", "departure": "JFK", "destination": "LAX"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "olivia_li_1537", "include_taxes": True, "include_fees": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_silva_5208",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Martin'} and your email is isabella.martin5652@example.com. You are logical, direct. Retrieve user details for Evelyn Silva using the email evelyn.silva5743@example.com to confirm personal information. Then, search for available flights from LAX to JFK for the desired travel dates specified by Evelyn Silva. Once you have identified suitable options, book a reservation for Evelyn Silva on flight F1234 from LAX to JFK, including seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.silva5743@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "evelyn_silva_5208"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_silva_5208", "flight_number": "F1234", "departure": "LAX", "destination": "JFK", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_brown_8416",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are logical, organized, independent. Book a reservation for Yusuf Brown on flight F1234 from JFK to LAX on 2023-11-15. After booking the reservation, check in Yusuf Brown for the same flight using reservation ID R5678 to secure his boarding pass. This ensures a smooth travel experience by confirming his seat and preparing for any potential changes in the flight schedule.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_brown_8416", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Yusuf Brown"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_brown_8416", "reservation_id": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_smith_8416",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Hernandez'} and your email is ethan.hernandez1785@example.com. You are optimistic, cautious, direct. Book reservation for Olivia Smith on flight number AA5678 from JFK to LAX, and send confirmation to olivia.smith7972@example.com.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_smith_8416", "flight_number": "AA5678", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": "Olivia Smith", "email": "olivia.smith7972@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_anderson_3457",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Garcia'} and your email is liam.garcia1258@example.com. You are organized, confident. Search for available flights from LAX to JFK on November 15, 2023, for Juan Anderson. Once you have identified a suitable flight, proceed to book a reservation for Juan Anderson on flight F123 from LAX to JFK on November 15, 2023, ensuring seat availability. If the flight is unavailable or there are any discrepancies with the user ID, promptly notify Juan Anderson via email and suggest alternative flights or solutions.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_anderson_3457", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_jackson_2190",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6687@example.com. You are patient, direct, independent. Retrieve user details for Emma Jackson using email emma.jackson2892@example.com to confirm user ID for booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.jackson2892@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Sanchez'} and your email is amelia.sanchez3631@example.com. You are direct, patient, polite. First, retrieve user details for Mia Taylor using email mia.taylor1368@example.com to confirm her user ID. Once you have confirmed her user ID, search for available flights from JFK to LAX on December 15, 2023. This is to ensure Mia can plan her travel in advance and secure a seat on a suitable flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.taylor1368@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ito'} and your email is mia.ito3567@example.com. You are direct, patient. First, book a reservation for Ethan Li on flight F1234 from JFK to LAX on 2023-12-15, with a seating preference for a window seat in economy class. Once the reservation is confirmed, retrieve the reservation details to confirm the booking reference number. Finally, check in Ethan Li for flight F1234 departing on 2023-12-15 to secure his boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_9571", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ethan_li_9571", "flight_number": "F1234", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ethan_li_9571", "flight_number": "F1234", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_silva_6969",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6819@example.com. You are direct, optimistic, polite, independent. Book a reservation for Harper Silva from LAX to JFK on 2023-11-15 with seat preference as window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_silva_6969", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_anderson_8718",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Hernandez'} and your email is amelia.hernandez8076@example.com. You are organized, confident, logical, optimistic. Search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on November 15, 2023, for Sofia Anderson. Once you have identified the available options, proceed to book a reservation for Sofia Anderson on flight F123 from LAX to JFK on November 15, 2023, using her account details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_anderson_8718", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_kovacs_1132",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Ito'} and your email is fatima.ito3012@example.com. You are patient, logical, independent. Check flight status for Ethan Kovacs' upcoming flight using reservation ID R5678",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"reservation_id": "R5678", "user_id": "ethan_kovacs_1132"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_sanchez_6008",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are confident, flexible. Retrieve user details for Juan Sanchez using email juan.sanchez9043@example.com to confirm identity, and then search for available flights from JFK International Airport to LAX with departure date on 2023-11-15. This will ensure that Juan Sanchez's identity is verified before proceeding to find suitable flight options for his travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.sanchez9043@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "juan_sanchez_6008"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_anderson_8585",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Silva'} and your email is harper.silva8324@example.com. You are cautious, confident, patient. First, retrieve user details for Anya Anderson using email anya.anderson2168@example.com to confirm identity. Once confirmed, proceed to search for flights from Airport ID A001 to Airport ID A002 on the desired travel date for Anya. After identifying a suitable flight, book a reservation for Anya on Flight F123 from Airport ID A001 to Airport ID A002, ensuring to include her seat preference and meal choice for a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.anderson2168@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_anderson_8585", "flight_id": "F123", "departure_airport_id": "A001", "arrival_airport_id": "A002", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_kim_4489",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johansson'} and your email is mei.johansson6451@example.com. You are cautious, organized. First, use the Get_user_details task with the email 'emma.kim1896@example.com' to retrieve the user ID and preferences necessary for assisting a client with their travel needs. Next, proceed with the List_all_airports task to provide a selection of available departure and destination airports to ensure the client can choose their preferred travel route. Finally, complete the Book_reservation task for user ID 'U123' with flight ID 'AA100', departing from 'JFK' and arriving at 'LAX', while ensuring a 'window' seat preference is secured, aligning with the client's comfort and travel requirements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.kim1896@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_kim_4489", "flight_id": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_1941",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Kim'} and your email is isabella.kim4342@example.com. You are direct, logical. First, retrieve user details for Fatima Rossi using her email fatima.rossi5024@example.com to verify her account information. Once her account is verified, search for flights departing from JFK airport to LAX airport on December 15, 2023, to find suitable options for Fatima. After identifying a suitable flight, book a reservation for Fatima Rossi on flight F123 departing from JFK to LAX on December 15, 2023, using her user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5024@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_1941", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_silva_7424",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Davis'} and your email is chen.davis3247@example.com. You are flexible, cautious. Retrieve user details for Ava Silva using email ava.silva9457@example.com to verify her account. Once verified, search and list available flights from JFK to LAX on December 15, 2023, to find suitable options for Ava Silva.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.silva9457@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "ava_silva_7424"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_garcia_8768",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Thomas'} and your email is mei.thomas9437@example.com. You are optimistic, direct, logical, independent. First, retrieve Ethan Garcia's user details using email ethan.garcia2794@example.com to gather user-specific preferences. Once you have his preferences, search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15, 2023, for Ethan Garcia. After identifying the best option, book a reservation for Ethan Garcia on flight F1234 from LAX to JFK on December 15, 2023, in economy class, ensuring it aligns with his preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.garcia2794@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_garcia_8768", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_moore_9694",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are flexible, organized. \"Get user details for Sophia Moore using email sophia.moore3998@example.com to retrieve user ID\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.moore3998@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_jackson_4713",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li9881@example.com. You are independent, optimistic, patient, flexible. Book reservation for user lucas.jackson5157@example.com from JFK to LAX on flight AA123 for 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_jackson_4713", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_davis_8874",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Martin'} and your email is mohamed.martin3438@example.com. You are patient, confident, optimistic. Retrieve user details for Sophia Davis using email sophia.davis4814@example.com to confirm user ID for reservation.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.davis4814@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_anderson_7659",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li8768@example.com. You are patient, logical, direct, flexible. Begin by retrieving user details for Harper Anderson using email harper.anderson5822@example.com to confirm user identity. Once identity is confirmed, proceed to search for flights from JFK to LAX departing on 2023-11-15 to find suitable options for Harper Anderson. This will ensure we have verified the user's identity before presenting them with the most appropriate flight options available.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.anderson5822@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "harper_anderson_7659"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ito_3194",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed5466@example.com. You are cautious, confident. First, search for available flights from Los Angeles (LAX) to Tokyo (NRT) on December 15, 2023, to ensure there are suitable options for our clients. Once you have verified the availability, proceed to book a reservation for the user ID associated with Mia Ito on flight F1234 from LAX to NRT. After completing the booking, get the reservation details for Mia's booking to confirm the flight and seat assignment, ensuring all information is accurate and up-to-date for her upcoming travel.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "NRT", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ito_3194", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "NRT"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_ito_3194"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_lopez_9956",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Patel'} and your email is james.patel7281@example.com. You are organized, confident, polite, flexible. Search for flights from A001 to A002 on Ivan Lopez's preferred date to find suitable options. Once you have identified the best flight option, proceed to book a reservation for Ivan Lopez on flight F789 with user ID U123 and payment details. This ensures that Ivan has a confirmed booking on his desired route and date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_lopez_9956", "flight_id": "F789", "payment_details": {"card_number": "1234567812345678", "expiry_date": "12/25", "cvv": "123"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_garcia_1905",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Thomas'} and your email is yusuf.thomas4677@example.com. You are organized, polite. First, retrieve user details for Yara Garcia to confirm user ID and email. Once confirmed, proceed to book a reservation for user ID Y123 for flight F1234 from JFK to LAX in economy class. Ensure all details are accurate and provide a confirmation email to the user upon successful booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yara_garcia_1905"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_garcia_1905", "flight_id": "F1234", "departure": "JFK", "destination": "LAX", "class": "economy"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "yara_garcia_1905", "action": "send_confirmation_email", "email": "yara.garcia@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_silva_9133",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johansson'} and your email is mei.johansson6451@example.com. You are organized, polite. First, get user details for user Mia Silva (mia.silva8990@example.com) to retrieve user ID and preferences. Once you have obtained the user ID, proceed to book a reservation for the retrieved user ID on flight F123 from JFK to LAX on December 15, 2023. This task is crucial as it ensures that Mia Silva's travel arrangements are confirmed in a timely manner, aligning with her preferences and ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.silva8990@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_silva_9133", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lee_4334",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Jackson'} and your email is harper.jackson7583@example.com. You are cautious, patient, independent, organized. Retrieve user details for Anya Lee using her email anya.lee6655@example.com to confirm user ID and preferences. Once you have confirmed Anya Lee's user ID and preferences, search for available flights from JFK International Airport to LAX International Airport on her desired travel date. Ensure that the flight options align with her seat preference and meal options to provide a seamless booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.lee6655@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_lee_4334"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="get_aircraft_info",
                kwargs={"flight_number": "AA123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lee_4334", "flight_number": "AA123", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_rossi_4467",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Kim'} and your email is james.kim2689@example.com. You are cautious, logical, confident. First, retrieve user details for Daiki Rossi using the email daiki.rossi1310@example.com to ensure all personal information is accurate for the upcoming travel. Next, proceed to book a reservation for Daiki Rossi on flight F123 from Narita International Airport to Los Angeles International Airport on October 15, 2023, ensuring all preferences and requirements are met. Finally, check-in Daiki Rossi for flight F123, selecting a window seat if available, to enhance his travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.rossi1310@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_rossi_4467", "flight_number": "F123", "departure_airport": "Narita International Airport", "arrival_airport": "Los Angeles International Airport", "departure_date": "2023-10-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "daiki_rossi_4467", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_9794",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Nguyen'} and your email is isabella.nguyen8385@example.com. You are optimistic, direct, polite, independent. Please start by retrieving user details for Liam Jackson using the email liam.jackson2763@example.com. Once you have confirmed his details, proceed to book a reservation for Liam Jackson from LAX to JFK on flight AA123 for 2023-11-15. After successfully booking the flight, get the reservation details to confirm his seat assignment. This will ensure that all necessary information is accurate and ready for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.jackson2763@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_9794", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "liam_jackson_9794", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_santos_6163",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Gonzalez'} and your email is ivan.gonzalez2763@example.com. You are confident, organized. Calculate the cost for booking a round-trip reservation for Lei Santos from LAX to JFK, including tax and fees. Once you have determined the cost, proceed to book the reservation for Lei Santos on the available flight with the best price and preferred timing. After securing the booking, obtain the reservation details to verify that all information is correct and complete. This sequence ensures a smooth and efficient booking process for Lei Santos, enhancing customer satisfaction and maintaining high service standards.",
        actions=[
            Action(
                name="calculate",
                kwargs={"from_airport": "LAX", "to_airport": "JFK", "trip_type": "round-trip", "user_id": "lei_santos_6163"}
            ),
            Action(
                name="book_reservation",
                kwargs={"from_airport": "LAX", "to_airport": "JFK", "trip_type": "round-trip", "user_id": "lei_santos_6163", "passenger_name": "Lei Santos"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lei_santos_6163"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_davis_8274",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Nguyen'} and your email is yusuf.nguyen9677@example.com. You are cautious, direct, patient. Book reservation for Mason Davis on flight F12345 with window seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_davis_8274", "flight_number": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_taylor_7043",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Thomas'} and your email is mia.thomas9453@example.com. You are optimistic, independent, organized. Book a reservation for James Taylor using user ID U12345 on flight AA123 from JFK to LAX on 2023-12-15. After booking, calculate the total cost for the reservation, including taxes and fees, to ensure accurate billing and provide James with a detailed breakdown of his travel expenses.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "AA123"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "AA123", "include_taxes": True, "include_fees": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_lopez_2451",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Sanchez'} and your email is juan.sanchez9043@example.com. You are cautious, flexible. First, get user details for Chen Lopez using email chen.lopez3735@example.com to retrieve user ID. Once you have the user ID, proceed to book a reservation for user ID U001 on flight ID F789 with seat preference 'aisle'. Ensure that the booking is confirmed and all details are accurate to provide a seamless travel experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.lopez3735@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_lopez_2451", "flight_id": "F789", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johansson_4039",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Ito'} and your email is mei.ito9153@example.com. You are organized, patient, flexible. First, retrieve user details for Mei Johansson using email mei.johansson6451@example.com to confirm her identity and ensure accurate information is on file. Once the user details are verified, proceed to book a reservation for Mei Johansson on flight F1234 from JFK to LAX on 2023-12-15. This will ensure that all necessary steps are taken for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johansson6451@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johansson_4039", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_khan_2521",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Khan'} and your email is liam.khan7273@example.com. You are cautious, organized. Retrieve user details for Liam Khan using the email liam.khan7273@example.com to verify user ID. Once the user ID is verified, book a reservation for Liam Khan on flight FJ1234 from JFK to LAX on 2023-11-15. After booking, get reservation details for Liam Khan's booking on flight FJ1234 to ensure all information is accurate.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.khan7273@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_khan_2521", "flight_number": "FJ1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "liam_khan_2521", "flight_number": "FJ1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_anderson_8585",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim1896@example.com. You are cautious, logical, optimistic. Retrieve user details for Anya Anderson using email anya.anderson2168@example.com to confirm user ID and preferences. Once you have confirmed her details, search for flights from JFK Airport to LAX Airport on the desired travel date for Anya Anderson. After identifying a suitable flight, book reservation for flight F1234 for user Anya Anderson, including seat selection and meal preferences, ensuring all her preferences are met for a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.anderson2168@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_anderson_8585", "flight_id": "F1234", "seat_selection": "12A", "meal_preferences": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_2677",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Sanchez'} and your email is raj.sanchez1380@example.com. You are independent, logical, cautious, optimistic. As part of ensuring a smooth travel experience for our customers, first book a reservation for user chen.nguyen2563@example.com on flight AA123 from JFK to LAX on March 15, 2024. Once the reservation is confirmed, calculate the total baggage fees for this user on the same flight, considering they have 2 checked bags.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_2677", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2024-03-15"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "chen_nguyen_2677", "flight_number": "AA123", "baggage_count": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_kovacs_8269",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Rossi'} and your email is olivia.rossi1039@example.com. You are independent, flexible. First, retrieve user details for Mia Kovacs using email mia.kovacs4378@example.com to confirm identity. Once her identity is confirmed, search for flights from JFK International Airport to LAX International Airport on December 15, 2023. After identifying suitable flight options, book a reservation for Mia Kovacs on flight F1234 from JFK to LAX with a preferred window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.kovacs4378@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mia_kovacs_8269"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_kovacs_8269", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_2421",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Johnson'} and your email is ivan.johnson2471@example.com. You are logical, patient. First, retrieve user details for Lucas Rossi using email lucas.rossi4133@example.com to confirm his user ID. Once you have confirmed the user ID, proceed to search for flights from JFK to LAX on 2023-11-15 for Lucas Rossi. This task is crucial to ensure that Lucas Rossi can travel on the specified date with all necessary details accurately recorded in our system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.rossi4133@example.com"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lucas_rossi_2421", "origin": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5753",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez6891@example.com. You are polite, patient, direct. Book reservation for Anya Sanchez on flight ID 'FL1234' using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_sanchez_5753", "flight_id": "FL1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_taylor_3449",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are cautious, polite, independent. Book a reservation for user ID U12345 on flight AA100 from JFK to LAX on 2023-11-15, seat 12A",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_taylor_3449", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_number": "12A", "passenger_first_name": "Mohamed", "passenger_last_name": "Moore", "passenger_email": "mohamed.moore7778@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_muller_9002",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Wilson'} and your email is mei.wilson6813@example.com. You are polite, optimistic, logical. Retrieve user details for Sophia Muller using email sophia.muller2270@example.com to confirm user ID. Then, search for available flights from JFK to LAX on December 15, 2023, for the confirmed user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.muller2270@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "sophia_muller_9002"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15", "user_id": "sophia_muller_9002"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_brown_8250",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Nguyen'} and your email is omar.nguyen7292@example.com. You are cautious, optimistic, logical. First, get user details for chen.brown1849@example.com to verify user ID and preferences for booking. Once you have confirmed the user ID, proceed to search for flights from JFK to LAX on 2023-11-15 for the identified user. This sequence ensures that the flight search is tailored to the user's verified preferences, enhancing the booking experience and increasing customer satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.brown1849@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_kovacs_5869",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Lee'} and your email is lucas.lee7057@example.com. You are logical, independent, flexible. First, retrieve user details for Ethan Kovacs using email ethan.kovacs1120@example.com to verify user information. Once verified, proceed to book a reservation for Ethan Kovacs from JFK to LAX on flight AA123 on 2023-10-15 in economy class. After booking, check-in Ethan Kovacs for flight AA123 on 2023-10-15 to ensure confirmed boarding pass issuance.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.kovacs1120@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_kovacs_5869", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "class": "economy"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ethan_kovacs_5869", "flight_number": "AA123", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_martin_3587",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Khan'} and your email is evelyn.khan8752@example.com. You are logical, confident. First, retrieve the user details for the customer with the email isabella.martin5652@example.com to obtain their user ID and preferences. Once you have the user ID, proceed to book a round-trip flight for this user from JFK to LAX departing on 2023-11-25 and returning on 2023-12-02. Ensure that the booking aligns with any preferences retrieved during the user details process to enhance customer satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.martin5652@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_martin_3587", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-25", "return_date": "2023-12-02"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_7360",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Rossi'} and your email is fatima.rossi5152@example.com. You are confident, polite, optimistic. book_reservation with flight_id F1234 for user_id U5678 (ethan.nguyen6753@example.com) on 2023-11-20, seat preference: aisle",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F1234", "user_id": "ethan_nguyen_7360", "date": "2023-11-20", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_garcia_8795",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Johansson'} and your email is omar.johansson3839@example.com. You are confident, direct. First, get user details for Mason Garcia using email mason.garcia7231@example.com to ensure accurate information for the booking process. Next, book a reservation for Mason Garcia on flight AA123 from JFK to LAX on 2023-12-15, with a seating preference of window. Finally, check in Mason Garcia for flight AA123 from JFK on 2023-12-15 using the reservation ID R5678 to secure his boarding pass and confirm his seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.garcia7231@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_garcia_8795", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mason_garcia_8795", "reservation_id": "R5678", "flight_number": "AA123", "departure_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_lopez_2532",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Patel'} and your email is yara.patel6643@example.com. You are logical, confident, polite, optimistic. First, retrieve user details for Noah Lopez using email noah.lopez9258@example.com to confirm identity. Once identity is confirmed, proceed to book a reservation for Noah Lopez on Flight F1234 from LAX to JFK with preferred seating in economy class. After the booking is successfully made, check in Noah Lopez for Flight F1234 to secure his boarding pass and seat assignment.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.lopez9258@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_lopez_2532", "flight_number": "F1234", "departure": "LAX", "arrival": "JFK", "class": "economy"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "noah_lopez_2532", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_li_7953",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed5466@example.com. You are direct, confident, optimistic. First, retrieve user details for Juan Li using the email juan.li3600@example.com to confirm his user ID. Once you have confirmed the user ID, proceed to book a reservation for Juan Li from LAX to JFK on December 15th, 2023. After booking the reservation, retrieve the reservation details for Juan Li to confirm the booking and obtain the reservation ID. This sequence ensures that Juan Li's travel plans are accurately recorded and confirmed in our system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.li3600@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_li_7953", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "juan_li_7953"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_li_5039",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Moore'} and your email is sophia.moore3998@example.com. You are patient, direct, confident. Retrieve user details for Daiki Li using email daiki.li2854@example.com to confirm user ID for reservation. Once confirmed, search for available flights from NRT to LAX on Daiki's preferred travel date, ensuring the selection of a direct flight. After identifying a suitable flight, book a reservation for Daiki Li on flight F123 departing from NRT to LAX, specifying his seat preference and meal choice.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.li2854@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "daiki_li_5039"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_li_5039", "flight_number": "F123", "departure": "NRT", "arrival": "LAX", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_li_7869",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Garcia'} and your email is ava.garcia2797@example.com. You are patient, organized. Book reservation for Mohamed Li on flight ID F12345 with seat preference in business class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_li_7869", "flight_id": "F12345", "seat_class": "business"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_martin_8348",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Taylor'} and your email is liam.taylor5916@example.com. You are cautious, direct. First, get user details for Harper Martin using email harper.martin5272@example.com to retrieve user ID. Once you have the user ID, book a reservation for Harper Martin from airport A123 to airport A456 on flight F7890 using user ID U9001. This ensures that Harper Martin's travel plans are confirmed and aligned with our airline's booking system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.martin5272@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_martin_8348", "from_airport": "A123", "to_airport": "A456", "flight_number": "F7890"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_santos_5621",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Li'} and your email is mia.li3818@example.com. You are direct, independent, organized, patient. Search for available flights from LAX to JFK on the desired date using the check_flight_status tool.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_davis_4420",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Hernandez'} and your email is mei.hernandez3561@example.com. You are confident, patient. Search for flights from JFK to LAX on 2023-11-15 for Ethan Davis using his user ID, and once you find a suitable option, proceed to book a reservation for Ethan Davis on flight F12345 from JFK to LAX on 2023-11-15 using his user ID. This will ensure that Ethan has a confirmed seat on the desired flight, facilitating his travel plans efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_davis_4420", "flight_id": "F12345", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Garcia'} and your email is olivia.garcia1660@example.com. You are polite, flexible. Retrieve user details for Ivan Rossi using email ivan.rossi2633@example.com to confirm user ID. Once you have confirmed Ivan's user ID, list all available airports to identify the nearest airport for user Ivan Rossi. After identifying the nearest airport, check flight status for flight F1234 departing from that airport. Ensure that the flight is operating as scheduled. Finally, book a reservation for user ID U456 for flight F1234, making sure to select a seat that aligns with Ivan's cautious personality, such as an aisle seat near the front of the plane for easy access and exit.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.rossi2633@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_airport": "nearest_airport_code"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_number": "F1234", "seat_preference": "aisle", "seat_location": "front"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_patel_4950",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ito'} and your email is mia.ito3567@example.com. You are cautious, confident, flexible. Retrieve user details using email mason.patel6016@example.com to confirm user ID for reservation, then list all available airports to find the nearest departure airport for user Mason Patel. This will assist in efficiently planning Mason's travel by identifying the most convenient starting point for his journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.patel6016@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_li_3668",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith3091@example.com. You are optimistic, independent. Book a reservation for Mia Li on Flight ID F456 departing from Airport ID A123 to her destination.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_li_3668", "flight_id": "F456", "departure_airport_id": "A123", "passenger_name": "Mia Li"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_martin_5489",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Patel'} and your email is juan.patel4720@example.com. You are direct, cautious. First, retrieve user details for Chen Martin using email chen.martin3409@example.com to confirm identity and gather user ID. Once you have confirmed Chen Martin's identity, proceed to book a reservation for him on flight AA123 from LAX to JFK on 2023-11-15 using the obtained user ID and ensure you select his preferred seating. After securing the reservation, check-in Chen Martin for flight AA123 using the reservation ID to ensure his boarding pass is issued. This sequence will facilitate a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.martin3409@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_martin_5489", "flight_number": "AA123", "departure": "LAX", "arrival": "JFK", "date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "chen_martin_5489", "flight_number": "AA123", "reservation_id": "res_12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_9581",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Li'} and your email is james.li5284@example.com. You are independent, confident. Search for flights departing from LAX (Los Angeles International Airport) to JFK (John F. Kennedy International Airport) on December 15, 2023. Once you find a suitable flight, book a reservation for Lucas Hernandez on flight F1234 from LAX to JFK on December 15, 2023, in economy class. After booking, retrieve the reservation details to confirm the reservation ID and flight details, and send a confirmation email to lucas.hernandez8324@example.com with all the reservation and flight details included.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_9581", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy", "passenger_name": "Lucas Hernandez"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_hernandez_9581", "reservation_id": "R123456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_ahmed_6263",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Davis'} and your email is mei.davis8487@example.com. You are confident, patient. Book a reservation for Mohamed Ahmed on flight F1234 using user ID U001, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_ahmed_6263", "flight_number": "F1234", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_muller_7015",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito1753@example.com. You are confident, independent, logical, organized. Retrieve user details for Ivan Muller using email ivan.muller6623@example.com to verify user ID. Once you have confirmed the user ID, proceed to book a reservation for Ivan Muller on flight F1234. This sequence ensures that the booking is accurately linked to Ivan Muller's verified user account, maintaining the integrity of our customer records and enhancing the efficiency of our reservation process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.muller6623@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_muller_7015", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_taylor_2700",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Muller'} and your email is raj.muller1211@example.com. You are direct, cautious. Search for flights from LAX to JFK on Emma's preferred travel dates to ensure availability. Once you have confirmed the flight options, proceed to book a reservation for Emma on flight F123 from LAX to JFK using her user ID to secure her travel plans. After booking, get reservation details for Emma's booking on flight F123 to confirm the booking status and ensure all information is accurate and up-to-date.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure": "LAX", "arrival": "JFK", "date": "Emma's preferred travel dates"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_taylor_2700", "flight_number": "F123", "departure": "LAX", "arrival": "JFK"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "emma_taylor_2700", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_taylor_9065",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Garcia'} and your email is noah.garcia7790@example.com. You are organized, optimistic, independent. Please book a reservation for user Sophia Taylor on flight AA123 departing from JFK to LAX on 2023-11-15. After securing the outbound flight, proceed to book a reservation for her return on flight AA124 from LAX to JFK on 2023-11-22. Once the return flight is confirmed, obtain the reservation details for the newly booked return flight to ensure all information is accurate and up-to-date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_taylor_9065", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_taylor_9065", "flight_number": "AA124", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-22"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sophia_taylor_9065", "flight_number": "AA124", "departure_date": "2023-11-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_johansson_8847",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Hernandez'} and your email is mei.hernandez3561@example.com. You are patient, polite, organized, logical. Book reservation for James Johansson on flight F1234, ensuring to select an organized seating option like an aisle seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_johansson_8847", "flight_number": "F1234", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_martin_1679",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Brown'} and your email is chen.brown1849@example.com. You are independent, cautious. First, get_user_details for user ID U123 to retrieve Mohamed Martin's profile information to ensure all personal details are accurate and up-to-date. Next, book_reservation with user ID U123, flight ID F789, and seat preference (window) for Mohamed Martin, ensuring he has a comfortable seat for his upcoming journey. Finally, check_flight_status for flight ID F789 again to ensure there are no further delays before Mohamed Martin's departure, providing him with the most current information for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mohamed_martin_1679"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_martin_1679", "flight_id": "F789", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_nguyen_7778",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Johansson'} and your email is james.johansson1491@example.com. You are direct, patient, polite, cautious. First, get user details for user Amelia Nguyen (amelia.nguyen8380@example.com) to verify account information. Once her account is verified, search for flights from JFK International Airport to LAX International Airport on 2023-12-15. After identifying the available options, proceed to book a reservation for user Amelia Nguyen on flight F1234 from JFK to LAX for 2023-12-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "amelia_nguyen_7778"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_nguyen_7778", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_patel_4950",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Wilson'} and your email is amelia.wilson7199@example.com. You are cautious, polite. Search for flights from JFK Airport to SFO Airport on November 15, 2023, for Mason Patel. Once you find a suitable flight, proceed to book a reservation for Mason Patel on flight F7890 with a seat preference for aisle seating.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "SFO"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mason_patel_4950"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_patel_4950", "flight_number": "F7890", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_1055",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen9719@example.com. You are polite, logical. First, get user details for Aarav Nguyen using email aarav.nguyen9719@example.com to ensure all personal information is up-to-date in the airline's system. Once the user details are confirmed, proceed to book a reservation for Aarav Nguyen on flight F123 with a preference for a window seat. This ensures that all necessary information is accurate for the booking process and that Aarav's seating preference is accommodated.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.nguyen9719@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_nguyen_1055", "flight_id": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_hernandez_8403",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are optimistic, logical. Book a reservation for Amelia Hernandez on flight F1234 from LAX to JFK on December 15th, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_hernandez_8403", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6613",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are flexible, cautious, patient, confident. Retrieve user details for Juan Patel using email juan.patel8215@example.com to verify user ID and preferences. Once verified, search for available flights from Airport ID A101 to Airport ID A202 on 2023-12-15 that match Juan's preferences. After finding a suitable flight, book a reservation for user ID U6789 on Flight ID F12345 with seat preference as aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.patel8215@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_patel_6613", "flight_id": "F12345", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_li_4844",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Nguyen'} and your email is omar.nguyen7292@example.com. You are optimistic, logical. Book a reservation for Noah Li with the user ID retrieved earlier on flight AA123 departing from JFK on 2023-12-15. Once the reservation is confirmed, get the reservation details for Noah Li's booking ID obtained from the previous booking task to ensure all information is accurate and the reservation is successfully recorded in the system.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_li_4844", "flight_number": "AA123", "departure_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"booking_id": "noah_li_4844_AA123_2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Sanchez'} and your email is raj.sanchez1048@example.com. You are confident, organized. First, get user details for Mia Taylor using email mia.taylor1368@example.com to retrieve her user ID. Once you have Mia's user ID, book a reservation for her on flight ID F123 from airport A789 to A321 on 2023-11-20. This will ensure her travel plans are confirmed and she is ready for her upcoming journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_taylor_2876", "flight_id": "F123", "departure_airport": "A789", "arrival_airport": "A321", "date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_rossi_1651",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ito'} and your email is james.ito8311@example.com. You are polite, direct, organized, optimistic. Retrieve user details for Amelia Rossi using email amelia.rossi4259@example.com to confirm identity before proceeding with booking. Once her identity is confirmed, search for flights from JFK Airport to LAX Airport on 2023-11-15 for user Amelia Rossi. After confirming flight availability and user preferences, book reservation for user Amelia Rossi on flight F123 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.rossi4259@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "amelia_rossi_1651"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_rossi_1651", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_li_8815",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Li'} and your email is ethan.li9943@example.com. You are direct, organized. First, retrieve user details for Mia Li (mia.li3308@example.com) to confirm her user ID for the reservation process. Once confirmed, search for available flights from JFK to LAX on December 15, 2023, ensuring that flight options align with her preferences. After identifying suitable options, proceed to book a reservation for Mia Li on flight F12345 from JFK to LAX on December 15, 2023, in economy class, ensuring all details are accurate and confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.li3308@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_li_8815", "flight_id": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_wilson_9173",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Gonzalez'} and your email is harper.gonzalez9176@example.com. You are confident, flexible. Search for available flights from LAX to JFK on April 15th, 2024, for a one-way trip, and once you find a suitable flight, book a reservation for user Liam Wilson on flight F123 from LAX to JFK on April 15th, 2024, with a seat preference as window. This will ensure that Liam has a confirmed booking for his planned travel, aligning with his preferences for a comfortable journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_wilson_9173", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2024-04-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_ito_4473",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Martin'} and your email is aarav.martin6155@example.com. You are confident, direct. First, get user details for Liam Ito using email liam.ito7299@example.com to verify user ID and preferences. Once you have confirmed Liam Ito's user ID and preferences, search for flights from SFO (San Francisco International Airport) to JFK (John F. Kennedy International Airport) on his preferred travel dates. After identifying a suitable flight, proceed to book a reservation for flight F123 from SFO to JFK for user ID U567, ensuring the seat preference aligns with Liam Ito's preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.ito7299@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure": "SFO", "arrival": "JFK", "user_id": "liam_ito_4473", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_6637",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Santos'} and your email is liam.santos3021@example.com. You are direct, confident. Book a flight reservation for user Yara Lee from JFK to LAX on December 15, 2023, with preferred seating in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_6637", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_rossi_4467",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Gonzalez'} and your email is yusuf.gonzalez6753@example.com. You are confident, cautious, independent, direct. First, book a flight reservation for user Daiki Rossi (email: daiki.rossi1310@example.com) from Tokyo (NRT) to Rome (FCO) on November 15, 2023. Once the booking is confirmed, check in Daiki Rossi for the flight using the booking reference number to ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_rossi_4467", "departure_airport": "NRT", "arrival_airport": "FCO", "departure_date": "2023-11-15", "passenger_name": "Daiki Rossi", "passenger_email": "daiki.rossi1310@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "daiki_rossi_4467", "booking_reference": "BOOKING_REF_12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_khan_5280",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Garcia'} and your email is olivia.garcia1660@example.com. You are logical, patient. First, retrieve user details for Amelia Khan using email amelia.khan7634@example.com to confirm user identity and gather user ID. Next, search for flights departing from JFK International Airport to LAX International Airport on 2023-11-15 for Amelia Khan. Once the flight is identified, book a reservation for Amelia Khan on flight F1234 from JFK to LAX with a seat preference of window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.khan7634@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_khan_5280", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_brown_1657",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Brown'} and your email is ivan.brown6973@example.com. You are patient, optimistic, logical, flexible. First, retrieve the user ID for Juan Brown by using his email juan.brown8989@example.com to ensure you have the correct user details. Once you have confirmed the user ID, proceed to book a reservation for Juan Brown, traveling from airport ID A567 to airport ID A890 on flight F1234 using the user ID U001. After successfully booking the reservation, obtain the reservation details for reservation ID R789 to confirm all booking details are accurate and complete.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.brown8989@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_brown_1657", "flight_id": "F1234", "from_airport_id": "A567", "to_airport_id": "A890"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_khan_8728",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Sanchez'} and your email is liam.sanchez8750@example.com. You are independent, patient. Retrieve user details for Amelia Khan using email amelia.khan3954@example.com to confirm user ID. Once confirmed, proceed to book a reservation for Amelia Khan on flight F1234 from JFK to LAX, ensuring to include her meal preference and seat selection. After the reservation is successfully booked, check in Amelia Khan for flight F1234 to secure her seat and boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.khan3954@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_khan_8728", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "meal_preference": "vegetarian", "seat_selection": "12A"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "amelia_khan_8728", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_hernandez_5188",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are optimistic, organized. First, get_user_details for Mohamed Hernandez using email mohamed.hernandez8983@example.com to verify user ID and preferences, ensuring you have the correct information for processing his travel needs. Once verified, proceed to book_reservation for user ID U123 at the preferred departure airport, specifying flight number FL123 and travel date, ensuring all details align with Mohamed's preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.hernandez8983@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_hernandez_5188", "departure_airport": "JFK", "flight_number": "FL123", "travel_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_ahmed_3737",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Rossi'} and your email is olivia.rossi1039@example.com. You are organized, independent, cautious. First, retrieve user details for Omar Ahmed using email omar.ahmed2437@example.com to confirm his identity. Once confirmed, proceed to search for available flights from JFK to LAX on 2023-12-15 for Omar Ahmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.ahmed2437@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_wilson_5739",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Ahmed'} and your email is aarav.ahmed6812@example.com. You are logical, confident, optimistic, polite. Book a reservation for Mohamed Wilson on Flight ID F987 from Airport ID A123 to Airport ID A456 on 2023-11-15. Once the reservation is confirmed, proceed to check in Mohamed Wilson for Flight ID F987 using the reservation details to generate the boarding pass. This process ensures that Mohamed Wilson is ready for his upcoming travel, and it aligns with our commitment to providing seamless and efficient service to our valued passengers.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_wilson_5739", "flight_id": "F987", "departure_airport_id": "A123", "arrival_airport_id": "A456", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mohamed_wilson_5739", "flight_id": "F987"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mohamed_wilson_5739", "flight_id": "F987"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_wilson_9692",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are polite, confident, direct, optimistic. First, book a reservation for user Noah Wilson on flight F1234 from JFK to LAX with preferred seating. Once the reservation is confirmed, check in Noah Wilson for flight F1234 using reservation ID R6789 to ensure a smooth boarding process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_wilson_9692", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "seating_preference": "preferred"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "noah_wilson_9692", "reservation_id": "R6789", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_davis_9868",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Sanchez'} and your email is mei.sanchez6580@example.com. You are cautious, independent. First, retrieve user details for Fatima Davis using email fatima.davis2844@example.com to confirm her user ID for booking. Once you have confirmed her user ID, proceed to book a reservation for her on flight AA1001 from JFK to SFO on 2023-11-15 with a window seat preference. This process will ensure she has a confirmed booking with her preferred seating arrangement.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.davis2844@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_davis_9868", "flight_number": "AA1001", "departure_airport": "JFK", "arrival_airport": "SFO", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9652",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li3866@example.com. You are confident, cautious, independent. First, search for flights departing from JFK Airport to LAX Airport on December 15, 2023. Once you have identified a suitable flight, proceed to book a reservation for Fatima Rossi on Flight F1234 from JFK to LAX on December 15, 2023, including selecting her preferred seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_9652", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_6576",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Johnson'} and your email is omar.johnson8258@example.com. You are confident, flexible. First, check flight status for flight AA100 from LAX to JFK on 2023-12-15 to confirm its on-time status, ensuring that there are no delays or issues that might affect passengers' travel plans. Once confirmed, proceed to book a reservation for user ID U001 for flight AA100 from LAX to JFK on 2023-12-15 in economy class, providing them with the assurance of a timely departure.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_6576", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_nguyen_4236",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Wilson'} and your email is mei.wilson6813@example.com. You are optimistic, patient, logical, independent. Search for flights from LAX to JFK on the desired travel date and book a reservation for Evelyn Nguyen on Flight F1234 from LAX to JFK, including her seat preference and meal options. Ensure that you find the most convenient flight schedule that aligns with Evelyn's business meeting in New York, and confirm her seat and meal preferences to enhance her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "evelyn_nguyen_4236"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_nguyen_4236", "flight_number": "F1234", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_gonzalez_3910",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Anderson'} and your email is yara.anderson7387@example.com. You are patient, organized, direct, logical. First, retrieve user details for Ethan Gonzalez using email ethan.gonzalez4384@example.com to verify his user ID. Once you have confirmed his user ID, proceed to search for flights from JFK to LAX on 2023-11-15, keeping in mind Ethan's flexible schedule. After identifying a suitable flight, book a reservation for Ethan on flight F123 from JFK to LAX, ensuring his seat preference is a window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.gonzalez4384@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_gonzalez_3910", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_4931",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li2895@example.com. You are patient, independent, organized, cautious. First, get user details for Mei Johnson using email mei.johnson6054@example.com to retrieve her user ID. Next, book a reservation for the retrieved user ID on flight number AA123 from LAX to JFK on 2023-11-15, ensuring to include seat selection and meal preference to enhance the travel experience. Finally, calculate the total cost for the reservation on flight AA123, including taxes and additional fees, to provide a comprehensive breakdown of expenses for Mei Johnson.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johnson6054@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_moore_2925",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Wilson'} and your email is liam.wilson5699@example.com. You are flexible, organized, polite. Please first book a reservation for user Amelia Moore on flight F123 from JFK to LAX on November 15th, 2023, in economy class. Once the reservation is confirmed, proceed to check-in Amelia Moore for the same flight. Ensure all her travel details are accurate and provide her with the necessary boarding information.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_moore_2925", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "amelia_moore_2925", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_1941",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Davis'} and your email is omar.davis7857@example.com. You are optimistic, polite, confident. First, get user details for Fatima Rossi using email fatima.rossi5024@example.com to retrieve User ID and preferences. Once you have her details, search for available flights from JFK International Airport to LAX for Fatima Rossi, considering her preferred travel dates. After identifying a suitable flight, book a reservation for Fatima Rossi on Flight F123 from JFK to LAX, ensuring her seat preference is met.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5024@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_1941", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_hernandez_2083",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez1202@example.com. You are confident, direct, flexible. First, use get_user_details for Ava Hernandez to retrieve user ID and account information. Next, use list_all_airports to find Ava's nearest airport for booking purposes, ensuring she has convenient travel options. Finally, use book_reservation with the obtained user ID, flight number FN5678, and Ava's preferred seat class to book her flight, ensuring a seamless booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ava_hernandez_2083"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_hernandez_2083", "flight_number": "FN5678", "seat_class": "preferred"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_9581",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Rossi'} and your email is fatima.rossi5152@example.com. You are logical, polite. First, search available flights from 'JFK' to 'LAX' on '2023-12-15' for Lucas's travel plans to ensure he has options for his trip. Once a suitable flight is identified, proceed to book a reservation for user ID 'U12345' on flight 'AA123' from 'JFK' to 'LAX' departing on '2023-12-15' to secure his travel arrangements.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_9581", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Taylor'} and your email is lucas.taylor7450@example.com. You are independent, optimistic, patient. First, retrieve user details for James Ahmed using email james.ahmed6295@example.com to confirm his identity. Once his identity is confirmed, proceed to book a reservation for James Ahmed on flight AA1004 from LAX to JFK for 2023-12-15 using the user ID obtained from the user details. After successfully booking the reservation, check in James Ahmed for flight AA1004 using the reservation details to secure his boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.ahmed6295@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_ahmed_4322", "flight_number": "AA1004", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "james_ahmed_4322", "flight_number": "AA1004"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "james_ahmed_4322", "flight_number": "AA1004"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_brown_2655",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Martin'} and your email is aarav.martin6155@example.com. You are logical, polite, cautious. Book reservation for user Anya Brown on flight AA123 from JFK to LAX on October 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_brown_2655", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_kim_3687",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Thomas'} and your email is liam.thomas7432@example.com. You are confident, patient, logical, flexible. Book a reservation for Lei Kim on flight number AA123 from JFK to LAX on October 15, 2023, ensuring to include her seat preference and meal options. After booking, retrieve the reservation details to confirm the booking information and itinerary are correct. Finally, check in Lei Kim for the flight, selecting her preferred seat and confirming her baggage details to ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_kim_3687", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lei_kim_3687", "flight_number": "AA123"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "lei_kim_3687", "flight_number": "AA123", "seat_number": "12A", "baggage_details": "1 checked bag, 1 carry-on"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_taylor_6100",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Nguyen'} and your email is evelyn.nguyen7538@example.com. You are independent, organized, flexible. First, get user details for Yusuf Taylor using email yusuf.taylor8412@example.com to retrieve user ID. Once you have the user ID, proceed to book a reservation for user ID U789 on flight F4567 from airport A123 to destination airport A987 on 2023-12-15. After successfully booking the reservation, update reservation R5678 for user ID U789 to include meal preference as vegetarian, ensuring the passenger's dietary needs are met during the flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.taylor8412@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_taylor_6100", "flight_id": "F4567", "departure_airport": "A123", "destination_airport": "A987", "date": "2023-12-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R5678", "user_id": "yusuf_taylor_6100", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_8890",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Patel'} and your email is yusuf.patel5773@example.com. You are organized, logical, independent, confident. Book a reservation for user ID retrieved for flight number AA123 from JFK to LAX on 2023-11-05. Once the reservation is confirmed, get the reservation details for the reservation ID just booked to ensure all information is accurate and complete. Finally, check in for the reservation ID 48 hours before departure to secure preferred seating, ensuring a smooth and comfortable travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_8890", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-05"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "RES123"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "RES123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_rossi_7655",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Patel'} and your email is james.patel1360@example.com. You are organized, patient, confident, optimistic. First, check Sofia Rossi's user details using her email sofia.rossi8377@example.com to retrieve her user ID. Then, book a reservation for Sofia Rossi on flight F12345 using her user ID. This sequence ensures that Sofia can be efficiently booked onto her flight, streamlining the process for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.rossi8377@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_rossi_7655", "flight_number": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_lee_5870",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kim'} and your email is mason.kim6508@example.com. You are organized, polite. First, search for flights from JFK to LAX on 2023-12-15 for Liam Lee to find the best available options. Once you have identified a suitable flight, book a reservation for Liam Lee on flight F1234 from JFK to LAX for 2023-12-15. Ensure that all details are accurate and confirm the booking to provide Liam with a seamless travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "date": "2023-12-15", "passenger_name": "Liam Lee", "user_id": "liam_lee_5870"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_jackson_3398",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Lee'} and your email is omar.lee4374@example.com. You are polite, direct. Book a reservation for Yara Jackson on flight AA123 from JFK to LAX on December 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_jackson_3398", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Santos'} and your email is raj.santos2136@example.com. You are independent, flexible, optimistic, confident. Retrieve user details for Ethan Hernandez using the email ethan.hernandez2569@example.com to confirm user ID. Then, search for available flights from LAX to JFK on December 15th to find suitable options for Ethan. Once you have identified a suitable flight, book a reservation for Ethan on flight F1234 from LAX to JFK for December 15th using his user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.hernandez2569@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_id": "F1234", "departure": "LAX", "destination": "JFK", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_johansson_4368",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Anderson'} and your email is chen.anderson2368@example.com. You are polite, patient, direct. First, retrieve user details for Omar Johansson using email omar.johansson3839@example.com to verify account information, ensuring his profile is up-to-date for accurate booking. Next, search for flights from his preferred departure airport to his desired destination on Omar Johansson's preferred dates to find suitable options. Finally, book a reservation for Omar Johansson on flight ID F1234 with a seat preference for a window, ensuring his travel arrangements are confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.johansson3839@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_johansson_4368", "flight_id": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_sanchez_8204",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Li'} and your email is isabella.li1262@example.com. You are direct, independent. First, retrieve user details for Liam Sanchez using email liam.sanchez8750@example.com to ensure you have accurate information. Next, search for available flights from JFK to LAX on the upcoming Saturday for user Liam Sanchez to find suitable travel options. Once you have identified a preferred flight, book a reservation for user Liam Sanchez on flight F1234 from JFK to LAX in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.sanchez8750@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_sanchez_8204", "flight_number": "F1234", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_muller_7373",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Ahmed'} and your email is evelyn.ahmed7132@example.com. You are logical, flexible, cautious. First, get user details for Fatima Muller using email fatima.muller7881@example.com to retrieve her user ID. Once you have obtained her user ID, proceed to book a reservation for her on flight F1234 with a seat preference as window. This sequence ensures that Fatima's travel arrangements are efficiently managed, providing her with a preferred seating option for her upcoming journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.muller7881@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_muller_7373", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_lopez_9068",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Johansson'} and your email is amelia.johansson1133@example.com. You are organized, direct. First, retrieve user details for Ava Lopez using email ava.lopez2283@example.com to verify her user ID and reservation history. Next, search for flights departing from LAX to JFK on her desired travel date to find suitable options. Finally, once a suitable flight is identified, book a reservation for Ava Lopez on flight F123, ensuring her seat preference and dietary requirements are met.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.lopez2283@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ava_lopez_9068"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_lopez_9068", "flight_number": "F123", "seat_preference": "aisle", "dietary_requirements": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_kim_3687",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed5466@example.com. You are logical, confident, patient, direct. First, book a reservation for user_id 'lei.kim3388@example.com' on flight 'FL123' departing on '2023-12-15' from 'JFK' to 'LAX' in 'economy' class. Once the reservation is confirmed, retrieve the reservation details using reservation_id 'R456' to ensure all information is accurate and complete. Finally, proceed to check in for the flight using reservation_id 'R456', user_id 'lei.kim3388@example.com', and assign seat number '12A' to finalize the process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_kim_3687", "flight_number": "FL123", "departure_date": "2023-12-15", "departure_airport": "JFK", "arrival_airport": "LAX", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R456"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "lei_kim_3687", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Johansson'} and your email is fatima.johansson8122@example.com. You are flexible, organized. Book a reservation for Ethan Li on flight AA1234 from LAX to JFK, ensuring to specify his seat preference as an aisle seat and opt for a vegetarian meal option. Once the reservation is confirmed, proceed to check in Ethan Li for the same flight using the provided reservation number, and select his preferred check-in options such as receiving a mobile boarding pass and selecting priority boarding.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_9571", "flight_number": "AA1234", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ethan_li_9571", "reservation_number": "RES123456", "check_in_options": {"mobile_boarding_pass": True, "priority_boarding": True}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_nguyen_6408",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Wilson'} and your email is yara.wilson5847@example.com. You are flexible, patient, confident. Book reservation for Lucas Nguyen on flight AA100 from LAX to JFK using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_nguyen_6408", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "passenger_first_name": "Lucas", "passenger_last_name": "Nguyen", "passenger_email": "yara.wilson5847@example.com", "passenger_traits": ["flexible", "patient", "confident"]}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1327",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Nguyen'} and your email is noah.nguyen7015@example.com. You are direct, flexible. First, search for flights from JFK to LAX on 2023-12-15 for Lucas Lee to find the most suitable options. Once you have identified the best flight, proceed to book a reservation for flight F1234 from JFK to LAX on 2023-12-15 for Lucas Lee, ensuring an aisle seat is selected to accommodate his preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "lucas_lee_1327"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_lee_1327", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8926@example.com. You are cautious, patient, flexible, organized. Begin by getting the reservation details for reservation ID R202 to confirm Ethan’s booking details and itinerary. Once you have verified the information, proceed to check in for the same reservation, selecting seat 12A and confirming baggage drop-off for 2 bags. This ensures that Ethan's travel arrangements are accurate and complete, providing a seamless experience for his upcoming flight.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R202"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R202", "seat_selection": "12A", "baggage_count": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_johnson_4945",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez1202@example.com. You are organized, patient, logical, polite. Search for flights from LAX to JFK on 2023-11-15 for Evelyn's travel plans. Once you find a suitable flight, proceed to book a reservation for user ID U1234 on flight F5678 from LAX to JFK on 2023-11-15, ensuring that all details align with Evelyn's travel requirements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "evelyn_johnson_4945"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_johnson_4945", "flight_id": "F5678", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7283",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Anderson'} and your email is yara.anderson7387@example.com. You are independent, flexible, polite, organized. Book reservation for user Liam Smith on flight F987 from JFK to LAX, selecting seat 12A.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7283", "flight_number": "F987", "departure_airport": "JFK", "arrival_airport": "LAX", "seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johnson_3148",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are logical, direct, confident. Begin by getting user details for user Fatima Johnson using email fatima.johnson5264@example.com to verify account information. Once verified, search for flights from JFK to LAX on 2023-11-15 to find suitable options for Fatima. After identifying the best option, book a reservation for Fatima Johnson on flight F123 from JFK to LAX on 2023-11-15 with preferred seating in business class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.johnson5264@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johnson_3148", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "business"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_johansson_6252",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ito'} and your email is james.ito8311@example.com. You are cautious, polite, patient. Book a reservation for Emma Johansson on flight AA123 from JFK to LAX on 2023-11-15",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_johansson_6252", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": {"first_name": "Emma", "last_name": "Johansson"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_8687",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Wilson'} and your email is yara.wilson5847@example.com. You are logical, independent, polite, cautious. Begin by retrieving the user details for Harper Santos using the email harper.santos8051@example.com to ensure you have the correct information for booking. Once you have confirmed the user details, proceed to search for flights from the nearest airport to Los Angeles International Airport. After selecting a suitable flight, book a reservation for Harper Santos using the user email harper.santos8051@example.com. This will ensure that Harper has a confirmed booking for their travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.santos8051@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "Los Angeles International Airport"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_8687", "departure_airport": "nearest", "arrival_airport": "Los Angeles International Airport"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_martin_8348",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Martin'} and your email is evelyn.martin3593@example.com. You are cautious, direct. First, get user details for user Harper Martin (harper.martin5272@example.com) to verify identification and preferences. Once verified, proceed to book a reservation for Harper Martin on flight F1234 from JFK to LAX on 2023-11-15. After the booking is confirmed, check in Harper Martin for flight F1234 to secure the boarding pass and preferred seating.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "harper_martin_8348"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_martin_8348", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_martin_8348", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_3247",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Gonzalez'} and your email is ethan.gonzalez4384@example.com. You are optimistic, flexible, logical, patient. Book reservation for user Isabella Khan on selected flight using user ID and flight details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_3247", "flight_id": "FL123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_7943",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith9832@example.com. You are direct, independent, confident, optimistic. Book a reservation for Raj Khan on flight AI101 from Mumbai to New York on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_7943", "flight_number": "AI101", "departure_city": "Mumbai", "arrival_city": "New York", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_silva_9265",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Lopez'} and your email is chen.lopez3735@example.com. You are polite, patient. First, get_user_details for Mohamed Silva using email mohamed.silva9198@example.com to verify his user ID and preferences. Once you have confirmed Mohamed's details, search for flights from airport ID A456 to destination airport ID B789 on Mohamed's preferred travel dates. After identifying a suitable flight, proceed to book_reservation for flight ID F123 for user ID U001, ensuring to select Mohamed's seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.silva9198@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F123", "user_id": "mohamed_silva_9265", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7587",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are logical, patient, flexible, independent. Search for available flights from JFK to LAX for Ivan Wilson, ensuring a flexible schedule. Once you have identified suitable options, proceed to book a reservation for Ivan Wilson on flight F123 from JFK to LAX, confirming his seat preference and meal option.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_wilson_7587"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_wilson_7587", "flight_number": "F123", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Anderson'} and your email is liam.anderson3611@example.com. You are independent, cautious, patient, logical. Search for available flights from JFK International Airport to LAX on March 15, 2024, for Ethan Hernandez. Once you find a suitable flight, proceed to book a reservation for Ethan Hernandez on flight F1234 with a seat preference for the window. This task is part of ensuring Ethan's travel arrangements are confirmed well in advance, providing him with a comfortable journey and meeting his seating preferences.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"location": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2024-03-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_id": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_9830",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Brown'} and your email is aarav.brown4253@example.com. You are direct, optimistic, confident. Get_user_details for user Mohamed Taylor using email mohamed.taylor5881@example.com to verify user ID and reservation history. Once Mohamed's user ID is confirmed, book_reservation for this user on flight AA123 for travel on 2023-11-10, departing from JFK. This sequence ensures that Mohamed's travel plans are accurately processed and confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.taylor5881@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA123", "travel_date": "2023-11-10", "departure_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_ahmed_2248",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito7126@example.com. You are independent, organized, cautious. First, retrieve details for user Fatima Ahmed using the get_user_details tool with email fatima.ahmed4767@example.com to ensure her information is accurate and up-to-date. Once you have confirmed her details, proceed to book a reservation for Fatima Ahmed on flight F789 from JFK to LAX on 2023-12-15 using the book_reservation tool. This ensures a seamless booking experience for Fatima, aligning with our commitment to providing excellent customer service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.ahmed4767@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_ahmed_2248", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_garcia_1794",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Rossi'} and your email is ivan.rossi2633@example.com. You are polite, flexible, cautious, patient. Please search for flights from LAX to JFK on December 15, 2023, for Ivan Garcia, ensuring you find the most convenient options available. Once you have identified a suitable flight, proceed to book a reservation for Ivan Garcia on flight F12345 from LAX to JFK on the same date, making sure all details are accurate to facilitate a seamless travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_garcia_1794", "flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "passenger_name": "Ivan Garcia"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6197",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Silva'} and your email is sophia.silva5929@example.com. You are optimistic, patient, direct, polite. First, get user details for user with email juan.patel4720@example.com to confirm identity and retrieve user ID. Once the user ID is confirmed, proceed to search for available flights from airport A100 to A200 on October 20, 2023, for user Juan Patel. After identifying a suitable flight, book a reservation for flight F12345 for the retrieved user ID, ensuring a window seat preference is selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.patel4720@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_patel_6197", "flight_id": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_3174",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Li'} and your email is ava.li8273@example.com. You are patient, polite. Retrieve user details using email mason.johansson3750@example.com to confirm user ID for reservation actions. Once the user ID is confirmed, book a reservation for Mason Johansson on flight F1234 from JFK to LAX with seat preference 'Aisle' using user ID U5678. After successfully booking the reservation, proceed to check in Mason Johansson for flight F1234 to secure the boarding pass and finalize seat selection.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.johansson3750@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johansson_3174", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "Aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mason_johansson_3174", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_rossi_1806",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Muller'} and your email is noah.muller2290@example.com. You are confident, organized, independent. First, get reservation details for user Yara Rossi to review current bookings using her email yara.rossi1917@example.com. Next, check in Yara Rossi for flight F1234 using her reservation ID and preferred check-in options to ensure a smooth travel experience. If the original flight is canceled, promptly book a new reservation for Yara Rossi on an alternative flight F5678 to minimize disruption to her travel plans.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"email": "yara.rossi1917@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "RES12345", "user_id": "yara_rossi_1806", "check_in_options": {"seat_preference": "aisle", "meal_preference": "vegetarian"}}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F5678", "user_id": "yara_rossi_1806", "passenger_details": {"first_name": "Yara", "last_name": "Rossi", "email": "yara.rossi1917@example.com"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_khan_2521",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Davis'} and your email is amelia.davis1624@example.com. You are flexible, optimistic. First, book a flight reservation for User Liam Khan from Los Angeles (LAX) to New York (JFK) on November 15, 2023, using tool book_reservation. Next, update reservation R12345 for User Liam Khan to include an additional checked bag using tool book_reservation. Finally, book a return flight reservation for User Liam Khan from JFK to LAX on November 20, 2023, using tool book_reservation.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_khan_2521", "from": "LAX", "to": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"reservation_id": "R12345", "user_id": "liam_khan_2521", "additional_checked_bags": 1}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_khan_2521", "from": "JFK", "to": "LAX", "date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_ito_5790",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson6900@example.com. You are logical, cautious, polite, confident. First, search for flights from Tokyo Haneda Airport (HND) to Los Angeles International Airport (LAX) on 2023-11-15. Once you find a suitable flight, proceed to book a reservation for Lei Ito on flight F12345 with a window seat preference.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "HND"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "HND", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_ito_5790", "flight_id": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Silva'} and your email is aarav.silva8592@example.com. You are organized, confident, flexible. First, search for flights from LAX to John F. Kennedy International Airport (JFK) on December 15, 2023, to find available options. Once you have identified a suitable flight, book a reservation for user Mia Taylor on flight F1234 from LAX to JFK on December 15, 2023, in economy class. This will ensure Mia has a confirmed seat on her preferred flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_taylor_2876", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7267",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Anderson'} and your email is olivia.anderson5647@example.com. You are organized, patient, independent, flexible. First, get reservation details for Liam Smith's booking on flight AA123 to verify reservation confirmation and seat assignment. Once the reservation is confirmed and seat assignment is verified, proceed to check in for flight AA123 using the reservation ID and user ID for Liam Smith to obtain his boarding pass.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "liam_smith_7267", "flight_number": "AA123"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "liam_smith_7267", "reservation_id": "RES12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_johansson_9644",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Moore'} and your email is raj.moore9581@example.com. You are logical, polite, direct. Retrieve user details for Amelia Johansson using the email amelia.johansson1133@example.com to confirm her user ID and preferences. Then, book a reservation for Amelia Johansson on flight AA123 from JFK to LAX on the specified travel date, using her user ID. Finally, retrieve reservation details for Amelia's booking on flight AA123 to confirm her reservation and seat assignment.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.johansson1133@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "travel_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_9061",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed9372@example.com. You are logical, independent, direct, patient. First, book a reservation for Mei Wilson on Flight ID F1234 from JFK to LAX. Once the reservation is confirmed, update it to include a preferred seat selection for her. This ensures that Mei Wilson has a comfortable and personalized experience during her flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_9061", "flight_id": "F1234", "departure": "JFK", "destination": "LAX"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "mei_wilson_9061", "flight_id": "F1234", "action": "update_seat", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_brown_7405",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Thomas'} and your email is mei.thomas9437@example.com. You are organized, optimistic. Search for available flights from departure airport ID A123 to arrival airport ID A456 on 2023-11-15 for Juan Brown, ensuring you find the most convenient options for his schedule. Once you have identified a suitable flight, proceed to book reservation for flight F789 for user Juan Brown with user ID U101 on 2023-11-15, confirming all details are accurate and the booking is successful.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F789", "user_id": "juan_brown_7405", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_li_9905",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Silva'} and your email is aarav.silva8592@example.com. You are cautious, polite. Begin by retrieving reservation details for reservation ID R234 to confirm booking and itinerary for user Mei Li. Once confirmed, proceed to update reservation ID R234 to add a special meal request for user Mei Li, ensuring her dietary preferences are accommodated. Finally, check in user Mei Li for flight F1234 with reservation ID R234 to confirm her seat and issue her boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R234"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R234", "user_id": "mei_li_9905", "special_request": "vegetarian meal"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R234", "flight_id": "F1234", "user_id": "mei_li_9905"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_silva_8071",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Hernandez'} and your email is ava.hernandez1254@example.com. You are patient, direct, cautious. First, search for flights from Airport ID A123 to Destination Airport ID A456 on November 20, 2023, for Yara Silva. Once you have identified a suitable flight, proceed to book a reservation for Flight ID F789 for User ID U001, selecting seat 12A for Yara Silva. Ensure that the booking details are accurate and align with Yara Silva's preferences and travel requirements.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F789", "user_id": "yara_silva_8071", "seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_3782",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ito'} and your email is james.ito8311@example.com. You are cautious, organized. Book reservation for Liam Jackson on Flight F123 from JFK to LAX on 2023-12-01, ensuring seat preference and meal options are selected.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_3782", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_li_3601",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Taylor'} and your email is liam.taylor5916@example.com. You are optimistic, patient. \"Book reservation for Emma Li on flight AA123 from LAX to JFK on 2023-11-15 with seat preference window\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_li_3601", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_3174",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kim'} and your email is raj.kim9425@example.com. You are optimistic, flexible. Book reservation for user U001 on flight F789 with preferred seating and meal preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johansson_3174", "flight_id": "F789", "preferences": {"seating": "preferred", "meal": "preferred"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_9581",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are confident, polite, direct, organized. Please search for available flights from JFK to LAX on 2023-11-20 for user Lucas Hernandez. Once you have identified a suitable flight, proceed to book a reservation for Lucas Hernandez on flight DL456 from JFK to LAX on the same date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_9581", "flight_number": "DL456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_davis_9362",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Lopez'} and your email is james.lopez4194@example.com. You are optimistic, organized, flexible, logical. First, get user details for user Mei Davis (User ID: U123) to confirm identity and retrieve contact information. Once the identity is confirmed, proceed to book a reservation for user U123 from Airport ID A456 to Airport ID A678 on Flight ID F987 for the date 2023-11-15. After successfully booking the flight, check in for Reservation ID R234 for user U123 to secure their seat assignment and boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mei_davis_9362"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_davis_9362", "from_airport_id": "A456", "to_airport_id": "A678", "flight_id": "F987", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mei_davis_9362", "reservation_id": "R234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_garcia_4365",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Lee'} and your email is mason.lee8809@example.com. You are independent, optimistic. Retrieve user details for Noah Garcia using email noah.garcia7790@example.com. Then, search for flights from JFK to LAX on the preferred travel date, ensuring availability. Once a suitable flight is found, book a reservation for Noah Garcia on flight F123 from JFK to LAX using the book_reservation tool with user details and flight ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "noah_garcia_4365"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_garcia_4365", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_nguyen_4239",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Jackson'} and your email is liam.jackson2763@example.com. You are flexible, direct, cautious, independent. \"Book reservation for user isabella.nguyen8385@example.com on Flight ID F1234 departing from Airport ID A567.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_nguyen_4239", "flight_id": "F1234", "departure_airport_id": "A567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_hernandez_2608",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are independent, direct. Book reservation for Chen Hernandez on flight AA123 using user details and preferred seating options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_hernandez_2608", "flight_number": "AA123", "first_name": "Chen", "last_name": "Hernandez", "email": "harper.kovacs2607@example.com", "preferred_seating": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_brown_4047",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Lee'} and your email is anya.lee3359@example.com. You are cautious, optimistic. Book reservation for Lucas Brown on flight number AA100 from JFK International Airport to LAX on December 15th, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_brown_4047", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "passenger_name": "Lucas Brown", "contact_email": "anya.lee3359@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_jackson_2879",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Ahmed'} and your email is omar.ahmed2437@example.com. You are polite, logical, optimistic, cautious. First, search for flights departing from John F. Kennedy International Airport (JFK) to Los Angeles International Airport (LAX) on December 15, 2023. Once you have identified a suitable flight, proceed to book a reservation for Aarav Jackson on flight F12345 from JFK to LAX on December 15, 2023, in economy class. Ensure that you verify all details for accuracy before finalizing the reservation, as this will be crucial for Aarav's travel plans.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_jackson_2879", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_santos_5621",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kovacs'} and your email is mason.kovacs8863@example.com. You are organized, polite. Retrieve user details for Liam Santos using email liam.santos3021@example.com to obtain user ID. Then, search for flights from Liam Santos's nearest airport to the specified destination airport on the date provided by the client. This will ensure you have the necessary user information and flight options ready for booking, facilitating a smooth reservation process for Liam Santos.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.santos3021@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "nearest_airport_code"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "destination_airport_code"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_5154",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Santos'} and your email is yusuf.santos3031@example.com. You are logical, organized. Retrieve user details for Mason Johansson from the system using the email mason.johansson6900@example.com. Once you have Mason's details, search for available flights from the nearest airport to his specified destination on his preferred travel date. After selecting the most suitable flight, book a reservation for Mason Johansson using the book_reservation tool with user email mason.johansson6900@example.com and flight ID F12345.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.johansson6900@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johansson_5154", "email": "mason.johansson6900@example.com", "flight_id": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_hernandez_6677",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Lee'} and your email is liam.lee4529@example.com. You are logical, direct, organized. Book a reservation for user Liam Hernandez on flight F123 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_hernandez_6677", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_lopez_9361",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Johnson'} and your email is daiki.johnson3136@example.com. You are logical, flexible, patient, cautious. First, search for available flights from New York (JFK) to Los Angeles (LAX) on December 15, 2023, to ensure there are options for potential bookings. Once you have confirmed the availability, proceed to book a reservation for Ethan Lopez on flight F1234 from JFK to LAX on December 15, 2023, in economy class. This sequence ensures that the booking is made on a flight that has been verified for availability, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"origin": "JFK", "destination": "LAX", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_lopez_9361", "flight_number": "F1234", "origin": "JFK", "destination": "LAX", "date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_li_9905",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Brown'} and your email is omar.brown3320@example.com. You are direct, flexible, patient, confident. Search for available flights departing from JFK International Airport to LAX International Airport on Mei Li's desired travel date, ensuring you find options that align with her preferences. Once you have identified a suitable flight, book a reservation for Mei Li on flight F1234 from JFK to LAX on the selected travel date, using her profile details to complete the booking process efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mei_li_9905"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_li_9905", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "travel_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_garcia_8795",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Jackson'} and your email is chen.jackson9941@example.com. You are confident, direct, logical, flexible. Book a reservation for Mason Garcia from JFK to LAX on flight F789 with preferred seating in business class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_garcia_8795", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "class": "business", "passenger_name": "Mason Garcia"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_li_7953",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Martin'} and your email is evelyn.martin3593@example.com. You are confident, organized, polite, optimistic. First, get_user_details for Juan Li using email juan.li3600@example.com to retrieve user ID and reservation history. Once you have the user ID, proceed to book_reservation for user ID U890 with flight number F1234 from Airport A567 to Airport A678 on 2023-11-15. Finally, check_in for reservation ID R901 to ensure Juan Li has a boarding pass ready, providing a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.li3600@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_li_7953", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "A678", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R901"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_moore_5127",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Smith'} and your email is isabella.smith7185@example.com. You are direct, organized, logical. First, retrieve user details for Evelyn Moore using email evelyn.moore1378@example.com to confirm user ID for reservation activities. Once you have confirmed the user ID, proceed to search for flights from JFK International Airport to LAX International Airport on December 15th, 2023. After identifying the appropriate flight, book a reservation for user ID U5678 on flight F123 from JFK to LAX on December 15th, 2023, selecting economy class seating.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.moore1378@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_moore_5127", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_sanchez_8382",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Anderson'} and your email is olivia.anderson5647@example.com. You are flexible, polite, independent. Get user details for Yara Sanchez using email yara.sanchez3534@example.com to verify user ID for reservation.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.sanchez3534@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_taylor_2700",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez8734@example.com. You are patient, polite. First, retrieve user details for Emma Taylor to verify her user ID and contact information to ensure accuracy in booking and check-in processes. Next, book a reservation for Emma Taylor on flight F1234 from airport A567 to airport A890 on 2023-11-15, selecting a window seat to accommodate her preference. Finally, get airport information for airport A567 to provide Emma with terminal and gate details, ensuring she has all necessary information for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "emma_taylor_2700"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_taylor_2700", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "A890", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "A567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_hernandez_8984",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Taylor'} and your email is noah.taylor2496@example.com. You are optimistic, direct. First, get_user_details for user Mei Hernandez (mei.hernandez3561@example.com) to retrieve her user ID and preferences. Once you have her user ID, proceed to book_reservation for Mei Hernandez on flight F123 from LAX to JFK on 2023-11-15, ensuring her seat preference is a window seat. This sequence is crucial to ensure a smooth booking process and enhance customer satisfaction by accommodating her seating preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.hernandez3561@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_hernandez_8984", "flight_number": "F123", "departure": "LAX", "destination": "JFK", "date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_ito_7857",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Sanchez'} and your email is juan.sanchez5264@example.com. You are flexible, cautious. First, search for available flights from JFK to LAX on 2023-11-15 using preferred airlines and direct flights only. Once you have identified a suitable flight, proceed to book a reservation for user Liam Ito for flight F12345 from JFK to LAX, selecting seat 12A and adding a meal preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_ito_7857", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_number": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_taylor_6615",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Taylor'} and your email is fatima.taylor9198@example.com. You are organized, optimistic, independent, logical. Search for flights from JFK Airport to LAX Airport departing on 2023-11-15 for Ivan Taylor. Once you find a suitable option, book a reservation for Ivan Taylor on flight F123 from JFK to LAX on 2023-11-15 to ensure he has a confirmed seat for his business trip.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_taylor_6615", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Ivan Taylor"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_6576",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Sanchez'} and your email is lucas.sanchez2568@example.com. You are confident, organized, patient. First, get_user_details for user email isabella.khan9667@example.com to retrieve user ID and preferences, ensuring you have the correct information for the booking process. Next, book_reservation for user ID U456 on flight ID F789 with preferred seat class and meal options, taking into account any specific preferences retrieved earlier. Finally, check_in for reservation ID R1011 to secure the boarding pass and select seats, ensuring a smooth and efficient experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.khan9667@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_6576", "flight_id": "F789", "seat_class": "preferred_seat_class", "meal_options": "preferred_meal_options"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R1011"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lopez_9471",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Anderson'} and your email is liam.anderson3611@example.com. You are polite, logical. First, retrieve user details for Mei Lopez using email mei.lopez4337@example.com to ensure her information is accurate in our system. Next, search for flights departing from JFK to LAX on December 15th, 2023, to find suitable travel options for Mei. Once you have identified the best option, book a reservation for Mei Lopez on flight F6789 from JFK to LAX on December 15th, 2023, in economy class, ensuring her travel plans are confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.lopez4337@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lopez_9471", "flight_number": "F6789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_moore_8184",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Santos'} and your email is raj.santos2136@example.com. You are polite, optimistic. First, get user details for Fatima Moore using email fatima.moore4109@example.com to verify user ID and preferences. Once you have confirmed her user ID and preferences, proceed to search for available flights from LAX to John F. Kennedy International Airport (JFK) on her preferred travel dates. This will ensure that we can offer her the best options tailored to her needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.moore4109@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "fatima_moore_8184"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_ahmed_6263",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Brown'} and your email is mei.brown7062@example.com. You are logical, cautious. Book a reservation for Mohamed Ahmed on flight AA100 from JFK to LAX, ensuring to select a suitable seat and note his meal preference. Once the reservation is confirmed, proceed to check Mohamed Ahmed in for the same flight using the reservation ID, making sure the seat selection is accurate. This sequential process will help ensure Mohamed's travel arrangements are smooth and all preferences are correctly noted.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_ahmed_6263", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": "Mohamed Ahmed", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mohamed_ahmed_6263", "reservation_id": "RES123456", "seat_number": "12C"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_jackson_7992",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen8380@example.com. You are direct, polite, logical, patient. First, retrieve user details for yara.jackson6598@example.com to confirm identity and preferences, ensuring you have the correct information for booking. Next, search for flights from LAX to JFK departing on 2023-11-15 to find suitable travel options that match Yara Jackson's preferences. Once you have identified the best option, proceed to book a reservation for user Yara Jackson on flight F7890 from LAX to JFK, ensuring to select her preferred seat and meal.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yara_jackson_7992"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_jackson_7992", "flight_number": "F7890", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_garcia_2058",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Jackson'} and your email is harper.jackson7583@example.com. You are independent, organized. First, get user details for Yusuf Garcia using email yusuf.garcia4130@example.com to retrieve user ID for booking reservation. Once you have the user ID, proceed to book a reservation for user ID U1234 from JFK to LAX on flight F5678 departing on 2023-11-15. After successfully booking the flight, check in for user ID U1234 on flight F5678 with reservation ID R8910 to secure seat assignment. This ensures that Yusuf Garcia has a confirmed seat and is ready for travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.garcia4130@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_garcia_2058", "from": "JFK", "to": "LAX", "flight_number": "F5678", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_garcia_2058", "flight_number": "F5678", "reservation_id": "R8910"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_patel_4472",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Thomas'} and your email is mia.thomas9453@example.com. You are cautious, direct, organized, polite. First, search for flights departing from JFK International Airport to LAX Airport on the desired dates to ensure availability and pricing. Once you have confirmed the details, proceed to book a reservation for Mohamed Patel on Flight F1234 from JFK to LAX on 2023-11-15, ensuring to include his seat preference and meal options.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_patel_4472", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_6576",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez6891@example.com. You are confident, optimistic. First, retrieve user details for the passenger with the email isabella.khan9667@example.com to ensure her information is up-to-date. Once her details are confirmed, proceed to book a reservation for her on flight ID F123 from JFK to LAX, ensuring her seat preference is set to aisle. This sequence will ensure a smooth and personalized booking experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_khan_6576"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_6576", "flight_id": "F123", "departure": "JFK", "arrival": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_garcia_1905",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Rossi'} and your email is amelia.rossi4259@example.com. You are organized, optimistic. Search for flights from JFK International Airport to Los Angeles International Airport on the desired date to find a suitable option for Yara Garcia's travel. Once you have identified the best flight, book a reservation for Yara Garcia on flight F12345 using user ID U123456 with a window seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F12345", "user_id": "yara_garcia_1905", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_johansson_1855",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Smith'} and your email is anya.smith8361@example.com. You are cautious, logical, confident. First, search for available flights from JFK International Airport to LAX International Airport on December 15, 2023, to identify suitable travel options. Once you have found a flight that meets the criteria, book a reservation for Anya Johansson on flight F1234 from JFK to LAX on December 15, 2023, in economy class, ensuring all details are accurately recorded for a seamless travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy", "passenger_name": "Anya Johansson"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_kovacs_4682",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Muller'} and your email is noah.muller2290@example.com. You are polite, confident, patient. First, retrieve user details for Raj Kovacs using email raj.kovacs7961@example.com to ensure you have the correct passenger information. Next, get airport information for the nearest airport to Raj Kovacs to provide him with suitable departure options. Finally, book a reservation for Raj Kovacs on flight F123 from airport A456 to destination airport A789, ensuring all details are accurately captured for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.kovacs7961@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest", "user_id": "raj_kovacs_4682"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_kovacs_4682", "flight_id": "F123", "departure_airport_id": "A456", "destination_airport_id": "A789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_1941",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Moore'} and your email is fatima.moore4109@example.com. You are direct, independent, organized. Book reservation for user Fatima Rossi on flight AB1234 with seat preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_1941", "flight_number": "AB1234", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_ahmed_8438",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Anderson'} and your email is evelyn.anderson3204@example.com. You are independent, confident, logical. Book reservation for Evelyn Ahmed using her user ID for flight F123 from LAX to JFK.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_ahmed_8438", "flight_number": "F123", "departure": "LAX", "destination": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_martin_3587",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Kovacs'} and your email is ava.kovacs1250@example.com. You are independent, flexible, organized. Retrieve user details for Isabella Martin using email isabella.martin5652@example.com to confirm user ID. Once confirmed, list all airports to find the closest airport to Isabella Martin's location. After identifying the closest airport, get airport info to determine available flights. This sequence will help ensure Isabella Martin has the most convenient travel options for her planned trip.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.martin5652@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "closest_airport_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_brown_7075",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Garcia'} and your email is ivan.garcia1055@example.com. You are logical, flexible, independent. First, check flight status for flight F123 on 2023-11-15 to ensure it is on schedule. Once confirmed, proceed to book a reservation for user Mei Brown (mei.brown7062@example.com) on flight F123 from JFK to LAX on 2023-11-15. After booking, check in Mei Brown for the same flight, selecting a window seat if available.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_brown_7075", "flight_number": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-11-15", "passenger_email": "mei.brown7062@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mei_brown_7075", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_lopez_6592",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed1896@example.com. You are logical, patient, flexible, polite. First, retrieve user details for Mia Lopez using email mia.lopez8557@example.com to verify account information, ensuring her contact and payment details are up-to-date. Next, search for flights departing from LAX to JFK on February 20, 2024, to identify available options for Mia, focusing on flights that offer window seats as per her preference. Once you have identified a suitable flight, proceed to book a reservation for Mia Lopez on flight F123 with a window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.lopez8557@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_aircraft_info",
                kwargs={"flight_number": "F123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_lopez_6592", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_brown_5554",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are polite, patient, direct, cautious. First, get user details for user ivan.brown6973@example.com to verify profile information before booking a reservation. Once the user details are confirmed and accurate, proceed to book a reservation for user ivan.brown6973@example.com from JFK to LAX on flight number AA123 departing October 15, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_brown_5554"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_brown_5554", "departure_airport": "JFK", "arrival_airport": "LAX", "flight_number": "AA123", "departure_date": "2023-10-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_3681",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Brown'} and your email is anya.brown7942@example.com. You are confident, optimistic, direct. Retrieve user details for Mei Johnson using email mei.johnson1890@example.com to confirm user ID. Once you have confirmed the user ID, search for available flights from JFK to LAX on 2023-12-15 for this user. After identifying a suitable flight, proceed to book a reservation for flight F12345 from JFK to LAX on 2023-12-15 for the confirmed user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johnson1890@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_3681", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_kim_8851",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Ito'} and your email is fatima.ito3012@example.com. You are logical, organized, confident, polite. First, book a reservation for user ID U789 with flight ID F1234, ensuring to specify the seat class and any special requests Isabella Kim has. Once the reservation is confirmed, proceed to get the reservation details for reservation ID R9876 to verify the booking and provide Isabella Kim with her itinerary.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_kim_8851", "flight_id": "F1234", "seat_class": "Economy", "special_requests": "Vegetarian meal"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R9876"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_sanchez_2625",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kovacs'} and your email is raj.kovacs4133@example.com. You are flexible, organized, cautious. Book a reservation for user Ava Sanchez on flight F123 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_sanchez_2625", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_hernandez_6677",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez5778@example.com. You are cautious, logical, direct. First, book a reservation for user Liam Hernandez on flight AA123 from JFK to LAX on 2023-12-15, with an aisle seat preference. Once the booking is confirmed, proceed to check in Liam Hernandez for the flight to ensure he receives his boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_hernandez_6677", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "liam_hernandez_6677", "flight_number": "AA123", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_wilson_8866",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Smith'} and your email is mason.smith6255@example.com. You are confident, polite, independent. First, retrieve the user ID and preferences by getting user details for the user with the email harper.wilson6600@example.com. Next, use the retrieved user ID to book a reservation on flight ID DL123 with a window seat preference for the date 2023-11-15. Finally, confirm the booking details and seat assignment by getting the reservation details for the reservation ID generated from the booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.wilson6600@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_wilson_8866", "flight_id": "DL123", "seat_preference": "window", "date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "generated_reservation_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are direct, logical. First, get user details for Sophia Wilson using email sophia.wilson3098@example.com to verify user ID. Once you have confirmed her user ID, proceed to book a reservation for Sophia Wilson on flight F1234 from JFK to LAX. After securing her reservation, check the flight status for flight F1234 departing from JFK to LAX to ensure it is on schedule, as this will be crucial for her travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.wilson3098@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_number": "F1234", "departure": "JFK", "destination": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_2126",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Patel'} and your email is james.patel7281@example.com. You are direct, independent, confident. First, retrieve user details for Harper Garcia using email harper.garcia4068@example.com to ensure all information is accurate for booking purposes. Next, search for flights from JFK to LAX on December 15, 2023, to explore potential booking options that align with Harper Garcia's travel preferences. Finally, book a reservation for user Harper Garcia on flight F123 from JFK to LAX on December 15, 2023, ensuring that all details are confirmed and communicated effectively.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.garcia4068@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_garcia_2126", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_martin_9991",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs7490@example.com. You are optimistic, patient, logical, cautious. Book reservation for Daiki Martin on flight F123 from Narita International Airport to Los Angeles International Airport, departing on 2023-11-10.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_martin_9991", "flight_number": "F123", "departure_airport": "Narita International Airport", "arrival_airport": "Los Angeles International Airport", "departure_date": "2023-11-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_brown_5554",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Johnson'} and your email is yara.johnson5258@example.com. You are flexible, patient, independent. Book a reservation for Ivan Brown on flight AA1234 using the user ID obtained from user details, and confirm seat preference as aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_brown_5554", "flight_number": "AA1234", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_davis_7802",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Li'} and your email is ivan.li1620@example.com. You are cautious, confident. Book reservation for user james.davis1376@example.com using book_reservation tool for flight F1234 from LAX to JFK on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_davis_7802", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_2421",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6819@example.com. You are cautious, direct, confident, organized. First, retrieve user details for Lucas Rossi using email lucas.rossi4133@example.com to confirm identity. Next, search for flights from JFK International Airport to LAX International Airport on December 15, 2023. Once you have found a suitable flight, book a reservation for Lucas Rossi on flight F12345 using the user details retrieved earlier.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.rossi4133@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_rossi_2421", "flight_id": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_9581",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Sanchez'} and your email is chen.sanchez3153@example.com. You are logical, confident. First, get_user_details for user 'lucas.hernandez8324@example.com' to retrieve their user ID and preferences. Once you have obtained this information, proceed to search for available flights from airport 'JFK' to 'LAX' on date '2023-11-15' for the retrieved user ID. This will help ensure that Lucas can travel on his preferred date with the most suitable options available.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.hernandez8324@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_smith_6580",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Martin'} and your email is mohamed.martin3438@example.com. You are optimistic, confident, organized. Search for flights departing from airport ID A123 to destination airport ID B456 on 2024-06-15 to find suitable travel options for Evelyn. Once you have identified the best option, book a reservation for Evelyn Smith on the chosen flight to ensure her travel plans are secured.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "destination_airport_id": "B456", "departure_date": "2024-06-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_smith_6580", "passenger_name": "Evelyn Smith", "flight_id": "FL123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_taylor_9942",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Muller'} and your email is raj.muller1211@example.com. You are logical, cautious, polite. \"Get user details for Noah Taylor using email noah.taylor2496@example.com to retrieve user ID and preferences\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.taylor2496@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_hernandez_3837",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Rossi'} and your email is sophia.rossi9619@example.com. You are flexible, independent. Calculate the total cost for booking a reservation on Flight ID F123 for Juan Hernandez, considering any applicable discounts.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "juan_hernandez_3837"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"flight_id": "F123", "user_id": "juan_hernandez_3837"}
            ),
            Action(
                name="calculate",
                kwargs={"flight_id": "F123", "user_id": "juan_hernandez_3837"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_jackson_1792",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Hernandez'} and your email is mohamed.hernandez8983@example.com. You are independent, logical. First, retrieve user details for Sophia Jackson to confirm user ID using email sophia.jackson7991@example.com. Once confirmed, list all airports to find the nearest airport to Sophia's location. After identifying the nearest airport, search for available flights from this airport to New York on the desired travel date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.jackson7991@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "Sophia's location"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "nearest_airport_code", "arrival_airport": "JFK", "date": "desired_travel_date"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_martin_3587",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Kim'} and your email is isabella.kim4342@example.com. You are logical, independent. First, get user details for user isabella.martin5652@example.com to verify identity and preferences. Once verified, search for flights from JFK to LAX on preferred dates for user Isabella Martin. After finding a suitable flight, book reservation for flight F123 for user Isabella Martin with seat preference as window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_martin_3587"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_martin_3587", "flight_id": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_li_5992",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Martin'} and your email is noah.martin7075@example.com. You are patient, organized, independent. First, book a reservation for James Li using user ID for flight AA123 on 2023-11-15 from JFK to LAX, selecting seat 12A. After the reservation is confirmed, check in James Li for reservation ID R4567 to secure his boarding pass and seat assignment. This sequence ensures that James Li has a confirmed seat and is ready for departure, enhancing his travel experience by minimizing potential delays at the airport.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_li_5992", "flight_number": "AA123", "departure_date": "2023-11-15", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_assignment": "12A"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R4567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_gonzalez_9132",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Rossi'} and your email is sofia.rossi8377@example.com. You are direct, flexible. Retrieve user details for Sophia Gonzalez using her email sophia.gonzalez7573@example.com to confirm user ID. Once you have confirmed the user ID, proceed to book a reservation for Sophia Gonzalez on flight F1023 from LAX to JFK. After successfully booking the reservation, check in for the reservation ID associated with Sophia Gonzalez to secure her boarding pass for the flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.gonzalez7573@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_gonzalez_9132", "flight_number": "F1023", "departure": "LAX", "arrival": "JFK"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sophia_gonzalez_9132"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sophia_gonzalez_9132"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_lopez_2532",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Lee'} and your email is omar.lee4374@example.com. You are flexible, direct, organized. Retrieve user details for Noah Lopez using email noah.lopez9258@example.com to confirm user ID for reservation, then book reservation for Noah Lopez on flight F1234 using the obtained user ID. This ensures that Noah can secure his seat on the flight, facilitating his travel plans efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_lopez_2532", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Martin'} and your email is isabella.martin5652@example.com. You are flexible, optimistic. First, search for flights from JFK to LAX departing on 2023-11-15 to find the best options for our client, Yara Lee. Once you have identified the most suitable flight, proceed to book a reservation for Yara Lee on flight F1234 from JFK to LAX.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_3166", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_ahmed_6699",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Lee'} and your email is chen.lee7831@example.com. You are direct, flexible. Retrieve user details for aarav.ahmed6812@example.com using get_user_details to confirm identity before making any reservations. Once the user identity is confirmed, search for available flights from the identified departure airport to a desired destination using check_flight_status with specific dates to find the most suitable options for Aarav Ahmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.ahmed6812@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "destination": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_nguyen_9431",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Khan'} and your email is isabella.khan4508@example.com. You are cautious, polite, confident, direct. First, book a reservation for the user with email emma.nguyen1887@example.com on flight AA100 from LAX to JFK on 2023-12-15. Once the reservation is confirmed, proceed to check in the user for the same flight to ensure a smooth boarding process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_nguyen_9431", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "emma_nguyen_9431", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_martin_9991",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ahmed'} and your email is james.ahmed6295@example.com. You are direct, optimistic, independent, logical. Book a reservation for Daiki Martin on flight F2345 from Tokyo to New York on 2023-11-15 using user ID U5678 and flight ID F2345.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_martin_9991", "flight_id": "F2345", "departure_city": "Tokyo", "arrival_city": "New York", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_anderson_7659",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Nguyen'} and your email is ethan.nguyen9209@example.com. You are organized, polite. First, retrieve user details for Harper Anderson (harper.anderson5822@example.com) to confirm identity and preferences. Once confirmed, proceed to search for flights from JFK to LAX on Harper Anderson's preferred travel dates. This sequence ensures that you have the correct information and preferences before searching for the most suitable flight options, providing a seamless booking experience for Harper Anderson.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "harper_anderson_7659"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Thomas'} and your email is liam.thomas7432@example.com. You are independent, logical, patient. First, get user details for Sophia Wilson using email sophia.wilson3098@example.com to ensure her information is accurate for the booking process. Next, book a reservation for Sophia Wilson on flight AA123 from JFK to LAX on 2023-12-15, ensuring all details align with her preferences and requirements. Finally, check in Sophia Wilson for flight AA123 using reservation ID RES456 to confirm her itinerary and ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.wilson3098@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "RES456", "user_id": "sophia_wilson_1550"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_1055",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Nguyen'} and your email is sophia.nguyen5624@example.com. You are cautious, flexible, patient. Search for flights from 'JFK' to 'LAX' on the desired travel date to find available options for Aarav Nguyen. Once you have identified a suitable flight, book a reservation for Aarav Nguyen on flight F1234 from 'JFK' to 'LAX' using the user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_nguyen_1055", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_moore_4540",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are flexible, direct. First, check flight status for flight DL104 from ATL to LAX on 2023-11-15 to confirm availability. Once availability is confirmed, proceed to book a reservation for user ID U123 on the same flight to ensure their travel plans are secured.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "DL104", "departure_airport": "ATL", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_moore_4540", "flight_number": "DL104", "departure_airport": "ATL", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_gonzalez_2934",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Santos'} and your email is mia.santos3745@example.com. You are logical, optimistic, direct, flexible. Search for available flights from JFK to LAX on 2023-11-15 for Ava's travel plans, ensuring that you find a flight that fits her schedule and budget. Once you have identified a suitable option, proceed to book a reservation for user ID U001 on flight F123 from JFK to LAX on 2023-11-15 to secure her travel plans efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_gonzalez_2934", "flight_id": "F123", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_johnson_4385",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Kovacs'} and your email is olivia.kovacs9948@example.com. You are logical, independent, patient. First, retrieve user details for Yara Johnson using her email yara.johnson5258@example.com to ensure her information is accurate for booking purposes. Next, search for flights from JFK to Los Angeles International Airport (LAX) on 15th November 2023 to find suitable travel options for Yara. Once you have identified an appropriate flight, book a reservation for Yara Johnson on flight F123 from JFK to LAX with her seat preference set to aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.johnson5258@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_johnson_4385", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_martin_1679",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Patel'} and your email is mason.patel6016@example.com. You are polite, confident. First, retrieve user details for Mohamed Martin using their email mohamed.martin3438@example.com to verify the user ID. Once verified, proceed to check-in Mohamed Martin for reservation ID R456 to secure seat assignment and generate a boarding pass. Finally, notify Mohamed Martin via email mohamed.martin3438@example.com that the check-in is complete and provide them with the boarding pass details for their upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.martin3438@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "mohamed_martin_1679"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R456", "user_id": "mohamed_martin_1679", "action": "notify", "email": "mohamed.martin3438@example.com", "message": "Your check-in is complete. Here are your boarding pass details for your upcoming flight."}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_sanchez_4455",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are optimistic, organized, cautious. First, book a reservation for Ava Sanchez on flight AA123 from JFK to LAX on 2023-12-15. Once the reservation is confirmed, update it to add her seat preference for an aisle seat on the same flight. Finally, calculate the baggage fees for Ava Sanchez based on 2 checked bags, ensuring she is aware of any additional charges prior to her travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_sanchez_4455", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "passenger_name": "Ava Sanchez"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "ava_sanchez_4455", "flight_number": "AA123", "seat_preference": "aisle", "passenger_name": "Ava Sanchez"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "ava_sanchez_4455", "service": "baggage_fees", "checked_bags": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lee_6144",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs2444@example.com. You are organized, polite. Book reservation for Daiki Lee on flight F12345 from airport A1 to airport A2 on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lee_6144", "flight_number": "F12345", "departure_airport": "A1", "arrival_airport": "A2", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_davis_2676",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Li'} and your email is mei.li8179@example.com. You are polite, patient. Book reservation for user Chen Davis (chen.davis3247@example.com) from LAX to JFK on flight number AA123 for 2023-11-15. After booking the reservation, check in for reservation ID R5678 for user Chen Davis to secure preferred seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_davis_2676", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "user_id": "chen_davis_2676"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_9581",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown1288@example.com. You are flexible, independent, direct. Search for flights from JFK Airport to LAX Airport on 2023-11-15 for Lucas Hernandez and, upon finding a suitable option, proceed to book a reservation for flight F123 from JFK to LAX for Lucas Hernandez using user ID U456. This will ensure that Lucas has a confirmed seat on the desired date, facilitating his travel plans efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "user_id": "lucas_hernandez_9581"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_silva_7424",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Hernandez'} and your email is ava.hernandez1254@example.com. You are logical, confident, optimistic, cautious. Search for flights from JFK to LAX departing on 2023-11-15 to explore available options, and once you find a suitable flight, book a reservation for user Ava Silva on flight F1234 from JFK to LAX on 2023-11-15 with a seat preference for a window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_silva_7424", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_hernandez_9827",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Smith'} and your email is harper.smith9133@example.com. You are organized, flexible, optimistic. Book a reservation for Mei Hernandez on flight F1023 from JFK to SFO on November 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_hernandez_9827", "flight_number": "F1023", "departure_airport": "JFK", "arrival_airport": "SFO", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_garcia_7028",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kim'} and your email is mason.kim6508@example.com. You are flexible, direct, optimistic. First, retrieve user's reservation details using Ethan Garcia's email (ethan.garcia3231@example.com) to check current bookings and confirm the reservation ID. Next, check flight status for the reservation ID R56789 to confirm the current status of Ethan's upcoming flight. Once the flight status is confirmed, proceed to check in Ethan Garcia for his flight using reservation ID R56789 to complete the check-in process.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"email": "ethan.garcia3231@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"reservation_id": "R56789"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R56789", "user_id": "ethan_garcia_7028"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_taylor_9816",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are optimistic, direct, independent, logical. Book reservation for Lucas on flight F123 from JFK to LAX on November 15th, 2023, using user ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_taylor_9816", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9268",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson2295@example.com. You are logical, direct, polite. First, get user details for Fatima Rossi using email fatima.rossi5152@example.com to ensure her information is accurate and up-to-date in our system. Once her details are confirmed, proceed to book a reservation for Fatima Rossi from JFK to LAX on flight number AA1234 with a window seat preference. This will ensure a smooth booking process and enhance her travel experience with us.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5152@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_9268", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_li_7843",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Silva'} and your email is james.silva8362@example.com. You are logical, organized. Begin by getting reservation details for Reservation ID R5678 to confirm booking for User: Amelia Li. Once the booking is confirmed, proceed to check in for Reservation ID R5678 for User: Amelia Li to receive her boarding pass. After checking in, calculate baggage fees for User: Amelia Li based on Reservation ID R5678 and baggage weight 25kg, ensuring all travel preparations are complete before her flight.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R5678"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "user_id": "amelia_li_7843"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R5678", "baggage_weight": 25}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_kim_6595",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are confident, cautious, flexible, organized. First, retrieve user details for James Kim using email james.kim2689@example.com to confirm identity and preferences. Once confirmed, search for flights from LAX to JFK on the desired dates for James Kim. After identifying a suitable option, book a reservation for James Kim on flight F1234 from LAX to JFK using the user details retrieved earlier.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.kim2689@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_kim_6595", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_muller_9847",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Moore'} and your email is aarav.moore8670@example.com. You are flexible, cautious, optimistic, organized. First, search for flights departing from JFK to LAX on the specified date for Noah Muller. Once you have identified a suitable flight, proceed to book a reservation for Noah Muller, ensuring to specify his seat preference and meal option.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "noah_muller_9847"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_muller_9847", "flight_number": "AA123", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_martin_3393",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Davis'} and your email is ethan.davis6801@example.com. You are polite, direct. First, search for flights from JFK International Airport to LAX International Airport on December 15th, 2023. Once you have identified a suitable flight, proceed to book a reservation for Olivia Martin on flight AA123 departing on December 15th, 2023, and returning on December 22nd, 2023. Ensure that all details are accurate and confirm the booking with the airline.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_martin_3393", "flight_number": "AA123", "departure_date": "2023-12-15", "return_date": "2023-12-22", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": {"first_name": "Olivia", "last_name": "Martin"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_garcia_2058",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown8989@example.com. You are direct, independent, patient. First, get user details for user with email yusuf.garcia4130@example.com to retrieve their user ID. Once you have the user ID, search for available flights from JFK to LAX on November 15, 2023. This information is needed to assist Yusuf Garcia in planning his business trip, ensuring he has a smooth and timely travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.garcia4130@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_nguyen_1995",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Li'} and your email is ethan.li9943@example.com. You are logical, direct, polite, cautious. Use the `book_reservation` tool to book flight F1234 for user Sophia Nguyen with seat preference for window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_nguyen_1995", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_li_5039",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Garcia'} and your email is ethan.garcia2794@example.com. You are independent, optimistic. Search for flights from Narita International Airport to Los Angeles International Airport for available travel dates and book a reservation for user Daiki Li on flight F1234 from Narita International Airport to Los Angeles International Airport on 2023-12-15. Ensure that the booking aligns with Daiki Li's travel preferences and confirm the availability of the flight before proceeding with the reservation.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_date": "2023-12-15", "departure_airport": "Narita International Airport", "arrival_airport": "Los Angeles International Airport"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_li_5039", "flight_number": "F1234", "departure_date": "2023-12-15", "departure_airport": "Narita International Airport", "arrival_airport": "Los Angeles International Airport"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_moore_5020",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Muller'} and your email is liam.muller3805@example.com. You are flexible, optimistic, patient. First, get user details for Fatima Moore using email fatima.moore5533@example.com to retrieve user ID and preferences. Once you have her user ID, search for flights from JFK to LAX on her preferred dates. After identifying a suitable flight, proceed to book a reservation for her with an aisle seat preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.moore5533@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_moore_5020", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_johnson_6495",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Lee'} and your email is lucas.lee7057@example.com. You are independent, organized, logical, direct. Search for available flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) for the upcoming week and book a reservation for Raj Johnson on flight F123 from JFK to LAX for the date 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_johnson_6495", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Silva'} and your email is fatima.silva5101@example.com. You are flexible, organized. Book a reservation for Sophia Wilson on the selected flight from JFK to LAX, using her user ID and preferred seating option.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_number": "JFK-LAX", "seating_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_santos_7035",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Khan'} and your email is anya.khan3991@example.com. You are direct, flexible, cautious, organized. First, retrieve user details for Sophia Santos using her email sophia.santos7908@example.com to ensure her information is up-to-date in our system. Next, search for available flights from JFK International Airport to LAX on November 15, 2023, to find suitable options for her travel. Finally, book a reservation for Sophia Santos on Flight F123 from JFK to LAX on November 15, 2023, in economy class, ensuring all details are correctly entered for a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "sophia_santos_7035"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_santos_7035", "flight_id": "F123", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lee_6144",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Silva'} and your email is james.silva8362@example.com. You are direct, organized. First, list all available airports to identify departure and destination options for a client planning a business trip. Once the airports are selected, calculate potential costs for a reservation from airport ID A123 to airport ID A456 on flight ID F456 to ensure the client stays within budget. Finally, book the reservation for user ID U123 on flight ID F456 from airport ID A123 to airport ID A456 to secure their travel plans.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="calculate",
                kwargs={"departure_airport_id": "A123", "destination_airport_id": "A456", "flight_id": "F456"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lee_6144", "flight_id": "F456", "departure_airport_id": "A123", "destination_airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_khan_6285",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Davis'} and your email is isabella.davis7889@example.com. You are patient, confident. First, book a reservation for Lucas Khan on flight AA123 from JFK to LAX on October 15, 2023, using the user ID obtained earlier. Once the booking is confirmed, retrieve the reservation details to verify the booking and obtain the reservation ID. This will ensure that Lucas Khan's travel plans are accurately recorded and ready for the next steps in his journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_khan_6285", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_khan_6285", "flight_number": "AA123", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_kim_9517",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Garcia'} and your email is ivan.garcia1055@example.com. You are organized, patient, confident. First, get user details for lei.kim1253@example.com to verify user ID and reservation history. Once you have confirmed Lei Kim's user ID, proceed to book a reservation for user ID U123 on flight number FL123 departing from airport ID AP456 to destination airport ID AP789 on 2023-11-15. After successfully booking the reservation, get the reservation details for reservation ID R234 to verify the booking and seat assignment, ensuring everything is in order for Lei Kim's upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "lei_kim_9517"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_kim_9517", "flight_number": "FL123", "departure_airport_id": "AP456", "destination_airport_id": "AP789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_gonzalez_6436",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Johansson'} and your email is anya.johansson3480@example.com. You are flexible, cautious. Search for available flights from JFK to LAX on 2023-11-15 for user Yusuf Gonzalez and then book a reservation on flight F123 from JFK to LAX for Yusuf Gonzalez with seat preference aisle. Ensure that the booking aligns with his travel schedule and preferences, as he is attending an important business conference in Los Angeles.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yusuf_gonzalez_6436"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_gonzalez_6436", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_kim_8539",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Thomas'} and your email is mia.thomas9453@example.com. You are logical, patient. Retrieve user details for Raj Kim using email raj.kim9425@example.com to confirm user ID. Then, search for flights departing from JFK Airport to LAX Airport on December 15, 2023, for Raj. Once you have confirmed the availability of a suitable flight, book a reservation for Raj Kim on flight F1234 from JFK to LAX on December 15, 2023, using user ID U5678.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.kim9425@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_kim_8539", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_jackson_4826",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Muller'} and your email is sophia.muller2270@example.com. You are cautious, patient, organized, direct. Book a reservation for Olivia Jackson on flight F1234, departing from the selected airport, and capture all necessary details for booking.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F1234", "user_id": "olivia_jackson_4826", "passenger_name": "Olivia Jackson"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_4132",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Taylor'} and your email is james.taylor4788@example.com. You are confident, polite. First, retrieve user details for Evelyn Brown using email evelyn.brown4905@example.com to confirm her user ID and preferences. Then, search for available flights from LAX to JFK on December 15, 2023, for Evelyn Brown. Once you have identified a suitable flight, book a reservation for Evelyn Brown on flight F123 from LAX to JFK on December 15, 2023, using the user ID obtained earlier.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.brown4905@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_brown_4132", "flight_id": "F123", "from": "LAX", "to": "JFK", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_li_8815",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Martin'} and your email is mohamed.martin3438@example.com. You are logical, polite, flexible. First, retrieve user details for Mia Li using her email (mia.li3308@example.com) to confirm her user ID and preferences. Once you have confirmed her details, proceed to search for flights from Mia's departure airport to her arrival airport on her preferred travel date. After identifying a suitable flight, book a reservation for Mia Li using her user ID and preferred seating class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.li3308@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_li_8815", "flight_id": "FL123", "seating_class": "Economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_nguyen_4236",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Hernandez'} and your email is liam.hernandez2653@example.com. You are confident, cautious, polite, organized. Retrieve user details for Evelyn Nguyen to ensure accurate reservation information.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "evelyn_nguyen_4236"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_silva_1659",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8678@example.com. You are independent, logical, organized. Retrieve user details for James Silva using email james.silva8362@example.com to confirm user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.silva8362@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_davis_3016",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Lopez'} and your email is chen.lopez3735@example.com. You are polite, logical, organized. Book a reservation for user ID corresponding to ivan.davis2010@example.com on flight AA100 from JFK to LAX on 2023-11-10.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_davis_3016", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_silva_8071",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johnson'} and your email is mei.johnson6054@example.com. You are flexible, optimistic. First, retrieve user details for Yara Silva using email yara.silva7778@example.com to confirm her user ID. Once you have confirmed her user ID, proceed to search for flights from the nearest airport to Yara's desired destination on her travel date. This will ensure that we can efficiently assist Yara with her travel plans and provide her with the best available flight options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.silva7778@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"user_id": "yara_silva_8071"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9268",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are logical, confident. Book reservation for Fatima Rossi from JFK to LAX on flight AF123 for 2023-11-15 using user ID U5152.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_9268", "flight_number": "AF123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_davis_8274",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs7490@example.com. You are polite, cautious, direct. First, search for available flights from LAX to JFK on the desired travel date of November 15th, 2023, for our client, Mason Davis, who needs to attend a business conference in New York. Once you find a suitable flight, book a reservation for Mason Davis on flight F123 from LAX to JFK, ensuring that all booking details are accurate and confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mason_davis_8274"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "JFK"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_davis_8274", "flight_number": "F123", "departure": "LAX", "destination": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_brown_4047",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Patel'} and your email is mason.patel6016@example.com. You are flexible, independent, organized. List all airports to identify the nearest one for user {'first_name': 'Lucas', 'last_name': 'Brown'} (lucas.brown9700@example.com). Once the nearest airport is identified, get airport info to provide user Lucas Brown with details such as facilities and services. Finally, search for available flights from Lucas Brown's nearest airport to his desired destination on his preferred travel dates to help him plan his trip efficiently.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_user_details",
                kwargs={"user_id": "lucas_brown_4047"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "nearest_airport_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_anderson_7848",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Brown'} and your email is evelyn.brown2248@example.com. You are polite, patient. First, retrieve user details for Fatima Anderson using email fatima.anderson9629@example.com to confirm her user ID. Once you have confirmed the user ID, proceed to book a reservation for Fatima Anderson on flight AA123 from JFK to LAX on 2023-11-15. This sequence ensures that the booking is made accurately under the correct user profile, facilitating a seamless travel experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.anderson9629@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_anderson_7848", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lee_7603",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Smith'} and your email is mason.smith6255@example.com. You are flexible, optimistic, patient, direct. First, book a flight reservation for user Daiki Lee (daiki.lee3427@example.com) from Tokyo Narita Airport (NRT) to Los Angeles International Airport (LAX) on December 15, 2023, in economy class. Once the reservation is confirmed, obtain the reservation details to verify the flight times and seat assignment. Finally, check-in Daiki Lee for flight JL062 to LAX to receive a digital boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lee_7603", "departure_airport": "NRT", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "daiki_lee_7603"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "daiki_lee_7603", "flight_number": "JL062"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8701",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Kim'} and your email is sofia.kim8076@example.com. You are patient, confident. First, retrieve user details for Mei Lee using email mei.lee8652@example.com to confirm identity. Once confirmed, search for available flights from LAX to JFK on 2023-11-15 for user Mei Lee. This will ensure that we have the correct passenger information before proceeding with the booking process and provide Mei Lee with the best available options for her travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.lee8652@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mei_lee_8701"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_johansson_1855",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are optimistic, independent, organized, direct. First, use get_user_details with email anya.johansson3480@example.com to retrieve Anya's user ID for booking her flight. Once you have Anya's user ID, proceed to use book_reservation with user ID U5678, flight number F1234, and seat preference window to secure Anya's seat on the flight. After booking, use get_reservation_details with reservation ID R6789 to confirm all details of Anya's booking, ensuring everything is in order for her upcoming trip.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.johansson3480@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "F1234", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R6789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_martin_1679",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are confident, optimistic, independent. Search for flights departing from airport ID A123 to airport ID A456 on 2023-12-15 for Mohamed Martin.",
        actions=[
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mohamed_martin_1679"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A123"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A456"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "mohamed_martin_1679", "departure_airport_id": "A123", "arrival_airport_id": "A456", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_davis_2676",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed9372@example.com. You are patient, polite. Book a reservation for user chen.davis3247@example.com on flight F12345 from LAX to JFK",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_davis_2676", "flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_rossi_7984",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Li'} and your email is yusuf.li3816@example.com. You are patient, direct, confident. Search for available flights from airport ID A123 to airport ID A456 on Lei's preferred travel date. Once you find a suitable option, book a reservation for Lei Rossi using user ID U789 on the selected flight. Ensure that the booking aligns with Lei's travel preferences and any loyalty program benefits she might have.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "lei_rossi_7984"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A123"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A456"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "arrival_airport_id": "A456", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_rossi_7984", "flight_id": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_wilson_1550",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Davis'} and your email is ethan.davis5235@example.com. You are cautious, organized, polite, direct. First, use get_user_details with email sophia.wilson3098@example.com to retrieve user ID and preferences. Once you have obtained Sophia's user ID and seating preferences, proceed to use book_reservation with user ID U789, flight ID F456, and her preferred seating class to reserve a ticket for Sophia. This sequence ensures that the booking aligns with her preferences, enhancing customer satisfaction and streamlining the reservation process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.wilson3098@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_wilson_1550", "flight_id": "F456", "seating_class": "preferred_class"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_sanchez_2625",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Garcia'} and your email is ivan.garcia1055@example.com. You are logical, direct, optimistic. Retrieve user details for Ava Sanchez using email ava.sanchez3468@example.com to confirm user ID, and then book a reservation for Ava Sanchez from JFK to LAX on flight F1234 using the user ID from the retrieved details. This sequence ensures that Ava is correctly identified in our system before securing her flight reservation, which is crucial for maintaining accurate records and providing seamless service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.sanchez3468@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_sanchez_2625", "flight_number": "F1234", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_li_1537",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Rossi'} and your email is aarav.rossi8016@example.com. You are confident, cautious, flexible, polite. Search for flights from JFK to LAX on December 15, 2023, for Olivia Li, and once you find a suitable option, proceed to book a reservation for Olivia Li on flight F123 from JFK to LAX on December 15, 2023, using her user ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_li_1537", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_9391",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson6900@example.com. You are cautious, flexible, logical. First, book a reservation for Lucas Rossi on flight AA1234 from JFK to LAX for October 15, 2023, ensuring seat selection in business class. Once the reservation is confirmed, update Lucas Rossi's reservation to include a special meal preference, specifically vegetarian, to accommodate his dietary needs. Finally, check in Lucas Rossi for flight AA1234 to secure his boarding pass and seat assignment, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_rossi_9391", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "seat_class": "business"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lucas_rossi_9391", "flight_number": "AA1234", "special_request": "vegetarian meal"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "lucas_rossi_9391", "flight_number": "AA1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_8985",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Li'} and your email is mohamed.li8562@example.com. You are patient, cautious, independent, direct. First, search for flights from JFK International Airport to LAX International Airport on December 15, 2023, to explore available options for a business trip. Once you have identified a suitable flight, proceed to book a reservation for Lucas Hernandez on flight F1234 from JFK to LAX with a window seat preference, ensuring his travel plans are confirmed.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"location": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_8985", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_lee_5870",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Anderson'} and your email is olivia.anderson5647@example.com. You are logical, patient. First, retrieve user details using email liam.lee4529@example.com to verify user identity. Once verified, search for available flights from JFK to LAX on the desired travel date. After identifying suitable options, proceed to book a reservation for user Liam Lee on flight F123 from JFK to LAX, ensuring a window seat preference is selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.lee4529@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_lee_5870", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_khan_2521",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Taylor'} and your email is sophia.taylor4639@example.com. You are confident, flexible, patient, polite. First, get user details for the user ID associated with Liam Khan (liam.khan7273@example.com) to verify identity and retrieve user preferences. Next, search for available flights from JFK to LAX on Liam Khan's preferred travel dates. Once you have found suitable options, proceed to book a reservation for Liam Khan on Flight F123 from JFK to LAX, ensuring you include his seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "liam_khan_2521"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_khan_2521", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_khan_7452",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Garcia'} and your email is olivia.garcia1660@example.com. You are organized, flexible, cautious, logical. First, retrieve user details for Omar Khan using the email omar.khan1438@example.com to verify user ID. Once the user ID is confirmed, search for flights from JFK to LAX on the desired date for Omar Khan. After finding a suitable flight, book a reservation for user U567 (Omar Khan) on flight F1234 from JFK to LAX on the specified date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.khan1438@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_khan_7452", "flight_id": "F1234", "departure": "JFK", "arrival": "LAX", "date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_ito_7343",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Khan'} and your email is fatima.khan6332@example.com. You are polite, organized, flexible, confident. Book a reservation for Lei Ito on flight F1234 from SFO to JFK on 2023-11-15 using user ID U5678. After securing the reservation, update Lei Ito's booking to include the preferred seat selection 12A, ensuring a comfortable travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_ito_7343", "flight_number": "F1234", "departure": "SFO", "arrival": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lei_ito_7343", "flight_number": "F1234", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_brown_9485",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Patel'} and your email is sophia.patel3802@example.com. You are cautious, direct, polite, flexible. First, retrieve user details for Sofia Brown using her email sofia.brown9418@example.com to confirm her identity, as she has requested assistance with her travel plans. Next, check available flights from JFK International Airport to LAX International Airport for her desired travel dates to ensure there are suitable options for her schedule. Finally, book a reservation for Sofia Brown on flight F1234 from JFK to LAX, making sure to include her seat preference and meal options, to complete her travel arrangements efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.brown9418@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_brown_9485", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_santos_2092",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Ito'} and your email is liam.ito5014@example.com. You are optimistic, organized, confident, direct. First, retrieve user details for Mia Santos using email mia.santos3745@example.com to confirm her identity, ensuring that all her information is accurate and up-to-date for the booking process. Once her identity is confirmed, proceed to search for flights from Mia's departure airport to her desired destination on her specified travel dates, taking into account any preferences she may have indicated. After selecting the most suitable flight option, book a reservation for Mia on the chosen flight, utilizing her user details and ensuring her selected seat preference is accommodated.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.santos3745@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mia_santos_2092"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_santos_2092", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_garcia_4224",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Patel'} and your email is mei.patel5375@example.com. You are logical, organized, polite. First, search for flights from LAX to JFK on 2023-12-15 for Sophia Garcia's travel needs to ensure she has the best options for her trip. Once you have identified the most suitable flight, proceed to book a reservation for flight F123 from LAX to JFK for user Sophia Garcia, ensuring her seat preference is a window seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "user_id": "sophia_garcia_4224", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_gonzalez_6040",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Taylor'} and your email is ivan.taylor9524@example.com. You are confident, logical, cautious. First, retrieve user details for Mohamed Gonzalez using mohamed.gonzalez1202@example.com to verify user ID and preferences. Once you have confirmed the user ID and gathered the necessary preferences, proceed to search for flights from the identified departure airport to a specified destination for Mohamed Gonzalez on the desired travel date. This will ensure that the flight options align with the user's preferences and travel needs, facilitating a smooth booking process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.gonzalez1202@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"user_id": "mohamed_gonzalez_6040"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_patel_6859",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Wilson'} and your email is mei.wilson6813@example.com. You are polite, cautious, patient, optimistic. First, retrieve user details using email sophia.patel3802@example.com to confirm user identity. Once confirmed, proceed to check-in for reservation ID R67890 for Sophia (first name Sophia, last name Patel) to receive the boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.patel3802@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R67890", "user_id": "sophia_patel_6859"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_li_6854",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Ahmed'} and your email is omar.ahmed2437@example.com. You are flexible, independent. Retrieve user details for Isabella Li using email isabella.li1262@example.com to obtain user ID. Then, search for flights from JFK Airport to LAX Airport on December 15, 2023, for the user ID obtained. This will help ensure that Isabella Li has the best travel options available for her trip, allowing her to plan her journey efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.li1262@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_taylor_9942",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Taylor'} and your email is noah.taylor2496@example.com. You are flexible, polite, confident. First, retrieve user details for Noah Taylor using email noah.taylor2496@example.com to verify user ID for booking. Once verified, proceed to search for available flights from ATL to LAX (Los Angeles International Airport) on the specified travel date. After identifying a suitable option, book a reservation for Noah Taylor on flight F123 from ATL to LAX, confirming seat preference and payment details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.taylor2496@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_taylor_9942", "flight_number": "F123", "departure": "ATL", "destination": "LAX", "seat_preference": "window", "payment_details": {"card_number": "4111111111111111", "expiry_date": "12/25", "cvv": "123"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_li_7880",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Kovacs'} and your email is olivia.kovacs9948@example.com. You are cautious, organized, optimistic, patient. First, search for flights from JFK to LAX departing on 2023-12-15 to find suitable options for our client, Amelia Li. Once you have identified the best flight, proceed to book a reservation for Amelia Li on flight F123 from JFK to LAX on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_li_7880", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_anderson_3457",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Rossi'} and your email is mei.rossi1283@example.com. You are patient, flexible. Use book_reservation with user_id 'U123', flight_id 'AA100', and seat_preference 'window' to book a flight for Juan Anderson.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_anderson_3457", "flight_id": "AA100", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_santos_2092",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Muller'} and your email is fatima.muller7881@example.com. You are logical, polite, cautious, flexible. Book a flight reservation for user Mia Santos from JFK to LAX on December 15, 2023, using flight ID F12345.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_santos_2092", "flight_id": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_kim_6383",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Khan'} and your email is isabella.khan9667@example.com. You are independent, optimistic. First, retrieve user details for Noah Kim using email noah.kim2865@example.com to confirm identity, ensuring that all personal information is accurate and up-to-date. Once identity confirmation is complete, proceed to search for available flights from JFK to LAX on March 15, 2024, for user Noah Kim, taking into account any specific preferences or requirements he may have.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.kim2865@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_brown_8516",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson3802@example.com. You are confident, logical. First, retrieve user details for Amelia Brown using email amelia.brown8765@example.com to verify user ID. Next, use the verified user ID to book a reservation for Amelia on flight F123 with a seat preference as aisle. Finally, check Amelia in for flight F123 using the reservation ID obtained to secure her boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.brown8765@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_brown_8516", "flight_number": "F123", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "amelia_brown_8516", "flight_number": "F123", "reservation_id": "res_12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_9061",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Gonzalez'} and your email is ivan.gonzalez2763@example.com. You are direct, organized, logical, flexible. Retrieve the user details for Mei Wilson using the email mei.wilson6813@example.com to confirm her identity for the booking process. Once her identity is confirmed, search for flights from JFK to LAX for Mei Wilson on her preferred travel date to find suitable options. After selecting a suitable flight, book a reservation for Mei Wilson on flight F123 from JFK to LAX, ensuring seat selection and meal preference are specified.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.wilson6813@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mei_wilson_9061"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_9061", "flight_number": "F123", "departure": "JFK", "destination": "LAX", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_kim_4489",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johnson'} and your email is mei.johnson6054@example.com. You are cautious, polite. First, retrieve user details for Emma Kim using email emma.kim1896@example.com to confirm her user ID, as she has requested assistance with her upcoming travel plans. Once you have confirmed her user ID, proceed to check the flight status for flight number AA123 from SFO to JFK on her desired travel date to ensure there are no delays or changes that might affect her itinerary. Finally, book a reservation for Emma Kim on flight AA123 from SFO to JFK using her confirmed user ID, ensuring all her travel preferences are accommodated.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.kim1896@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA123", "departure_airport": "SFO", "arrival_airport": "JFK", "date": "2023-10-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_kim_4489", "flight_number": "AA123", "departure_airport": "SFO", "arrival_airport": "JFK", "preferences": {"seat": "window", "meal": "vegetarian"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_lopez_2185",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Patel'} and your email is mei.patel5375@example.com. You are organized, independent, direct, polite. Search for available flights from airport ID A001 to airport ID A002 on 2023-12-15 for user Isabella Lopez.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_lopez_2185"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A001"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "A002"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A001", "arrival_airport_id": "A002", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_gonzalez_6040",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Silva'} and your email is noah.silva9325@example.com. You are optimistic, cautious, direct, confident. Book a reservation for Mohamed Gonzalez on Flight ID F12345 from Airport ID A6789 to Airport ID A5432, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_gonzalez_6040", "flight_id": "F12345", "from_airport_id": "A6789", "to_airport_id": "A5432", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_jackson_7257",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Brown'} and your email is lucas.brown9700@example.com. You are confident, cautious, polite, patient. First, search for flights from New York JFK to Los Angeles LAX departing on 2023-11-15 for availability to ensure there are options for the desired travel date. Once you have confirmed availability, proceed to book a reservation for user Olivia Jackson on flight F12345, ensuring her seat preference for a window seat is accommodated. This sequence will ensure Olivia's travel plans are secured efficiently and according to her preferences.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_jackson_7257", "flight_number": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_johansson_9644",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Smith'} and your email is james.smith6775@example.com. You are independent, cautious, polite. Book a reservation for Amelia Johansson on flight number AA123 using her user details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lopez_8637",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Jackson'} and your email is aarav.jackson5263@example.com. You are polite, cautious, optimistic, logical. Book a reservation for Anya Lopez on flight F123 from JFK to LAX on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_taylor_6683",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Khan'} and your email is amelia.khan7634@example.com. You are optimistic, logical, organized, flexible. Use book_reservation with user ID retrieved and flight number \"AA123\" to reserve a seat for Liam on the specified flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_taylor_6683", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_ito_6207",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez1202@example.com. You are logical, cautious. First, book a reservation for Mei Ito on flight F123 from Airport A to Airport B on January 15, 2024, with an aisle seat preference. Once the reservation is confirmed, retrieve the reservation details to ensure the booking is accurate and provide Mei Ito with her itinerary.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_ito_6207", "flight_number": "F123", "departure_airport": "Airport A", "arrival_airport": "Airport B", "departure_date": "2024-01-15", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mei_ito_6207"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_taylor_9816",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Davis'} and your email is fatima.davis2844@example.com. You are flexible, patient. First, retrieve user details for Lucas Taylor using email lucas.taylor7450@example.com to confirm user identity. Once confirmed, search for flights departing from LAX to JFK on 2023-11-15 with flexible timing options to accommodate Lucas Taylor's schedule. After selecting a suitable flight, book a reservation for user ID U7450 on flight F123 with a preference for a window seat to ensure a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.taylor7450@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_taylor_9816", "flight_id": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_moore_9694",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Johnson'} and your email is yara.johnson5258@example.com. You are independent, organized, polite. Retrieve user details for Sophia Moore to verify her account using email sophia.moore3998@example.com. Once verified, list all available airports to identify the nearest airport to Sophia Moore's location. After identifying the nearest airport, search for flights from this airport to Los Angeles International Airport (LAX) for the upcoming weekend.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.moore3998@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "Sophia Moore's location"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_santos_7035",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Rossi'} and your email is daiki.rossi1310@example.com. You are flexible, patient. First, get user details for User ID U123 to verify personal information for Sophia Santos, ensuring her profile is accurate and up-to-date. Next, book a reservation for Sophia Santos on Flight ID F456 from Airport ID A789 to Airport ID A321 on 2023-11-15, confirming her travel plans are secured. Finally, check in for Reservation ID R234 for Sophia Santos to secure her boarding pass and seat assignment, guaranteeing a smooth boarding process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "sophia_santos_7035"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_santos_7035", "flight_id": "F456", "from_airport_id": "A789", "to_airport_id": "A321", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R234", "user_id": "sophia_santos_7035"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_patel_1917",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Johnson'} and your email is liam.johnson5509@example.com. You are independent, optimistic, confident, polite. First, List_all_airports to provide Daiki Patel with options for departure and arrival locations, ensuring he has a comprehensive selection for his travel plans. Once Daiki Patel has chosen his preferred airports, proceed to Book_reservation for user ID U001 for flight F1234 from airport A567 to airport A890 on date 2023-12-15, confirming his booking and ensuring a smooth travel experience.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_patel_1917", "flight_id": "F1234", "departure_airport": "A567", "arrival_airport": "A890", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_garcia_4224",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Lopez'} and your email is daiki.lopez3534@example.com. You are organized, confident, cautious, direct. First, get user details for Sophia Garcia to verify her email sophia.garcia3812@example.com before booking her flight. Once the email is verified, proceed to book a reservation for Sophia Garcia on flight F123 with a window seat preference. This ensures that we have accurate contact information and provide her with the preferred seating arrangement for a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "sophia_garcia_4224"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_garcia_4224", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_kovacs_8269",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Lopez'} and your email is james.lopez4194@example.com. You are organized, direct, polite. Book a reservation on flight F7890 for user Mia Kovacs with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_kovacs_8269", "flight_number": "F7890", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_li_5039",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Li'} and your email is yusuf.li3816@example.com. You are polite, optimistic, confident. Search for available flights from Tokyo Haneda Airport (HND) to Los Angeles International Airport (LAX) on Daiki Li's preferred travel date. Once you have identified a suitable flight, proceed to book a reservation for Daiki Li on flight ID F5678 using user ID U2854. Ensure that all booking details are accurate and confirm the reservation to secure Daiki's travel plans.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_li_5039", "flight_id": "F5678", "passenger_name": "Daiki Li", "departure_airport": "HND", "arrival_airport": "LAX", "travel_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_brown_4047",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Davis'} and your email is isabella.davis7889@example.com. You are independent, organized, flexible. Book reservation for Lucas Brown on flight AA100 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_brown_4047", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_li_6867",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Patel'} and your email is lei.patel8770@example.com. You are direct, cautious, optimistic. Book a flight reservation for User {'first_name': 'Evelyn', 'last_name': 'Li'} (evelyn.li5694@example.com) from JFK to LAX on 2023-11-15 using book_reservation tool.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_li_6867", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "email": "evelyn.li5694@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lee_4334",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kovacs'} and your email is raj.kovacs7961@example.com. You are independent, confident, flexible, organized. Retrieve user details for Anya Lee using email anya.lee6655@example.com to confirm user ID. Once confirmed, search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) on her desired travel date. After identifying a suitable flight, book a reservation for user ID U001 for flight F12345 from JFK to LAX on the specified date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.lee6655@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lee_4334", "flight_id": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-01"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_gonzalez_5516",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Lopez'} and your email is noah.lopez9258@example.com. You are independent, cautious. Retrieve user details for Chen Gonzalez using email chen.gonzalez3972@example.com to confirm user ID and preferences. Once the user ID is confirmed, book a reservation for Chen Gonzalez on flight F123 using the verified user ID and flight details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.gonzalez3972@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_gonzalez_5516", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_patel_3577",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Silva'} and your email is mohamed.silva9198@example.com. You are cautious, direct, flexible, polite. First, search for flights departing from JFK to LAX on the desired travel date for Olivia Patel to identify available options. Once you have found a suitable flight, proceed to book a reservation for Olivia Patel on flight F123 from JFK to LAX using the user ID obtained earlier. This will ensure her travel plans are confirmed and in place.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_patel_3577", "flight_number": "F123", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_garcia_2058",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Li'} and your email is yusuf.li3816@example.com. You are cautious, direct, organized, independent. Retrieve user details for Yusuf Garcia using email yusuf.garcia4130@example.com to confirm user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.garcia4130@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_sanchez_8204",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Jackson'} and your email is daiki.jackson3105@example.com. You are cautious, flexible, organized. Book reservation for Liam Sanchez on flight AA123 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_sanchez_8204", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_smith_9363",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson3750@example.com. You are optimistic, logical. Search for flights from JFK Airport to LAX Airport on Emma's desired travel date to find suitable options. Once you have identified a suitable flight, use the book_reservation tool to reserve a seat for Emma on flight F1234 from JFK to LAX on her chosen date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_smith_9363", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_li_6854",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Kovacs'} and your email is ethan.kovacs1120@example.com. You are direct, patient, organized, cautious. First, get user details for user with email isabella.li1262@example.com to verify user ID and retrieve user preferences. Once you have confirmed the user details, proceed to book a reservation for user U001 (Isabella Li) on flight number AA123 from SFO to JFK on 2023-11-15 using the book_reservation tool. After successfully booking the reservation, check in for user U001 (Isabella Li) with reservation ID R456 on flight number AA123 to secure the boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.li1262@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_li_6854", "flight_number": "AA123", "departure": "SFO", "destination": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "isabella_li_6854", "reservation_id": "R456", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9652",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen6855@example.com. You are flexible, patient. Search for flights from JFK International Airport to LAX International Airport on the desired travel date, then book a reservation for flight F123 from JFK to LAX for user Fatima Rossi, ensuring all travel preferences are met. This will help Fatima secure her travel plans efficiently and ensure her preferences are considered, enhancing her overall travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "user_id": "fatima_rossi_9652", "first_name": "Fatima", "last_name": "Rossi", "email": "amelia.nguyen6855@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_smith_4705",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Martin'} and your email is chen.martin3409@example.com. You are flexible, logical, polite. Retrieve the user details for Olivia Smith using the email olivia.smith8381@example.com to confirm user ID. Once you have confirmed her user ID, search for flights from JFK to LAX on her desired travel date. After identifying the suitable flight, book a reservation for Olivia Smith with the obtained user ID for flight F123 from JFK to LAX on the specified date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.smith8381@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_smith_4705", "flight_id": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ahmed'} and your email is mia.ahmed1335@example.com. You are flexible, polite, cautious, logical. Book reservation for James Ahmed on flight AA123 departing from JFK to LAX on October 15, 2023",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_ahmed_4322", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_patel_9446",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Ito'} and your email is fatima.ito3012@example.com. You are patient, independent, cautious, confident. Book reservation for user Chen Patel on flight F123 from JFK to LAX with seat preference and meal option.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_patel_9446", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_thomas_8641",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are cautious, polite, logical, optimistic. Book reservation for Harper Thomas on flight FL5678 from LAX to JFK on 2023-10-15 using the book_reservation tool.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_thomas_8641", "flight_number": "FL5678", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_sanchez_1853",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Lopez'} and your email is mei.lopez4337@example.com. You are direct, cautious. Retrieve user details for Lucas Sanchez using email lucas.sanchez2568@example.com to verify account information. Once verified, search for flights from Airport ID A123 to Airport ID B456 on the preferred date of travel for Lucas Sanchez. After identifying a suitable flight, book a reservation for Lucas Sanchez on Flight ID F789 with his seat preference and required meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.sanchez2568@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "lucas_sanchez_1853"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "arrival_airport_id": "B456", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_sanchez_1853", "flight_id": "F789", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_li_4002",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Garcia'} and your email is yara.garcia6882@example.com. You are confident, polite, flexible. Book a reservation for user U001 (Noah Li) on flight F123 from JFK to LAX on 2023-11-15, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_li_4002", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_wilson_8288",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Garcia'} and your email is raj.garcia9382@example.com. You are direct, polite, independent, organized. Search for available flights from JFK to LAX on the desired travel date for our client, Amelia Wilson, ensuring that the options meet her preferred travel times and class. Once you have identified a suitable flight, proceed to book a reservation for Amelia Wilson on flight F123456 from JFK to LAX, confirming all details align with her preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_wilson_8288", "flight_number": "F123456", "departure_airport": "JFK", "arrival_airport": "LAX", "travel_date": "2023-11-15", "class": "Economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_silva_2256",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Li'} and your email is emma.li1051@example.com. You are polite, independent, logical, direct. First, book a reservation for user Noah Silva on flight number AA123 from JFK to LAX on 2023-12-15. Once the booking is confirmed, retrieve the reservation details to confirm the booking ID and travel itinerary. After confirming the details, update the reservation to add a meal preference for Noah Silva using the confirmed booking ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_silva_2256", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "noah_silva_2256"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "noah_silva_2256", "booking_id": "CONFIRMED_BOOKING_ID", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_7450",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed1896@example.com. You are direct, organized. First, get user details for Mason Lee (mason.lee8809@example.com) to retrieve user ID. Once you have the user ID, proceed to book a reservation for Mason Lee on flight AA123 from LAX to JFK on 2023-11-15. This sequence ensures that Mason Lee's travel plans are confirmed and prepared efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_7450", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_6762",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Gonzalez'} and your email is harper.gonzalez9176@example.com. You are flexible, optimistic, cautious. Book a reservation for user Yusuf Kovacs on flight F123 from JFK to LAX on December 15, 2023, with seat preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_6762", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johnson_9566",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown8989@example.com. You are independent, patient, logical, organized. Book a reservation for User: Mason Johnson on flight F123 from JFK to LAX on 2023-12-15, seat preference: aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johnson_9566", "flight_number": "F123", "departure": "JFK", "arrival": "LAX", "date": "2023-12-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_8793",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Kovacs'} and your email is ava.kovacs1250@example.com. You are confident, direct. Aarav Nguyen needs to travel from San Francisco to New York for an important business meeting. First, search for available flights from SFO to JFK on his preferred travel date to ensure he has options that fit his schedule. Once you have identified a suitable flight, proceed to book a reservation for Aarav Nguyen on flight F123 from SFO to JFK. Make sure to select his seat preference and any additional services he might require for a comfortable journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_nguyen_8793", "flight_id": "F123", "departure_airport": "SFO", "arrival_airport": "JFK", "seat_preference": "aisle", "additional_services": ["extra_legroom", "meal"]}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_5128",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are patient, logical, confident. First, retrieve user details for Mohamed Taylor using email mohamed.taylor9286@example.com to ensure accurate information for booking. Next, search for flights from JFK to LAX on the specific date of 2023-12-15 to find available options. Finally, book a reservation for user Mohamed Taylor on flight F1234 from JFK to LAX on 2023-12-15, ensuring all details are correct for a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.taylor9286@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_5128", "flight_id": "F1234", "departure": "JFK", "arrival": "LAX", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_9830",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Taylor'} and your email is ivan.taylor9524@example.com. You are flexible, optimistic. Book a reservation for Mohamed Taylor on flight AA100 from JFK to LAX on December 1st with a seat preference of aisle, and then get the reservation details to confirm the booking and seat assignment.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01", "seat_preference": "aisle", "passenger_name": {"first_name": "Mohamed", "last_name": "Taylor"}}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA100", "departure_date": "2023-12-01"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_brown_5554",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Hernandez'} and your email is mei.hernandez4974@example.com. You are confident, direct, polite. Book a reservation for Ivan Brown on flight F123 from JFK to LAX, including seat selection.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_brown_5554", "flight_number": "F123", "departure": "JFK", "destination": "LAX", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_anderson_8718",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen8380@example.com. You are organized, patient, confident, optimistic. Book a reservation for Sofia Anderson on the selected flight using her user ID and providing necessary passenger details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_anderson_8718", "passenger_details": {"first_name": "Sofia", "last_name": "Anderson", "contact_email": "amelia.nguyen8380@example.com", "traits": ["organized", "patient", "confident", "optimistic"]}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_brown_9300",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Kim'} and your email is noah.kim2865@example.com. You are cautious, optimistic, organized, flexible. Book a reservation for Omar Brown from airport A123 to airport A456 on flight F1234, ensuring all required parameters like date and seat preference are provided.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_brown_9300", "flight_number": "F1234", "departure_airport": "A123", "arrival_airport": "A456", "date": "2023-11-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_nguyen_6566",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are flexible, independent. Search for flights departing from JFK Airport to LAX Airport on 2023-12-15. Once you have identified a suitable flight, calculate the total cost for booking two economy class tickets on flight F1234.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="calculate",
                kwargs={"flight_number": "F1234", "class": "economy", "number_of_tickets": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_9671",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Santos'} and your email is ava.santos7003@example.com. You are polite, cautious, logical. Retrieve user details for Aarav Lee using email aarav.lee2966@example.com to verify user ID. Once the user ID is verified, proceed to book a reservation for Aarav Lee on flight F789 from JFK to LAX on November 15th, 2023 using the retrieved user ID. This sequence ensures that Aarav's reservation is accurately linked to his user profile, facilitating a smooth booking process for the upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.lee2966@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_lee_9671", "flight_number": "F789", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_muller_6989",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Garcia'} and your email is ivan.garcia1055@example.com. You are confident, flexible, organized, logical. First, retrieve user details for Juan Muller to confirm user ID and account information. Once confirmed, search for flights from JFK to LAX on December 15th for Juan Muller using available airport data. After identifying a suitable flight, proceed to book a reservation for Juan Muller on flight F123 from JFK to LAX, including his seating preferences and meal options to ensure a comfortable travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "juan_muller_6989"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_muller_6989", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_brown_8250",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Taylor'} and your email is liam.taylor5916@example.com. You are optimistic, confident, independent, cautious. Retrieve user details for Chen Brown using email chen.brown1849@example.com to confirm user ID and preferences. Once confirmed, list all airports to identify the nearest airport to Chen Brown's current location. After identifying the nearest airport, get airport info to provide Chen Brown with available flight options, ensuring a seamless travel planning experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.brown1849@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest_airport_to_chen_brown"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_ito_8544",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi4133@example.com. You are direct, organized, cautious, flexible. First, search for available flights from JFK to LAX on 2023-11-15 for user Amelia Ito to ensure there is a suitable option. Once you have identified a flight, proceed to book a reservation for Amelia Ito on flight F1234 with a seat preference of window, ensuring her travel needs are met efficiently.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_ito_8544", "flight_number": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_thomas_9373",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis5061@example.com. You are logical, polite. First, search for flights from airport A567 to destination airport A890 departing on 2023-11-15. Once you have identified a suitable flight, proceed to book a reservation for Lucas Thomas on flight F678 from airport A567 to A890 with a seat preference for a window. This will ensure Lucas has a confirmed booking for his travel needs.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_thomas_9373", "flight_id": "F678", "departure_airport": "A567", "destination_airport": "A890", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_sanchez_2625",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ito'} and your email is james.ito8311@example.com. You are optimistic, patient. Retrieve user details for Ava Sanchez using email ava.sanchez3468@example.com to verify account information. Once verified, create a book_reservation request for Ava Sanchez using user ID U3468 for flight ID F12345 to ensure she has a confirmed seat on her desired flight. Finally, check in Ava Sanchez for flight ID F12345 using reservation ID R7890 to secure her boarding pass and streamline her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.sanchez3468@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_sanchez_2625", "flight_id": "F12345"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ava_sanchez_2625", "reservation_id": "R7890"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_johnson_4260",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Moore'} and your email is aarav.moore8670@example.com. You are cautious, direct, optimistic. Retrieve user details for Chen Johnson using email chen.johnson6896@example.com to confirm user ID. Once confirmed, search available flights from airport ID A123 to airport ID B456 on 2023-11-15 to find suitable options. After identifying a flight, book a reservation for the confirmed user ID on the selected flight with seat preference aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.johnson6896@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_johnson_4260", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_kovacs_3082",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Martin'} and your email is harper.martin5272@example.com. You are patient, organized, independent. First, get user details for Harper Kovacs using email harper.kovacs2607@example.com to retrieve the user ID. Once you have the user ID, search for flights from JFK Airport to LAX Airport, departing on 2023-11-15. After identifying a suitable flight, book a reservation for the retrieved user ID on flight F1234 from JFK to LAX, with a seat preference of window and class economy. This process will ensure that Harper Kovacs has a confirmed booking for their upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.kovacs2607@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_kovacs_3082", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_li_1537",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Muller'} and your email is yusuf.muller7236@example.com. You are polite, logical. Retrieve user details for Olivia Li using the email olivia.li8860@example.com to confirm user ID. Once confirmed, book a reservation for user U001 (Olivia Li) from airport ID A123 (JFK) to airport ID A456 (LAX) with preferred travel date 2023-11-15. This will ensure that Olivia Li's travel plans are accurately recorded and prepared in advance for her upcoming trip.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.li8860@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_li_1537", "from_airport_id": "A123", "to_airport_id": "A456", "travel_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_davis_4420",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Khan'} and your email is isabella.khan4508@example.com. You are flexible, cautious, organized. Book reservation for Ethan Davis on Flight ID F1234 from JFK to LAX for 2023-11-15 with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_davis_4420", "flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_garcia_6211",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Santos'} and your email is james.santos8116@example.com. You are logical, independent. Book a reservation for Evelyn Garcia on flight number AA123 from JFK to LAX on October 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_garcia_6211", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_lee_6136",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Rossi'} and your email is mei.rossi1283@example.com. You are polite, flexible, logical, patient. Search for flights from LAX to JFK on preferred travel dates for user ID associated with James Lee.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "james_lee_6136"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_lopez_1398",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Moore'} and your email is fatima.moore4109@example.com. You are patient, confident, organized. Book reservation for Olivia Lopez on flight AA123 from JFK to LAX on 2023-11-15, selecting seat 12A.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_lopez_1398", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_sanchez_4758",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Johnson'} and your email is harper.johnson9867@example.com. You are polite, direct, confident, flexible. Retrieve user details for Sofia Sanchez using email sofia.sanchez3601@example.com to confirm user ID. Then, list all airports to find the nearest airport to Sofia Sanchez's location. Once the nearest airport is identified, search for flights departing from this airport to Sofia's chosen destination on her desired date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.sanchez3601@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "nearest_airport_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ahmed_3713",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ahmed'} and your email is amelia.ahmed2287@example.com. You are logical, cautious. Book_reservation for user ID retrieved earlier on flight F1234, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ahmed_3713", "flight_id": "F1234", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_jackson_9549",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Kim'} and your email is noah.kim2865@example.com. You are cautious, confident, organized. First, retrieve user details for Daiki Jackson using the email daiki.jackson3105@example.com to confirm the user's identity and retrieve user ID. Once the user identity is confirmed, search for available flights from Tokyo Haneda Airport to Los Angeles International Airport on December 15, 2023, for user Daiki Jackson. After identifying a suitable flight, proceed to book a reservation for Daiki Jackson on flight F123 from Tokyo Haneda Airport to Los Angeles International Airport on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.jackson3105@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_jackson_9549", "flight_number": "F123", "departure_airport": "Tokyo Haneda Airport", "arrival_airport": "Los Angeles International Airport", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_silva_9265",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Li'} and your email is juan.li6848@example.com. You are confident, logical, polite, flexible. First, get user details for 'mohamed.silva9198@example.com' to retrieve user ID and preferences. Once you have obtained Mohamed Silva's user ID and preferences, proceed to search for flights from Airport A456 to Airport A789 on 2023-11-15 for Mohamed Silva, considering his preferences. This sequential approach ensures that you have all necessary information to find the most suitable flight options for Mohamed Silva, enhancing his travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.silva9198@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_6381",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Taylor'} and your email is james.taylor4788@example.com. You are polite, cautious. First, get user details for Harper Santos using email harper.santos7981@example.com to verify user ID for reservation. Once verified, proceed to book reservation for user U123 on flight F123 departing from A456 to A789 on 2023-11-15. After the reservation is successfully booked, check in for reservation R456 for Harper Santos to obtain boarding pass and confirm seat selection.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.santos7981@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_6381", "flight_id": "F123", "departure_airport": "A456", "arrival_airport": "A789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "harper_santos_6381"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Johansson'} and your email is sophia.johansson7738@example.com. You are organized, logical, optimistic, direct. First, use 'get_user_details' with user email 'ethan.hernandez2569@example.com' to retrieve Ethan's user ID and preferences. Once you have Ethan's user ID, proceed to use 'check_in' for reservation ID 'R5678' to check Ethan in for flight 'AA123'. This will ensure Ethan is ready for his flight from JFK to LAX on 2023-10-25, enhancing his travel experience with our airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.hernandez2569@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "user_id": "ethan_hernandez_8041"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_lopez_9956",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Khan'} and your email is mia.khan3010@example.com. You are logical, patient, organized. First, retrieve user details for Ivan Lopez using the email ivan.lopez7081@example.com to confirm his user ID. Once confirmed, proceed to book a reservation for Ivan Lopez (user ID U001) on flight AA123 from LAX to JFK for 2023-11-20. After booking, ensure to get the reservation details for reservation ID R001 to confirm the booking for Ivan Lopez.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.lopez7081@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_lopez_9956", "flight_number": "AA123", "departure": "LAX", "arrival": "JFK", "date": "2023-11-20"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R001"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_ito_7857",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Taylor'} and your email is sofia.taylor9399@example.com. You are logical, independent. First, get user details for Liam Ito using email liam.ito5014@example.com to confirm user ID and preferences. Once you have confirmed the user ID, search for available flights from SFO to JFK on Liam Ito's desired travel date. After identifying a suitable flight, book a reservation for Liam Ito on flight F123 from SFO to JFK, using the user ID obtained earlier. This sequence ensures that Liam Ito's travel preferences are met efficiently and that his reservation is secured promptly.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.ito5014@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_ito_7857", "flight_number": "F123", "departure": "SFO", "arrival": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_gonzalez_5516",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Gonzalez'} and your email is yusuf.gonzalez6753@example.com. You are cautious, independent, logical. Retrieve user details for Chen Gonzalez using email chen.gonzalez3972@example.com to confirm user ID. Once confirmed, search for flights from JFK to LAX on the desired travel dates for Chen Gonzalez. After selecting the most suitable option, book a reservation for Chen Gonzalez on flight F123 from JFK to LAX, ensuring to include preferred seating and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.gonzalez3972@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_gonzalez_5516", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_johansson_8847",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Lopez'} and your email is mei.lopez4337@example.com. You are flexible, logical, patient, confident. First, retrieve user details for James Johansson using email james.johansson1491@example.com to confirm his user ID for a reservation. Once confirmed, proceed to search for flights departing from LAX (Los Angeles International Airport) to JFK (John F. Kennedy International Airport) for James Johansson on March 15, 2024. This will ensure that we have accurate user information before checking flight availability for his travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.johansson1491@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "james_johansson_8847"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_johnson_6488",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Smith'} and your email is olivia.smith8381@example.com. You are optimistic, independent, cautious, confident. First, book a new reservation for Liam Johnson from Airport A5678 to Airport B1234 on Flight F1234. Once the reservation is confirmed, calculate the total cost of Liam Johnson's reservation on Flight F1234, including taxes and fees, to ensure accurate billing and provide him with a detailed breakdown of the charges.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_johnson_6488", "flight_number": "F1234", "departure_airport": "A5678", "arrival_airport": "B1234"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "liam_johnson_6488", "flight_number": "F1234"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "liam_johnson_6488", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_sanchez_7773",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ito'} and your email is amelia.ito1923@example.com. You are polite, flexible. Book reservation for user Aarav Sanchez on flight AI203 from JFK to LAX departing on 2023-11-15, seating preference: aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_sanchez_7773", "flight_number": "AI203", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seating_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lopez_8637",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Jackson'} and your email is olivia.jackson6446@example.com. You are direct, optimistic, organized. First, book a reservation for Anya Lopez with user ID U1234 on flight AA100 from JFK to LAX (Los Angeles International Airport) departing on 2023-11-15 to ensure she has a confirmed seat for her upcoming business trip. Once the reservation is successfully made, promptly retrieve the reservation details to confirm the booking on flight AA100, ensuring all information is accurate and up-to-date for Anya's travel itinerary.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "AA100"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_jackson_7992",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Muller'} and your email is isabella.muller7926@example.com. You are organized, polite, cautious. First, retrieve user details for Yara Jackson using email yara.jackson6598@example.com to confirm her user ID. Once confirmed, book a reservation for her using the user ID on flight ID F1234 from departure airport ID A123 to destination airport ID A456. After successfully booking the reservation, check in for flight ID F1234 using the reservation ID provided for Yara Jackson to ensure she is ready for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.jackson6598@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_jackson_7992", "flight_id": "F1234", "departure_airport_id": "A123", "destination_airport_id": "A456"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "reservation_id_placeholder"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7587",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Khan'} and your email is noah.khan9376@example.com. You are flexible, optimistic. Search for flights departing from JFK Airport to LAX Airport on 2023-12-15. Once you have identified a suitable flight, proceed to book a reservation for Ivan Wilson on that flight using the user ID retrieved earlier. This will ensure Ivan's travel plans are secured efficiently.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_wilson_7587", "flight_id": "flight_123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_santos_3700",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith9832@example.com. You are patient, flexible. Retrieve user details for Ava Santos using email ava.santos7003@example.com to ensure all her information is correct before proceeding with her travel plans. Then, book a reservation for Ava Santos from airport ID A123 to airport ID A456 on flight ID F456 with her seat preference as window, ensuring she has a comfortable journey. Finally, check flight status again for flight ID F456 to confirm any updates on departure time, so Ava can plan her arrival at the airport accordingly.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.santos7003@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_santos_3700", "from_airport_id": "A123", "to_airport_id": "A456", "flight_id": "F456", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_brown_2655",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Johnson'} and your email is omar.johnson8258@example.com. You are confident, cautious. First, check flight status for flight number AA123 on 2023-12-01 to confirm availability, ensuring that the flight is on schedule and has available seats. Once confirmed, proceed to book a reservation for user ID U1023 on flight AA123 from JFK to LAX on 2023-12-01, with a seat preference for a window. After securing the reservation, update it to add a special meal request for a vegetarian option, ensuring that all preferences are noted for the user's comfort.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA123", "date": "2023-12-01"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_brown_2655", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-01", "seat_preference": "window"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "anya_brown_2655", "special_request": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_thomas_5421",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed1896@example.com. You are patient, independent, confident, cautious. First, retrieve the user details for James Thomas using the email james.thomas5223@example.com to confirm his identity. Once confirmed, proceed to search for available flights from JFK International Airport to LAX for the preferred travel dates provided by James Thomas. After identifying suitable flight options, book a reservation for James Thomas on flight F1234 from JFK to LAX, ensuring a window seat preference and adding his frequent flyer number 987654321.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.thomas5223@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_thomas_5421", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "frequent_flyer_number": "987654321"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_davis_7802",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Rossi'} and your email is fatima.rossi5152@example.com. You are confident, direct, cautious. Book a reservation for James Davis on flight F456 from the departure airport to the destination airport, including seat selection and meal preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_davis_7802", "flight_number": "F456", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_hernandez_2149",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Garcia'} and your email is ethan.garcia3231@example.com. You are logical, optimistic. First, retrieve user details for Mia Hernandez using mia.hernandez5840@example.com to confirm her user ID. Once you have confirmed Mia's user ID, proceed to book a reservation for her on flight AA123 from LAX to JFK on November 15, 2023. After successfully booking the reservation, retrieve the reservation details to confirm Mia's seat assignment, ensuring that all information is accurate and up-to-date for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.hernandez5840@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_hernandez_2149", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_hernandez_2149", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_taylor_6100",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Li'} and your email is olivia.li8860@example.com. You are polite, patient. Please retrieve user details for Yusuf Taylor using email yusuf.taylor8412@example.com. Once you have confirmed his details, proceed to search for flights from JFK to LAX on his preferred travel date. After identifying a suitable flight, book a reservation for Yusuf Taylor on flight number AA456 from JFK to LAX.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.taylor8412@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_taylor_6100", "flight_number": "AA456", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_7450",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Garcia'} and your email is aarav.garcia6639@example.com. You are confident, independent, direct, cautious. First, search for flights from JFK Airport to LAX Airport departing on 2023-11-15. Once you have identified a suitable flight, proceed to book a reservation for Mason Lee on flight F1234 from JFK to LAX on 2023-11-15, with an aisle seat preference. Ensure the booking is confirmed to facilitate Mason Lee's travel plans efficiently.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_7450", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_ahmed_3350",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Wilson'} and your email is amelia.wilson7199@example.com. You are organized, cautious, optimistic. Search for available flights from JFK to LAX on 2023-11-15 for Mohamed Ahmed. Once you find a suitable option, proceed to book a reservation for Mohamed Ahmed on flight F1234 from JFK to LAX on 2023-11-15. Ensure the booking confirmation is sent to Mohamed promptly, as he is preparing for an important business meeting in Los Angeles and needs to finalize his travel arrangements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mohamed_ahmed_3350"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_ahmed_3350", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Mohamed Ahmed", "contact_email": "amelia.wilson7199@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_garcia_4690",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Johnson'} and your email is evelyn.johnson2294@example.com. You are independent, patient, optimistic, cautious. First, retrieve user details for Raj Garcia using the email raj.garcia3173@example.com to confirm user ID. Once you have confirmed Raj's user ID, list all available airports to identify potential departure and arrival locations for Raj's trip. With the user ID and chosen airports, proceed to book a reservation for Raj Garcia with user ID U1234 on flight F5678 from the departure airport to the arrival airport.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.garcia3173@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_garcia_4690", "flight_id": "F5678", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_garcia_4633",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Khan'} and your email is amelia.khan3954@example.com. You are direct, logical. \"Book reservation for user Isabella Garcia on flight AA100 from JFK to LAX on 2023-12-15\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_garcia_4633", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_hernandez_9084",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Patel'} and your email is mason.patel6016@example.com. You are organized, logical. Get user details for Liam Hernandez using email liam.hernandez2653@example.com to verify user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.hernandez2653@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_santos_3403",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi9486@example.com. You are direct, patient, cautious. Retrieve user details for Sofia Santos using email sofia.santos5639@example.com to confirm identity and gather necessary information. Once her identity is confirmed and her travel preferences are known, search for available flights from Lisbon Airport (LIS) to São Paulo–Guarulhos International Airport (GRU) on Sofia's preferred travel dates. This will ensure that we can provide her with the most suitable flight options based on her needs and preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "sofia_santos_3403"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"email": "sofia.santos5639@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LIS", "arrival_airport": "GRU", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_patel_9756",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Ito'} and your email is olivia.ito1930@example.com. You are confident, patient, cautious, flexible. First, get user details for james.patel1909@example.com to verify user ID and preferences. Once you have confirmed the user ID, proceed to book a reservation for user ID U101 with flight number AA123 from JFK to LAX on 2023-12-15. After successfully booking the flight, check in for reservation ID R2023 for James Patel to secure a seat and boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "james_patel_9756"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_patel_9756", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R2023", "user_id": "james_patel_9756"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_patel_9828",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Johnson'} and your email is harper.johnson9867@example.com. You are confident, polite. First, book a reservation for James Patel with user ID U9012 from LAX to JFK on 2023-11-20 with flight F2345. Once the reservation is confirmed, proceed to check the flight status for flight F2345 on 2023-11-20 to ensure on-time departure. This will help in coordinating any necessary adjustments for James Patel's travel plans and ensure a smooth experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_patel_9828", "flight_number": "F2345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-20"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F2345", "date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_garcia_2940",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Martin'} and your email is yusuf.martin2301@example.com. You are direct, organized, confident. First, retrieve user details for Ava Garcia using email ava.garcia2797@example.com to confirm identity, ensuring that her information is up-to-date in our system. Once confirmed, proceed to search for flights from LAX to JFK on specific dates based on Ava's travel plans, focusing on availability and pricing for her preferred travel dates. After identifying a suitable flight, book a reservation for user Ava Garcia on flight F123 from LAX to JFK, specifying her seat preference and meal options to enhance her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.garcia2797@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "ava_garcia_2940"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_garcia_2940", "flight_number": "F123", "departure": "LAX", "arrival": "JFK", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_muller_9002",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kim'} and your email is raj.kim6179@example.com. You are flexible, cautious, organized. Retrieve user details for Sophia Muller using her email sophia.muller2270@example.com to confirm her identity. Once confirmed, search for flights from JFK to LAX for the travel date of December 15, 2023, to find suitable options for Sophia. After identifying the best option, book a reservation for Sophia Muller on flight number AA123 from JFK to LAX on December 15, 2023.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.muller2270@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_muller_9002", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_li_1258",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Khan'} and your email is isabella.khan4289@example.com. You are independent, logical. Search for flights from SFO to JFK on the desired travel dates to find suitable options for Harper Li. Once you have identified a suitable flight, book a reservation for Harper Li on flight F1234 from SFO to JFK, ensuring seat selection and meal preference are entered.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_li_1258", "flight_number": "F1234", "departure_airport": "SFO", "arrival_airport": "JFK", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Rossi'} and your email is aarav.rossi8016@example.com. You are direct, logical. First, search for flights departing from JFK International Airport to LAX International Airport on 2023-11-15. Once you have identified a suitable flight, proceed to book a reservation for user Yara Lee, ensuring her user ID is retrieved, on flight F789 with an aisle seat preference. After the booking is confirmed, get the reservation details for Yara Lee's new booking to verify the reservation number and itinerary, ensuring all information is accurate for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_3166", "flight_id": "F789", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yara_lee_3166"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_anderson_3457",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6687@example.com. You are independent, organized. Book reservation for Juan Anderson from LAX to JFK on flight F1234 on 2023-11-20.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_anderson_3457", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_santos_6163",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Martin'} and your email is isabella.martin5652@example.com. You are independent, logical. Retrieve user details for Lei Santos using email lei.santos1045@example.com to confirm user ID. Once the user ID is confirmed, proceed to book a reservation for user ID U1045 on flight F123 from JFK to LAX, selecting an aisle seat in economy class. After booking, get reservation details for Lei Santos on flight F123 to confirm booking and seat assignment, ensuring all information is accurate for the upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lei.santos1045@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_santos_6163", "flight_id": "F123", "departure": "JFK", "destination": "LAX", "seat_preference": "aisle", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lei_santos_6163", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lopez_9471",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Johnson'} and your email is liam.johnson5509@example.com. You are independent, confident. Book reservation for flight F12345 for Mei Lopez using user email mei.lopez4337@example.com.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F12345", "user_id": "mei_lopez_9471"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_khan_1131",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Santos'} and your email is harper.santos8051@example.com. You are direct, optimistic. Book reservation for Lucas Khan on flight F123 from JFK to LAX on the selected date, using user details and payment information.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_khan_1131", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": {"first_name": "Lucas", "last_name": "Khan"}, "contact_email": "harper.santos8051@example.com", "payment_info": {"card_number": "4111111111111111", "expiry_date": "12/25", "cvv": "123"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_kovacs_2694",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Patel'} and your email is mei.patel5375@example.com. You are cautious, direct, optimistic, independent. Book a reservation for user ID associated with Ava Kovacs on flight number AA1234 from LAX to JFK on 2023-11-15, including seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_kovacs_2694", "flight_number": "AA1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_wilson_8866",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Rossi'} and your email is mei.rossi1283@example.com. You are patient, confident. First, retrieve user details for Harper Wilson using the email harper.wilson6600@example.com to ensure the correct passenger profile is accessed. Then, search for flights from JFK to LAX on the desired departure date to find suitable travel options for Harper. Once a suitable flight is identified, book a reservation for Harper Wilson on flight ID F12345, selecting a window seat to accommodate their preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.wilson6600@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "harper_wilson_8866"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_wilson_8866", "flight_id": "F12345", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_8513",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Jackson'} and your email is lucas.jackson5157@example.com. You are patient, organized, confident. \"Book reservation for Evelyn Brown on flight F1234 from JFK to LAX on 2023-12-15, including seat preference and meal options.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_brown_8513", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7283",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez8439@example.com. You are confident, independent. First, book a reservation for Liam Smith with user ID U789 on Flight ID F456 from Airport ID A123 to Airport ID A789 on 2023-11-15. Once the booking is confirmed, retrieve the reservation details for Reservation ID R1010 to verify the booking details and seat assignment. Finally, check in for Reservation ID R1010 for user ID U789 to secure the seat assignment before departure.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7283", "flight_id": "F456", "departure_airport_id": "A123", "arrival_airport_id": "A789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R1010"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R1010", "user_id": "liam_smith_7283"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_rossi_3206",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Santos'} and your email is sophia.santos7908@example.com. You are cautious, independent, confident, organized. Retrieve Lei's current reservation details using reservation ID to ensure accuracy before making changes.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lei_rossi_3206"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_jackson_1792",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Anderson'} and your email is anya.anderson4088@example.com. You are confident, independent. Book reservation for user Sophia Jackson from JFK to LAX on flight AA123, departing on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_jackson_1792", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li3866@example.com. You are logical, optimistic, polite. Search for available flights from JFK to LAX for the next weekend to assist a client planning a business trip. Once you find a suitable flight, book_reservation for flight F12345 from JFK to LAX for user james.ahmed6295@example.com to ensure his travel plans are confirmed.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F12345", "departure": "JFK", "arrival": "LAX", "user_id": "james_ahmed_4322"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_nguyen_6408",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Kovacs'} and your email is olivia.kovacs3528@example.com. You are flexible, polite. Search for flights from LAX to JFK on 2023-12-15 for Lucas Nguyen to find a suitable option. Once you have identified a suitable flight, book a reservation for Lucas Nguyen on flight F1234 from LAX to JFK on 2023-12-15 using the user ID. Ensure that the booking aligns with Lucas's preferences and company travel policy.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_nguyen_6408", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_martin_3083",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6819@example.com. You are logical, optimistic, direct. Retrieve user details for user ID U001 to confirm the identity of Noah Martin and gather necessary information for reservation. Then, list all available airports to identify potential departure and arrival locations for Noah Martin's travel plans. Finally, book a reservation for Noah Martin on flight ID F456 from airport A123 to airport A789, including seat selection and meal preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "noah_martin_3083"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_martin_3083", "flight_id": "F456", "departure_airport_id": "A123", "arrival_airport_id": "A789", "seat_selection": "12A", "meal_preferences": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_hernandez_3837",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Davis'} and your email is sophia.davis4814@example.com. You are confident, patient, logical, optimistic. First, get user details for Juan Hernandez using email juan.hernandez2433@example.com to retrieve his User ID. Once you have the User ID, proceed to book a reservation for Juan Hernandez on flight number AA123, ensuring to select his preferred seating. This sequence is crucial to efficiently manage Juan's travel arrangements and ensure a seamless booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.hernandez2433@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_hernandez_3837", "flight_number": "AA123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_li_9905",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Muller'} and your email is yusuf.muller7236@example.com. You are cautious, patient, flexible, confident. First, retrieve user details for Mei Li using email mei.li8179@example.com to confirm user ID. Once confirmed, proceed to book a reservation for user ID U789 on flight ID F456 from airport ID A123 to airport ID A789 on 2023-11-25. After booking, ensure to get the reservation details for reservation ID R101 to confirm the booking and seat assignment.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.li8179@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_li_9905", "flight_id": "F456", "departure_airport_id": "A123", "arrival_airport_id": "A789", "departure_date": "2023-11-25"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R101"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lopez_8637",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Johnson'} and your email is yara.johnson5258@example.com. You are organized, patient, polite, independent. First, retrieve user details for Anya Lopez using email anya.lopez6991@example.com to confirm her identity. Once confirmed, proceed to book a reservation for Anya Lopez on flight AA123 from LAX to New York JFK for departure on 2023-12-15. After the booking is complete, get the reservation details to confirm her seat assignment and class, ensuring all preferences are correctly noted for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.lopez6991@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5753",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Thomas'} and your email is mia.thomas9453@example.com. You are independent, logical. Get reservation details for user Anya Sanchez with reservation ID R789456.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_sanchez_5753", "reservation_id": "R789456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_lopez_9956",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Garcia'} and your email is anya.garcia8816@example.com. You are flexible, polite. First, book a reservation for user Ivan Lopez on Flight F1234 from John F. Kennedy International Airport with a seat preference in economy class. Once the reservation is confirmed, calculate the total cost for Ivan Lopez's reservation, including taxes and fees, to provide a comprehensive payment summary. Ensure all booking details are accurate and ready for final confirmation.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_lopez_9956", "flight_number": "F1234", "departure_airport": "John F. Kennedy International Airport", "seat_preference": "economy"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "ivan_lopez_9956", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_li_9905",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Patel'} and your email is juan.patel4720@example.com. You are flexible, confident, organized, polite. First, retrieve user details using the email mei.li8179@example.com to confirm user ID and profile information. Once you have verified the user ID, proceed to search for flights from JFK to LAX on the desired date to find suitable travel options. This will ensure that you have accurate information for booking and can offer the best travel options to the user.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.li8179@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_sanchez_7773",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Wilson'} and your email is sophia.wilson3098@example.com. You are cautious, logical, direct, flexible. \"Book reservation for user ID U1234 on flight number AA123 from JFK to LAX on 2023-12-20 with seat preference window.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_sanchez_7773", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-20", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_nguyen_8708",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Garcia'} and your email is mason.garcia7231@example.com. You are independent, patient. First, get_user_details for user Amelia Nguyen (amelia.nguyen6855@example.com) to verify account information and retrieve user ID. Once the user ID is confirmed, proceed to book_reservation for user ID U001 for flight number AA123 on 2023-11-15 from JFK to LAX, ensuring to include seat preference and meal options. This sequence ensures that the reservation is accurately linked to the correct user, maintaining a smooth booking process for the airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.nguyen6855@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_nguyen_8708", "flight_number": "AA123", "date": "2023-11-15", "from": "JFK", "to": "LAX", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_8677",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Khan'} and your email is lucas.khan1753@example.com. You are confident, direct, organized, flexible. Please begin by getting the reservation details for User Harper Garcia's reservation ID R456 to verify the booking status for their upcoming travel. Once you have confirmed the booking status, proceed to check in User Harper Garcia for flight F123 using the verified reservation ID R456. This will ensure a smooth check-in process for their journey from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R456"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_garcia_8677", "reservation_id": "R456", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_thomas_8446",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Thomas'} and your email is harper.thomas2372@example.com. You are direct, logical. Book reservation for Mei Thomas on flight AA123 from JFK to LAX on 2023-11-15, using user ID obtained earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_thomas_8446", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Mei Thomas"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_7043",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Li'} and your email is mei.li8179@example.com. You are logical, optimistic. Book reservation for Mei Wilson on flight AA100 from LAX to JFK for the selected date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_7043", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK", "passenger_name": {"first_name": "Mei", "last_name": "Wilson"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_ahmed_3350",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith3091@example.com. You are polite, cautious. First, search for flights from airport A567 to airport A890 on 2023-11-20 for Mohamed Ahmed. Once you find a suitable flight, proceed to book a reservation for Mohamed Ahmed on flight F1234 with a seat preference for a window. Ensure that all details are accurate and confirm the booking to facilitate a smooth travel experience for the client.",
        actions=[
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mohamed_ahmed_3350"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_ahmed_3350", "flight_number": "F1234", "seat_preference": "window", "departure_airport": "A567", "arrival_airport": "A890", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_patel_4472",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim1896@example.com. You are direct, confident, cautious, flexible. Retrieve Mohamed Patel's user details using their email mohamed.patel6687@example.com to confirm his travel preferences. Once confirmed, search for available flights from JFK to LAX on his desired travel date, ensuring the options align with his preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.patel6687@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mohamed_patel_4472"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_rossi_7264",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Moore'} and your email is fatima.moore4109@example.com. You are direct, organized. First, get user details for Juan Rossi using email juan.rossi3718@example.com to verify user ID before booking a reservation. Once the user ID is confirmed, proceed to book a reservation for the user on flight AA123 from JFK to LAX on 2023-10-15. This ensures that the booking process is accurate and efficient, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.rossi3718@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_rossi_7264", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_moore_8184",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Moore'} and your email is raj.moore9581@example.com. You are polite, confident, cautious. Book a reservation for Fatima Moore on flight AA123 from JFK to LAX on 2023-11-15, selecting a window seat in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_moore_8184", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_7943",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Brown'} and your email is chen.brown1849@example.com. You are confident, independent. First, get user details for Raj Khan using email raj.khan6740@example.com to verify identity before making reservations. Once verified, book a reservation for Raj Khan on flight F1234 departing from JFK to LAX on 2023-11-15 with a seat preference for a window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.khan6740@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_7943", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_garcia_4690",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Garcia'} and your email is yara.garcia6882@example.com. You are confident, flexible, independent, direct. Retrieve user details for Raj Garcia using email raj.garcia3173@example.com to confirm user ID and preferences. Once you have confirmed Raj Garcia's user ID, search for available flights from ATL to LAX (Los Angeles International Airport) on the desired travel dates. After identifying a suitable flight, proceed to book a reservation for user ID U123 for the selected flight from ATL to LAX on the specified date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.garcia3173@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_garcia_4690", "from": "ATL", "to": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_santos_3700",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Garcia'} and your email is ivan.garcia1055@example.com. You are organized, flexible, polite. Book reservation for user Ava Santos on flight F123 from JFK to LAX on 2023-11-15 with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_santos_3700", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_2677",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Davis'} and your email is mei.davis8487@example.com. You are cautious, patient, flexible. Search for available flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15, 2023, for Chen Nguyen. Once you find a suitable option, proceed to book a flight reservation for Chen Nguyen on flight F7896 with user ID U1234.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_2677", "flight_number": "F7896", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_8890",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Taylor'} and your email is yusuf.taylor8412@example.com. You are cautious, patient. First, book a reservation for Amelia Davis on flight number AA1254 from JFK to LAX for a departure date of 2023-12-15, specifying her as the passenger. Once the booking is confirmed, get reservation details for Amelia's booking on flight number AA1254 to confirm her seat assignment and any special requests she may have made. Finally, check the flight status for flight number AA1254 departing from JFK to ensure it is on schedule for Amelia's planned travel date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_8890", "flight_number": "AA1254", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "passenger_name": "Amelia Davis"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_davis_8890", "flight_number": "AA1254"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA1254", "departure_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_moore_5127",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Smith'} and your email is anya.smith8361@example.com. You are direct, optimistic. First, retrieve user details for Evelyn Moore using her email evelyn.moore1378@example.com to confirm her identity. Once her identity is confirmed, proceed to book a reservation for Evelyn Moore on flight F1234 from New York (JFK) to Los Angeles (LAX) on November 15th, 2023, using her user ID U5678.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.moore1378@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_moore_5127", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_martin_4574",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are independent, flexible, patient, logical. First, search for flights from airport A001 to airport A002 on 2023-11-15 for availability. Once you have confirmed availability, proceed to book a reservation for user ID U3149 on flight F123 from A001 to A002 on the same date. This sequence ensures that the booking is made on a flight with confirmed availability, enhancing customer satisfaction and operational efficiency.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "A001", "arrival_airport": "A002", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_martin_4574", "flight_id": "F123", "departure_airport": "A001", "arrival_airport": "A002", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Johnson'} and your email is raj.johnson7007@example.com. You are organized, patient. Book a reservation for Yara Lee on the selected flight using her user details and preferred seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_3166", "first_name": "Yara", "last_name": "Lee", "email": "yara.lee@example.com", "preferred_seating": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_johnson_4385",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Kim'} and your email is sofia.kim8076@example.com. You are direct, cautious. First, retrieve user details for Yara Johnson using email yara.johnson5258@example.com to verify her user ID and preferences. Once you have confirmed her user ID, proceed to search for flights from LAX to JFK on 2023-11-15 for Yara using her user ID. After identifying the suitable options, book a reservation for Yara on flight F12345 from LAX to JFK on 2023-11-15, ensuring to use her user ID for the booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.johnson5258@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_johnson_4385", "flight_id": "F12345", "departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_9352",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Johnson'} and your email is fatima.johnson8629@example.com. You are flexible, independent. \"Retrieve user details for user with email raj.khan4061@example.com to confirm identity before proceeding with reservation tasks.\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.khan4061@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_silva_4267",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Davis'} and your email is ivan.davis6795@example.com. You are logical, flexible. Book reservation for User ID associated with mia.silva5793@example.com on Flight ID F2345 with seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_silva_4267", "flight_id": "F2345", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_brown_2465",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kovacs'} and your email is mason.kovacs8863@example.com. You are logical, optimistic, polite, patient. Please search for flights from JFK to LAX departing on 2023-11-15 for Juan Brown. Once you have identified a suitable flight, proceed to book a reservation for flight F123 from JFK to LAX for Juan Brown, using the user ID obtained previously.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_brown_2465", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_johnson_4945",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson1977@example.com. You are cautious, optimistic, logical, flexible. First, get_user_details for Evelyn Johnson using email evelyn.johnson2294@example.com to confirm her user ID and preferences. Once the user ID is confirmed, book_reservation for the user ID associated with Evelyn Johnson for flight AA123 from JFK to LAX on 2023-11-15, ensuring her seat preference is taken into account. Finally, get_reservation_details for the reservation ID assigned to Evelyn Johnson to confirm all booking details and itinerary, ensuring everything is accurate and ready for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.johnson2294@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_johnson_4945", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "evelyn_johnson_4945"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6613",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Garcia'} and your email is yara.garcia6882@example.com. You are polite, independent. First, get user details for Juan Patel using email juan.patel8215@example.com to verify user ID. Once you have verified his user ID, search for available flights from JFK to LAX on 2023-11-15 for Juan Patel using the retrieved user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.patel8215@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_martin_3083",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li8768@example.com. You are patient, confident. First, check the flight status for flight number AA123 on 2023-11-15 to assess any delays or changes, as this will ensure you have the most current information before proceeding with further actions. Once you have confirmed the flight status and ensured there are no significant issues, proceed to check in for reservation ID R456 within 24 hours of departure to secure your boarding pass. This sequence ensures that you are well-prepared for your travel from JFK to LAX, minimizing any potential disruptions.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA123", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "noah_martin_3083"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_6576",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Li'} and your email is harper.li7659@example.com. You are confident, logical, flexible. First, get user details for user isabella.khan9667@example.com to verify contact information for an upcoming reservation. Once the contact information is confirmed, proceed to book a reservation for user isabella.khan9667@example.com on flight F123 from JFK to LAX on 2023-11-15. This ensures that all details are accurate and the booking process is seamless for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_khan_6576"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_6576", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_nguyen_1995",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Taylor'} and your email is ivan.taylor9524@example.com. You are confident, logical, flexible, polite. Retrieve user details for Sophia Nguyen using email sophia.nguyen5624@example.com to confirm user ID. Once you have confirmed her user ID, proceed to search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) for Sophia Nguyen on her desired travel date. After identifying the most suitable flight options, book a reservation for Sophia Nguyen on flight F123 using the user ID obtained from the user details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.nguyen5624@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_nguyen_1995", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_jackson_7992",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi4133@example.com. You are logical, flexible, optimistic. First, get_user_details for user Yara Jackson using email yara.jackson6598@example.com to verify identity and retrieve user ID. Once you have obtained the user ID, book_reservation for Yara Jackson for flight AA123 from JFK to LAX on 2023-11-15 with a seat preference for a window. Finally, check_flight_status for flight number AA123 departing from JFK on 2023-11-15 to confirm the schedule and availability, ensuring that everything is in order for Yara Jackson's upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.jackson6598@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_jackson_7992", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA123", "departure_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_khan_9905",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim3947@example.com. You are organized, flexible, direct. First, retrieve user details for Mia Khan using her email (mia.khan3010@example.com) to confirm her identity. Once her identity is confirmed, proceed to search for available flights from JFK to LAX on Mia's preferred travel date, March 10, 2024. This will ensure we have the correct user information before proceeding with the flight search, providing a smooth and efficient booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.khan3010@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mia_khan_9905"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_khan_9905"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2024-03-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_8433",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Taylor'} and your email is yusuf.taylor8412@example.com. You are direct, confident, patient, logical. Book a reservation for Sofia Kim on flight FL123 from her selected airport using user ID U8076.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_8433", "flight_number": "FL123", "passenger_name": "Sofia Kim"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_hernandez_2608",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Smith'} and your email is emma.smith8074@example.com. You are direct, cautious, flexible, logical. Book reservation for user Chen Hernandez on flight F123 from LAX to JFK on 2023-11-15 in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_hernandez_2608", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_7360",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Davis'} and your email is aarav.davis2878@example.com. You are confident, independent. Search for flights from JFK to LAX on December 15, 2023, for Ethan Nguyen and book a reservation for him on flight F123 from JFK to LAX on December 15, 2023, in economy class. This will ensure Ethan has a confirmed seat for his business trip to Los Angeles, where he is scheduled to meet with potential clients.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_nguyen_7360", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_kovacs_4682",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Thomas'} and your email is yusuf.thomas4677@example.com. You are flexible, optimistic, independent. First, book a reservation for Raj Kovacs from airport A123 to airport A456 on 2023-11-15 to ensure his travel plans are secured. Once the reservation is confirmed, proceed to check in Raj Kovacs for flight FN123, making sure to select his preferred seat. This sequence ensures a smooth travel experience for Raj, aligning with our commitment to excellent customer service.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_kovacs_4682", "departure_airport": "A123", "arrival_airport": "A456", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "raj_kovacs_4682", "flight_number": "FN123", "preferred_seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_li_6854",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are optimistic, confident, cautious, patient. Retrieve user details for Isabella Li using email isabella.li1262@example.com to confirm identity, and then proceed to book a reservation for her on flight F1234 from LAX to JFK, ensuring to include her seat preference and meal options. This sequence ensures that Isabella's identity is verified before securing her travel arrangements, providing a seamless and secure booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.li1262@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_li_6854", "flight_number": "F1234", "departure": "LAX", "destination": "JFK", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_nguyen_8708",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are optimistic, organized, polite, flexible. Begin by getting user details for Amelia Nguyen using the email amelia.nguyen6855@example.com to ensure her information is up-to-date. Next, proceed to book a reservation for Amelia Nguyen on flight AA123 from LAX to JFK on 2023-11-15, with an aisle seat preference, ensuring she has a comfortable journey. Finally, check in Amelia Nguyen for flight AA123 using reservation ID R101 to confirm her seat and expedite her boarding process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.nguyen6855@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_nguyen_8708", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "amelia_nguyen_8708", "reservation_id": "R101"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_patel_4436",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Anderson'} and your email is juan.anderson1791@example.com. You are patient, optimistic, flexible. First, book a reservation for user mei.patel5375@example.com from LAX to JFK on December 15 with flight F5678. Once the reservation is confirmed, proceed to check the flight status for flight F5678 on December 15 to monitor any delays or changes, ensuring a smooth travel experience for the user.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_patel_4436", "flight_number": "F5678", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F5678", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_muller_1498",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ito'} and your email is amelia.ito1923@example.com. You are flexible, polite. Retrieve user details for Juan Muller using email juan.muller7460@example.com. Once you have confirmed his identity and preferences, search for flights from airport A123 to destination airport D456 on his preferred date. After identifying a suitable flight, proceed to book a reservation for user ID U101 using flight ID F789, specifying his seat preference and meal choice to ensure a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.muller7460@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "juan_muller_1498"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_muller_1498", "flight_id": "F789", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_khan_6285",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Li'} and your email is evelyn.li5694@example.com. You are flexible, cautious, polite, direct. Retrieve user details for Lucas Khan using email lucas.khan1454@example.com to confirm user ID. Once you have confirmed the user ID, proceed to book a reservation for Lucas Khan on flight AA100 using the user ID and flight details. After booking the reservation, get the reservation details for Lucas Khan to confirm the reservation ID and flight details, ensuring everything is accurate for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.khan1454@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_khan_6285", "flight_number": "AA100"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_khan_6285"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_garcia_9415",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Davis'} and your email is sophia.davis4814@example.com. You are polite, optimistic, flexible. Please begin by retrieving user details for Mohamed Garcia using the email mohamed.garcia1541@example.com to confirm his account information. Once you have verified his account, proceed to search for available flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15, 2023. After identifying suitable flight options, book a reservation for Mohamed Garcia on flight F789, ensuring his seat preference is a window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.garcia1541@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mohamed_garcia_9415"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_garcia_9415", "flight_id": "F789", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_8433",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Rossi'} and your email is noah.rossi9901@example.com. You are flexible, patient. Retrieve user details for Sofia Kim using her email sofia.kim8076@example.com to confirm her identity. Once her identity is confirmed, search for available flights from LAX to JFK (John F. Kennedy International Airport) on her preferred date. After selecting the most suitable flight, book a reservation for Sofia on flight F123 from LAX to JFK with her user ID. Finally, confirm the travel itinerary with Sofia by sending an email to sofia.kim8076@example.com, including all flight and reservation details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.kim8076@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_8433", "flight_number": "F123", "departure": "LAX", "destination": "JFK"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "sofia_kim_8433", "action": "confirm", "email": "sofia.kim8076@example.com", "details": "Flight F123 from LAX to JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_gonzalez_6436",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Jackson'} and your email is harper.jackson7583@example.com. You are cautious, flexible. Search for flights from JFK International Airport to LAX for Yusuf Gonzalez, considering his travel dates and preferences. Once you have identified a suitable flight, proceed to book a reservation for Yusuf Gonzalez on flight F123 from JFK to LAX on his preferred date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yusuf_gonzalez_6436"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_gonzalez_6436", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_9564",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez1202@example.com. You are independent, organized. First, search available flights from airport A102 to destination D456 on date 2023-11-10 to find suitable options for a client. Once you have identified an appropriate flight, proceed to book a reservation for Yusuf Kovacs on flight F789 from airport A102 to destination D456 on 2023-11-10, ensuring all travel arrangements are confirmed and in order.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "A102", "destination_airport": "D456", "date": "2023-11-10"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_9564", "flight_id": "F789", "departure_airport": "A102", "destination_airport": "D456", "date": "2023-11-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_garcia_7028",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Sanchez'} and your email is raj.sanchez1380@example.com. You are direct, logical, patient, cautious. First, use the get_user_details tool to retrieve Ethan Garcia's user ID using his email ethan.garcia3231@example.com. Next, search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on Ethan's preferred travel dates using the book_reservation tool. Once you have identified the most suitable flight, proceed to book a reservation for Ethan on the selected flight using the book_reservation tool with Ethan's user ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "user_id": "ethan_garcia_7028", "travel_dates": ["2023-11-15", "2023-11-22"]}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_silva_4267",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Thomas'} and your email is harper.thomas2372@example.com. You are cautious, logical. Book a reservation for Mia Silva on flight UA1234 from JFK to LAX on November 15, 2023, with user ID linked to mia.silva5793@example.com.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_silva_4267", "flight_number": "UA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Mia Silva"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_brown_5556",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Garcia'} and your email is sophia.garcia3812@example.com. You are polite, logical, patient. First, get user details for user ID aarav.brown4253@example.com to verify identity, as part of the security and verification process. Once identity is confirmed, proceed to book a reservation for the verified user on Flight ID F123, selecting seat 12A. This ensures that the booking is securely made for the correct individual, maintaining the integrity of the airline's reservation system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "aarav_brown_5556"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_brown_5556", "flight_id": "F123", "seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_gonzalez_6436",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Sanchez'} and your email is omar.sanchez8001@example.com. You are organized, direct, flexible, polite. Search for flights from JFK Airport to LAX Airport for the upcoming weekend for user Yusuf Gonzalez",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "yusuf_gonzalez_6436"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_brown_3623",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Muller'} and your email is mia.muller3933@example.com. You are direct, polite, optimistic, confident. First, retrieve user details for Mohamed Brown using the email mohamed.brown5678@example.com to ensure his information is up-to-date. Then, search for available flights from the nearest airport to Mohamed's chosen destination on his desired travel date. Once you find a suitable option, proceed to book a reservation for Mohamed Brown on flight ID F1234, specifying his seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.brown5678@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "nearest_airport_code"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_brown_3623", "flight_id": "F1234", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lopez_8334",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Anderson'} and your email is omar.anderson2528@example.com. You are patient, direct, cautious. First, book a reservation for Daiki Lopez on flight F1234 using your user details and select a window seat. Once the reservation is confirmed, proceed to get the reservation details for Daiki Lopez to confirm the reservation and retrieve the booking reference. This sequence ensures that Daiki's travel plans are secured and all necessary information is at hand for a smooth check-in process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lopez_8334", "flight_number": "F1234", "seat_preference": "window", "first_name": "Omar", "last_name": "Anderson", "email": "omar.anderson2528@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "daiki_lopez_8334", "first_name": "Daiki", "last_name": "Lopez"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_7287",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are flexible, confident, patient. Retrieve user details for Sofia Kim using email sofia.kim1937@example.com to verify user ID for reservation purposes. Once verified, search for available flights from JFK to LAX on the desired travel date for user Sofia Kim. After identifying suitable options, proceed to book a reservation for Sofia Kim on flight F1234, ensuring to accommodate her seat preference and meal options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.kim1937@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_7287", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_martin_8359",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Garcia'} and your email is sophia.garcia3812@example.com. You are cautious, flexible, patient, polite. First, retrieve user details for Noah Martin using email noah.martin8194@example.com to confirm his user ID. Once confirmed, proceed to book a reservation for Noah Martin on flight F123 from JFK to LAX on March 15, 2024, ensuring a window seat preference. After booking, retrieve the reservation details to confirm the booking reference and seat assignment, ensuring all information is accurate for the upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.martin8194@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_martin_8359", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2024-03-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "noah_martin_8359", "flight_number": "F123", "departure_date": "2024-03-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_thomas_5479",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are logical, optimistic, cautious. First, get user details for the user with email mia.thomas9453@example.com to verify identity and retrieve the user ID. Once you have confirmed the user ID, proceed to book a reservation for user ID U1234 from JFK to LAX on 2023-11-10 with an aisle seat preference. After the reservation is successfully booked, update the reservation to include a vegetarian meal preference for flight F1234.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.thomas9453@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_thomas_5479", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-10", "seat_preference": "aisle"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "F1234", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_martin_4744",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Patel'} and your email is omar.patel5555@example.com. You are polite, flexible, direct. Retrieve user details for Aarav Martin using email aarav.martin6155@example.com to confirm identity. Once identity is confirmed, search for flights from airport ID A123 to airport ID B456 on 2023-12-15 for Aarav Martin. This will ensure that the correct passenger details are used for the flight search, facilitating a smooth booking process for the client.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.martin6155@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "aarav_martin_4744"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_sanchez_7340",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Moore'} and your email is aarav.moore8670@example.com. You are flexible, organized, polite. Search for available flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) for Raj Sanchez's travel dates. Once you have identified suitable options, proceed to book a reservation for Raj Sanchez on flight F1234 from JFK to LAX, including selecting a window seat and specifying a vegetarian meal preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "raj_sanchez_7340"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_sanchez_7340", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_brown_9300",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Muller'} and your email is mia.muller3933@example.com. You are optimistic, patient, polite, flexible. Retrieve user details for Omar Brown using email omar.brown3320@example.com to verify his account information. Once verified, search for flights departing from JFK International Airport to LAX on December 15, 2023, for Omar's travel plans. After finding a suitable flight, book a reservation for Omar Brown on flight F1234 from JFK to LAX on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.brown3320@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_brown_9300", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_kovacs_8569",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Muller'} and your email is liam.muller3463@example.com. You are direct, polite, flexible, cautious. First, get user details for user daiki.kovacs7353@example.com to retrieve preferred airports and travel history. Once you have this information, search for flights from Tokyo Narita Airport (NRT) to Los Angeles International Airport (LAX) on the user's preferred travel dates. This will help ensure we provide the most suitable flight options based on their past preferences and travel patterns.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "daiki_kovacs_8569"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "NRT"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_3563",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs8968@example.com. You are confident, patient, flexible. \"Retrieve user details for Aarav Lee (aarav.lee5880@example.com) to confirm eligibility for flight booking.\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "aarav_lee_3563"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_kim_4489",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed5466@example.com. You are flexible, confident, direct. Search for flights departing from LAX to John F. Kennedy International Airport (JFK) on November 15, 2023, and book a reservation for Emma Kim on flight F1234 from LAX to JFK on the same date in economy class. Ensure the booking is confirmed by obtaining the reservation details, including seat assignment and booking reference, to provide accurate information to the customer.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_kim_4489", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "class": "economy", "passenger_name": "Emma Kim"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "emma_kim_4489", "flight_number": "F1234", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_santos_2092",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs5639@example.com. You are patient, organized. Search for flights departing from JFK on 2023-11-15 to LAX to find suitable options for Mia Santos. Once you have identified the available flights, select flight F12345 for booking based on Mia's preferences and check availability to ensure it meets her travel needs.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_santos_2092", "flight_id": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Rossi'} and your email is yara.rossi1917@example.com. You are patient, optimistic, cautious, polite. \"Search for flights from JFK to LAX on preferred travel dates specified by James Ahmed\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "james_ahmed_4322"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_hernandez_9827",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Muller'} and your email is mia.muller3933@example.com. You are direct, flexible, patient, independent. First, retrieve user details for Mei Hernandez using email mei.hernandez4974@example.com to confirm user ID. Next, check flight status for flight ID F987 to ensure it is available for booking. Finally, book a reservation for user ID U001 on flight ID F987 from airport ID A123 to airport ID A456.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.hernandez4974@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F987"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_hernandez_9827", "flight_id": "F987", "from_airport_id": "A123", "to_airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_johansson_9644",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are direct, cautious, polite. Book a reservation for user Amelia Johansson on flight AB123 from JFK to LAX departing on 2023-11-15. Once the booking is confirmed, promptly get the reservation details to verify the booking and seat assignment. Ensure all information is accurate to facilitate a smooth check-in process for Amelia Johansson.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "AB123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_johansson_9644", "flight_number": "AB123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_7067",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Patel'} and your email is juan.patel4720@example.com. You are polite, independent, flexible, organized. Retrieve user details for Amelia Davis using email amelia.davis1047@example.com to confirm user ID and profile information. Once you have verified her user ID, proceed to book a reservation for Amelia Davis on flight F1234 using her user ID and preferred seating options. Ensure that the reservation is accurately recorded, as this will help streamline her check-in process and enhance her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.davis1047@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_7067", "flight_number": "F1234", "seating_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Brown'} and your email is omar.brown3320@example.com. You are cautious, logical, polite. List all available airports to find the nearest airport for Mia Taylor. Once you have identified Mia Taylor's nearest airport, check the flight status for flights departing from this airport on her desired travel date. Ensure that the information is accurate and up-to-date to assist her in planning her travel efficiently.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_user_details",
                kwargs={"user_id": "mia_taylor_2876"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"airport_code": "nearest_airport_code", "date": "desired_travel_date"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_rossi_3206",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Brown'} and your email is yusuf.brown2270@example.com. You are cautious, confident, independent. Retrieve user details for Lei Rossi using email lei.rossi1664@example.com to confirm user ID. Once confirmed, book a reservation for the retrieved user ID on Flight ID F5678 from Airport ID A101 to Airport ID A202 on 2023-12-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lei.rossi1664@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_rossi_3206", "flight_id": "F5678", "from_airport_id": "A101", "to_airport_id": "A202", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_smith_3981",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li9881@example.com. You are direct, confident. Book a flight reservation for user Harper Smith from JFK to LAX on December 15, 2023, with a return on December 22, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_smith_3981", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "return_date": "2023-12-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ito_4088",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kim'} and your email is raj.kim6179@example.com. You are optimistic, patient, logical, organized. First, list all airports to find available departure and destination options to ensure comprehensive coverage for our clients. Next, search for flights from LAX to JFK on 2023-11-15 for availability to assist a client with their travel plans. Finally, book a reservation for user mia.ito6295@example.com on flight F123 from LAX to JFK on 2023-11-15 to secure their travel arrangements.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ito_4088", "flight_id": "F123", "departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_johansson_8142",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Khan'} and your email is fatima.khan6332@example.com. You are optimistic, cautious, patient, polite. First, search for flights from JFK to LAX on 2023-12-15 for user with email sophia.johansson7738@example.com to find the most suitable options. Once you have identified the best flight, proceed to book a reservation for flight F123 from JFK to LAX on 2023-12-15 for user Sophia Johansson, ensuring all details are accurate. Finally, check the flight status for flight F123 on 2023-12-15 to ensure an on-time departure, providing peace of mind for the user.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "user_id": "sophia_johansson_8142"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lopez_8637",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Moore'} and your email is olivia.moore1716@example.com. You are flexible, cautious. Retrieve user details for Anya Lopez using email anya.lopez6991@example.com to confirm identity and check for existing reservations. Once her identity is confirmed and no existing reservations conflict, proceed to book a reservation for Anya on flight F1234 from LAX to JFK on 2023-12-15 with a seat preference for the window. This ensures Anya can travel comfortably and efficiently on her desired date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.lopez6991@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_lopez_8637"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lopez_8637", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_kovacs_8269",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Santos'} and your email is sofia.santos5639@example.com. You are flexible, polite, logical, confident. First, get_user_details for user email mia.kovacs4378@example.com to retrieve user ID and preferences. Once you have the user ID, proceed to search for flights from airport ID A123 to destination D456 on 2023-11-20. This sequence will ensure that you have the necessary user information to tailor the flight search results according to their preferences, providing a personalized and efficient service.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.kovacs4378@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_li_5992",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Santos'} and your email is yusuf.santos3031@example.com. You are polite, confident, independent. First, retrieve user details for James Li using email james.li5284@example.com to confirm his user ID for reservation purposes. Once you have the correct user ID, search for available flights from LAX to JFK on 2023-11-15 to identify potential travel options for James Li. After identifying a suitable flight, proceed to book a reservation for the retrieved user ID on flight F123 from LAX to JFK on 2023-11-15, ensuring all details are accurately recorded for James Li's travel itinerary.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.li5284@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_li_5992", "flight_id": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_7067",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis6849@example.com. You are polite, organized, logical, cautious. Search for available flights from JFK to LAX on the desired travel date for user Amelia Davis, ensuring to consider options with preferred seating and additional baggage. Once a suitable flight is identified, proceed to book reservation for flight F1234 from JFK to LAX for user Amelia Davis, making sure to secure her preferred seating and accommodate additional baggage as requested.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "amelia_davis_7067"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "amelia_davis_7067"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_7067", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "preferred_seating": "yes", "additional_baggage": "yes"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_ahmed_6699",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Johansson'} and your email is yusuf.johansson1385@example.com. You are organized, polite, confident, independent. First, retrieve reservation details for Aarav Ahmed's booking on flight AA1234 to confirm the reservation and seat assignment. Once confirmed, proceed to check in Aarav Ahmed for flight AA1234 to secure the boarding pass and confirm the check-in status. This sequence ensures that all reservation details are accurate before finalizing the check-in process, providing a seamless travel experience for the passenger.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "aarav_ahmed_6699", "flight_number": "AA1234"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "aarav_ahmed_6699", "flight_number": "AA1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_jackson_3290",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Garcia'} and your email is isabella.garcia5062@example.com. You are organized, direct, polite, independent. First, get user details for Chen Jackson using email chen.jackson9941@example.com to verify user information, ensuring all personal and travel details are correct. Once verified, proceed to book a reservation for user ID U9941 on flight ID F1234 from LAX to JFK on the selected dates, confirming the booking aligns with the user's schedule and preferences. Finally, update reservation ID R5678 for user ID U9941 to add a special meal request, accommodating any dietary needs to enhance the travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.jackson9941@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_jackson_3290", "flight_id": "F1234", "departure": "LAX", "destination": "JFK"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R5678", "user_id": "chen_jackson_3290", "special_request": "special meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_nguyen_1995",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Silva'} and your email is sophia.silva5929@example.com. You are optimistic, direct. First, retrieve user details for Sophia Nguyen using email sophia.nguyen5624@example.com to confirm identity before proceeding with booking tasks. Once identity is confirmed, search for flights from San Francisco International Airport (SFO) to John F. Kennedy International Airport (JFK) on December 15, 2023, for one adult passenger. After selecting the appropriate flight, book a reservation for user Sophia Nguyen on flight F1234 departing from SFO to JFK on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.nguyen5624@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_nguyen_1995", "flight_number": "F1234", "departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy", "passenger_count": 1}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_8890",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are confident, logical. Search for flights from LAX to JFK on 2023-11-15 for user Amelia Davis to explore travel options. Once you find a suitable flight, proceed to book a reservation for Flight F123 for Amelia Davis, ensuring her seat preference is a window seat. This will help Amelia finalize her travel plans efficiently and ensure she has a comfortable journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_8890", "flight_id": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_hernandez_5188",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Khan'} and your email is raj.khan4061@example.com. You are optimistic, flexible, direct. Retrieve user details for Mohamed Hernandez using email mohamed.hernandez8983@example.com to verify user ID. Once verified, search for flights departing from 'JFK' to 'LAX' on 2023-11-15 to find suitable options for Mohamed. After selecting the best option, book a reservation for user ID U12345 on flight F67890 departing from 'JFK' to 'LAX' on 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.hernandez8983@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_hernandez_5188", "flight_id": "F67890", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_li_7869",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Anderson'} and your email is isabella.anderson1977@example.com. You are logical, direct, optimistic. Search for flights from JFK International Airport to LAX International Airport for the upcoming weekend, then book a reservation for Mohamed Li on flight F123 from JFK to LAX departing on Saturday morning. Ensure that the booking aligns with his travel preferences and confirm availability before proceeding with the reservation.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "upcoming Saturday"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_li_7869", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "upcoming Saturday"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_kovacs_3082",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Patel'} and your email is omar.patel5555@example.com. You are optimistic, cautious, organized. First, book a reservation for User {'first_name': 'Harper', 'last_name': 'Kovacs'} with email harper.kovacs2607@example.com on Flight ID F123 from JFK to LAX on 2023-11-15. Once the reservation is confirmed, proceed to check in Harper Kovacs for Flight ID F123 using the reservation ID provided. Ensure all details are accurate to facilitate a smooth travel experience for the user.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_kovacs_3082", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_kovacs_3082", "reservation_id": "RES12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_taylor_9065",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Garcia'} and your email is mohamed.garcia1541@example.com. You are independent, polite, optimistic, direct. First, retrieve user details for Sophia Taylor using sophia.taylor4639@example.com to confirm her user ID. Once you have confirmed the user ID, proceed to search for flights from JFK to LAX on her preferred travel dates. After identifying a suitable flight, book a reservation for Sophia Taylor on flight F123 from JFK to LAX on her preferred date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.taylor4639@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_taylor_9065", "flight_id": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_gonzalez_2305",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Smith'} and your email is james.smith6775@example.com. You are polite, patient, confident, independent. First, search for flights from LAX to JFK on 2023-11-10 for Olivia Gonzalez using her user ID. Once you have identified a suitable flight, proceed to book a reservation for Olivia Gonzalez on flight F1234 from LAX to JFK with her user ID and payment details. This will ensure her travel plans are confirmed efficiently and without any issues.",
        actions=[
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "olivia_gonzalez_2305"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_gonzalez_2305", "flight_number": "F1234", "departure": "LAX", "arrival": "JFK", "date": "2023-11-10", "payment_details": "secured_payment_info"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_johnson_4260",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kovacs'} and your email is mason.kovacs8863@example.com. You are organized, patient, independent. Book reservation for user chen.johnson6896@example.com on flight AA123 with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_johnson_4260", "flight_number": "AA123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_davis_8890",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Taylor'} and your email is mohamed.taylor5881@example.com. You are independent, confident, direct. First, retrieve user details for Amelia Davis using email amelia.davis1624@example.com to obtain her user ID. Next, list all available airports to find suitable departure and destination options for Amelia Davis, ensuring they align with her travel preferences. Finally, book a reservation for Amelia Davis using her user ID for a flight that matches her preferred criteria and dates, ensuring the booking process is seamless and efficient.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.davis1624@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_davis_8890", "departure_airport": "JFK", "destination_airport": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-22"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_martin_5489",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kim'} and your email is mia.kim6850@example.com. You are confident, optimistic. Use book_reservation with user ID 'U1234', flight number 'AA100', and seat preference 'window' to reserve a seat for Chen Martin.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_martin_5489", "flight_number": "AA100", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_martin_3470",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Lee'} and your email is mason.lee8809@example.com. You are logical, optimistic, polite. First, retrieve user details for Yusuf Martin using email yusuf.martin2301@example.com to confirm his identity as part of our standard verification process. Once his identity is confirmed, search for flights from New York (JFK) to Los Angeles (LAX) on December 15, 2023, to find available options. After identifying a suitable flight, proceed to book a reservation for Yusuf Martin on flight F12345, ensuring a window seat preference is selected. Finally, retrieve the reservation details for Yusuf Martin to confirm all booking information is accurate and complete, providing him with a seamless travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.martin2301@example.com"}
            ),
            Action(
                name="get_user_details",
                kwargs={"user_id": "yusuf_martin_3470"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_martin_3470", "flight_id": "F12345", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_martin_3470"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_rossi_7216",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Rossi'} and your email is yara.rossi1917@example.com. You are organized, polite. Book reservation for Sophia Rossi on flight F1234, departing from JFK to LAX on 2023-12-15",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_rossi_7216", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "passenger_first_name": "Sophia", "passenger_last_name": "Rossi", "contact_email": "yara.rossi1917@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_johnson_3271",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Johansson'} and your email is yusuf.johansson1385@example.com. You are polite, patient, direct, flexible. First, search for available flights from LAX to JFK on 2023-11-15 for user Sofia Johnson to find suitable options. Once you have identified a suitable flight, proceed to book a reservation for Sofia Johnson on flight UA1234 from LAX to JFK with a seat preference of 'window'.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_johnson_3271", "flight_number": "UA1234", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6197",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Rossi'} and your email is fatima.rossi5152@example.com. You are logical, polite. Retrieve the user details for Juan Patel using the email juan.patel4720@example.com, and then book a reservation for him on flight AA123 from JFK to LAX on December 15, 2023. This will ensure that Juan Patel is properly registered in our system before securing his flight reservation, facilitating a smooth booking process for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.patel4720@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_patel_6197", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_rossi_1241",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Anderson'} and your email is chen.anderson2368@example.com. You are direct, logical, optimistic, confident. First, get_user_details for Omar Rossi using email omar.rossi5980@example.com to verify user information, ensuring all personal and contact details are accurate for the booking process. Once verified, proceed to book_reservation for user Omar Rossi with flight ID F123 from JFK to LAX on 2023-11-15, confirming that the flight details align with the user's travel preferences. Finally, check_in for reservation ID R456 to secure seat assignment for Omar Rossi, making sure he receives his boarding pass and seat number well in advance of the flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.rossi5980@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_rossi_1241", "flight_id": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "omar_rossi_1241"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6197",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson6900@example.com. You are cautious, logical. Search for available flights from the nearest airport to a specified destination on a preferred date for Juan Patel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "juan_patel_6197"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_id": "nearest_airport_id"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"origin": "nearest_airport_code", "destination": "specified_destination_code", "date": "preferred_date"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_martin_4744",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Lee'} and your email is lucas.lee7057@example.com. You are polite, confident. Book_reservation for user with ID retrieved earlier on flight AA101 from JFK to LAX on 2023-11-10 with seating preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_martin_4744", "flight_number": "AA101", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-10", "seating_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_davis_3817",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kovacs'} and your email is raj.kovacs4133@example.com. You are polite, direct, independent, confident. Search for flights from JFK to LAX on 2023-11-15 for Omar Davis to find the best options available. Once you have identified a suitable flight, proceed to book a reservation for Omar Davis on flight F1234 from JFK to LAX on 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_davis_3817", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_wilson_1123",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Garcia'} and your email is raj.garcia3173@example.com. You are organized, polite, independent, patient. Search for flights from JFK to LAX on Yara's preferred travel date to find suitable options. Once you have identified a suitable flight, book a reservation for user Yara Wilson on flight F123 from JFK to LAX with a seat preference for the window. Ensure that the booking is confirmed and all necessary details are accurately recorded to facilitate a smooth travel experience for Yara.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yara_wilson_1123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_wilson_1123", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_brown_7075",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen6855@example.com. You are confident, logical. Mei, a valued customer of our airline, has expressed interest in traveling from airport A123 to airport A789 on her preferred travel date. Your task is to search for available flights on this route to find the best options for Mei. Once you have identified a suitable flight, proceed to book a reservation for Mei on flight F456, ensuring that you use her user ID to complete the reservation process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_brown_7075", "flight_id": "F456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_kim_4489",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Davis'} and your email is fatima.davis2844@example.com. You are polite, independent, optimistic. First, get reservation details for Emma Kim to confirm booking on flight AA1234 from JFK to LAX. Once you have confirmed the reservation details, proceed to check Emma Kim in for her flight, ensuring that her seat selection and meal preferences are updated. This will help ensure a smooth travel experience for Emma and maintain high customer satisfaction for the airline.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "emma_kim_4489", "flight_number": "AA1234"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "emma_kim_4489", "flight_number": "AA1234", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_8985",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Ahmed'} and your email is daiki.ahmed9601@example.com. You are direct, optimistic. First, use get_user_details to retrieve the user ID for Lucas Hernandez (lucas.hernandez5349@example.com) to ensure you have the correct account information. Once you have confirmed his user ID, proceed to use book_reservation to reserve a seat for Lucas Hernandez on flight F101 departing on 2023-11-15. This sequence ensures that Lucas's travel plans are accurately set up in our system, enhancing his travel experience with us.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.hernandez5349@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_8985", "flight_number": "F101", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_taylor_7043",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Lee'} and your email is aarav.lee2966@example.com. You are polite, independent, direct, flexible. Search for flights from JFK to LAX on 2023-12-15 for James Taylor, and once you have identified a suitable option, book a reservation for him on flight F567 with an aisle seat preference. Ensure that the booking is confirmed as James has an important business meeting in Los Angeles and needs a reliable travel plan.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "F567", "seat_preference": "aisle", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_wilson_1123",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Brown'} and your email is evelyn.brown2248@example.com. You are flexible, cautious, optimistic, logical. First, get user details for Yara Wilson using email yara.wilson5847@example.com to retrieve user ID. Once you have the user ID, proceed to list all available airports to find the nearest airport for Yara Wilson's departure. This will help ensure a smooth booking process for her upcoming travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.wilson5847@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={"user_id": "yara_wilson_1123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_moore_2190",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Hernandez'} and your email is juan.hernandez2433@example.com. You are direct, flexible. First, retrieve user details for Mohamed Moore using email mohamed.moore7778@example.com to confirm personal information. Next, book a reservation for Mohamed Moore on flight ID FL12345 from JFK to LAX on 2023-11-15 in business class. Finally, check-in Mohamed Moore for flight ID FL12345 using reservation ID RES67890 and assign a preferred seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.moore7778@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_moore_2190", "flight_id": "FL12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "business"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mohamed_moore_2190", "reservation_id": "RES67890", "preferred_seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Thomas'} and your email is lucas.thomas6475@example.com. You are independent, logical, direct. List all available airports to find departure and destination options for Ivan Rossi's upcoming trip. Once you have identified the suitable airports, check flight status for Flight ID F789 on Ivan Rossi's intended travel date to confirm availability. If the flight is available, proceed to book a reservation for Ivan Rossi on Flight ID F789 from Airport ID A123 to Airport ID A456.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F789", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_id": "F789", "departure_airport_id": "A123", "destination_airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_martin_3470",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Khan'} and your email is raj.khan6740@example.com. You are optimistic, confident, logical. Please assist user {'first_name': 'Yusuf', 'last_name': 'Martin'} in planning their upcoming trip by first booking a flight reservation from JFK Airport to LAX Airport on 2023-12-15 using book_reservation with user email yusuf.martin2301@example.com. Once the reservation is confirmed, proceed to check Yusuf in for flight number AA100 using check_in to ensure a smooth boarding process. Finally, calculate the baggage fees for Yusuf, who will be checking in 2 bags for flight number AA100, using calculate to provide him with the necessary cost details before his journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_email": "yusuf.martin2301@example.com", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_martin_3470", "flight_number": "AA100"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "yusuf_martin_3470", "flight_number": "AA100", "number_of_bags": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_8788",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Nguyen'} and your email is ethan.nguyen6753@example.com. You are flexible, logical, confident, polite. First, retrieve user details for Isabella Khan using her email isabella.khan1596@example.com to ensure her information is up-to-date in our system. Then, proceed to book a reservation for Isabella Khan from JFK to LAX on flight ID 'AA1234' with a seat preference of 'aisle'. After completing the booking, confirm the reservation details to ensure the booking status is accurate and all details are correctly recorded for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.khan1596@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_8788", "flight_id": "AA1234", "seat_preference": "aisle", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "isabella_khan_8788", "flight_id": "AA1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_anderson_8228",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are flexible, organized, confident, logical. Search for flights from JFK to LAX for the dates provided by Isabella Anderson.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "isabella_anderson_8228"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_muller_9847",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Muller'} and your email is ivan.muller6623@example.com. You are logical, flexible. Use book_reservation to reserve a seat for Noah Muller on flight F123 from JFK to LAX on the specified date, ensuring preference for aisle seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_muller_9847", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_hernandez_2608",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are optimistic, patient. First, get_user_details for user Chen Hernandez to retrieve user ID and contact information, ensuring you have the correct details for subsequent actions. Then, proceed to book_reservation for user ID U789 on flight ID F456 from airport ID A123 to destination airport ID A987, keeping in mind the seat preference and meal options to enhance the travel experience. This sequence ensures that all necessary information is gathered and applied efficiently for a smooth booking process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "chen_hernandez_2608"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_hernandez_2608", "flight_id": "F456", "from_airport_id": "A123", "to_airport_id": "A987", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johnson_3148",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Rossi'} and your email is noah.rossi9901@example.com. You are organized, confident, independent. Book a reservation for user Fatima Johnson on flight DL123 from ATL to LAX on 2023-12-15",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johnson_3148", "flight_number": "DL123", "departure_airport": "ATL", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_johansson_2235",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Rossi'} and your email is juan.rossi3718@example.com. You are flexible, organized, direct, patient. First, search for flights from JFK to LAX for Ivan Johansson's preferred travel dates to provide him with the best options available. Once you have identified a suitable flight, calculate the total cost for the reservation, including any applicable baggage fees, to ensure Ivan has a clear understanding of the expenses involved.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_johansson_2235"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ivan_johansson_2235"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "ivan_johansson_2235", "flight_id": "F123", "baggage": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ahmed_3713",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kovacs'} and your email is mia.kovacs4378@example.com. You are organized, direct. Use `get_user_details` with email mia.ahmed1335@example.com to retrieve user ID and personal preferences for flight booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.ahmed1335@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_rossi_1806",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez7272@example.com. You are flexible, patient, organized. Retrieve user details for Yara Rossi using email yara.rossi1917@example.com to verify user ID for reservation.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.rossi1917@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_8433",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Garcia'} and your email is isabella.garcia6421@example.com. You are logical, organized, flexible. First, get user details for Sofia Kim using email sofia.kim8076@example.com to verify account information. Once verified, search for flights from JFK Airport to LAX Airport on the desired travel dates for Sofia Kim. After identifying suitable options, proceed to book a reservation for Sofia Kim from JFK to LAX on flight F123 with a seat preference of 'Window'.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.kim8076@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_8433", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "Window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_johnson_4945",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Li'} and your email is mia.li3308@example.com. You are cautious, optimistic, direct, confident. Book reservation for Evelyn Johnson on Flight F123 from Airport A456 to Airport A789 on 2023-11-15 using her user ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_johnson_4945", "flight_number": "F123", "departure_airport": "A456", "arrival_airport": "A789", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_kovacs_2340",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee3901@example.com. You are flexible, direct, cautious, logical. Search for flights departing from JFK International Airport to LAX on December 15th, 2023, to assist our client, Mei Kovacs, in finding the best travel options. Once you have identified the most suitable flight, proceed to book a reservation for Mei Kovacs on Flight F123 from JFK to LAX departing on the same date, ensuring her travel plans are confirmed and secured.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_kovacs_2340", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1327",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Brown'} and your email is evelyn.brown2248@example.com. You are direct, organized, logical, patient. First, retrieve user details for Lucas Lee using the email lucas.lee7057@example.com to confirm his user ID and preferences. Once you have confirmed these details, list all available airports to identify the nearest airport for Lucas Lee. This will help ensure that we provide him with the most convenient travel options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.lee7057@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_sanchez_8544",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Anderson'} and your email is fatima.anderson9629@example.com. You are polite, optimistic, independent, flexible. First, retrieve user details for Mei Sanchez using email mei.sanchez6580@example.com to verify identity and obtain user ID. Once her identity is confirmed, proceed to search for flights departing from LAX to John F. Kennedy International Airport (JFK) on November 15, 2023, for Mei Sanchez. This will ensure that the flight options are available and suitable for her travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.sanchez6580@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_li_6854",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Davis'} and your email is fatima.davis2844@example.com. You are confident, polite. Retrieve user details for Isabella Li using email isabella.li1262@example.com to confirm user ID. Once you have the user ID, search for flights from JFK to LAX for Isabella Li on 2023-11-15 to explore available options. After identifying the best flight option, book a reservation for Isabella Li on flight F1234, using the user ID from the previous retrieval, for 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.li1262@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_li_6854", "flight_number": "F1234", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_anderson_2319",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen1044@example.com. You are cautious, logical, polite, independent. \"Book reservation for Lei Anderson on flight F123 from airport A456 to airport B789 on 2023-11-15.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_anderson_2319", "flight_number": "F123", "departure_airport": "A456", "arrival_airport": "B789", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_2390",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Khan'} and your email is evelyn.khan8752@example.com. You are flexible, optimistic. \"Book_reservation for Harper Lopez from JFK to LAX on flight AA123, seat 12A, class Economy\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_lopez_2390", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_number": "12A", "class": "Economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Moore'} and your email is aarav.moore8670@example.com. You are direct, organized, patient. First, retrieve user details for Ethan Hernandez using email ethan.hernandez2569@example.com to ensure accuracy in the booking process. Once verified, proceed to book a reservation for Ethan Hernandez on flight AA2569 from JFK to LAX with a seat preference of window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ethan_hernandez_8041"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_number": "AA2569", "departure": "JFK", "arrival": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_muller_7015",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8678@example.com. You are logical, confident, cautious, independent. Book a reservation for Ivan Muller using book_reservation with flight ID F1234, departure airport JFK, arrival airport LAX, and user ID U5678.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "user_id": "ivan_muller_7015"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_johansson_8142",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Martin'} and your email is yusuf.martin2301@example.com. You are independent, logical, cautious, flexible. Book a reservation for user Sophia Johansson on flight F123 from JFK to LAX on 2023-11-15 using the book_reservation tool with user email sophia.johansson7738@example.com. Following the booking, update reservation ID R456 to include a special meal request for user Sophia Johansson using the book_reservation tool to ensure her dietary preferences are accommodated. Finally, book a new reservation for user Sophia Johansson on flight F789 from LAX to JFK on 2023-11-20 using the book_reservation tool with user email sophia.johansson7738@example.com, providing a seamless round-trip travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_email": "sophia.johansson7738@example.com", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "user_id": "sophia_johansson_8142"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R456", "special_request": "special meal", "user_id": "sophia_johansson_8142"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_email": "sophia.johansson7738@example.com", "flight_number": "F789", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-20", "user_id": "sophia_johansson_8142"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_davis_3817",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Johnson'} and your email is liam.johnson5509@example.com. You are flexible, organized, optimistic. \"Book a reservation for Omar Davis on flight AA123 from JFK to LAX on 2023-12-15 using user ID retrieved previously.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_davis_3817", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9268",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ahmed'} and your email is james.ahmed6295@example.com. You are cautious, organized, flexible, independent. Book reservation for Fatima on the selected flight from JFK to LAX, using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_9268", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": "Fatima"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_4132",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Martin'} and your email is noah.martin7075@example.com. You are polite, patient. First, search for flights from LAX to JFK on 2023-11-15 for Evelyn Brown to find the best available options. Once you have identified a suitable flight, proceed to book a reservation for Evelyn Brown on flight F789 departing from LAX to JFK on the same date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_brown_4132", "flight_number": "F789", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "passenger_name": "Evelyn Brown"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_smith_7200",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Muller'} and your email is raj.muller1211@example.com. You are polite, patient. Retrieve user details for Juan Smith using email juan.smith8460@example.com to verify account information. Once verified, proceed to book a reservation for Juan Smith from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on flight F123 for the date 2023-12-15. This will ensure that Juan Smith's travel plans are accurately recorded and confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.smith8460@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_smith_7200", "from_airport": "LAX", "to_airport": "JFK", "flight_number": "F123", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_lopez_1398",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Brown'} and your email is yusuf.brown2270@example.com. You are polite, cautious, organized, flexible. First, search for flights from LAX to JFK on 2023-10-20 for user Olivia Lopez to find suitable travel options. Once you have identified the best option, proceed to book a reservation for Olivia Lopez on flight number AA456 departing on 2023-10-20. Finally, ensure Olivia Lopez is checked in for flight AA456 on 2023-10-20 using reservation ID R5678 to secure her boarding pass and confirm her seat.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-10-20"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_lopez_1398", "flight_number": "AA456", "departure_date": "2023-10-20", "passenger_name": "Olivia Lopez"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "olivia_lopez_1398", "reservation_id": "R5678", "flight_number": "AA456", "departure_date": "2023-10-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_3782",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Garcia'} and your email is raj.garcia9382@example.com. You are patient, polite, independent, flexible. Book reservation for user with email liam.jackson6651@example.com on flight AA123 from JFK to LAX",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_3782", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "email": "liam.jackson6651@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_moore_4540",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are direct, organized. First, get user details for Juan Moore using email juan.moore2560@example.com to retrieve user ID and preferences. Next, check flight status for flight F123 from LAX to JFK on 2023-11-15 to ensure it's on schedule for Juan. Finally, book reservation for user ID U2560 on flight F123 from LAX to JFK on 2023-11-15, ensuring seat preference and meal options are set.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.moore2560@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_moore_4540", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "date": "2023-11-15", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_patel_9446",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen1044@example.com. You are independent, logical, direct. Retrieve user details for Chen Patel using email chen.patel4688@example.com to confirm identity and retrieve user ID. Once the user ID is confirmed, search for flights from JFK Airport to LAX Airport on 2023-11-15 for user Chen Patel. This process is crucial to ensure that the correct user information is used for booking and that the flight options are tailored to the user's travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.patel4688@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "chen_patel_9446"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "chen_patel_9446", "from_airport": "JFK", "to_airport": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_nguyen_4236",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Muller'} and your email is raj.muller1211@example.com. You are logical, cautious, direct, confident. Retrieve user details for Evelyn Nguyen using her email evelyn.nguyen7538@example.com to confirm her identity and gather necessary information for booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "evelyn_nguyen_4236"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_brown_4047",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Lopez'} and your email is isabella.lopez5223@example.com. You are polite, independent, cautious. First, search for flights from LAX to JFK on December 15, 2023, to find available options. Once you have identified a suitable flight, proceed to book a reservation for Lucas Brown on flight F12345 from LAX to JFK on December 15, 2023, in economy class. This ensures that Lucas has a confirmed seat on a flight that meets his travel requirements.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_brown_4047", "flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_anderson_1185",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Johnson'} and your email is emma.johnson3839@example.com. You are polite, independent, patient. First, book a reservation for Omar Anderson from JFK to LAX on Flight F1234 using his user profile information. Once the reservation is successfully booked, calculate the total cost of the reservation for Omar Anderson, including any taxes and fees, to ensure accurate billing. After confirming the payment details, retrieve the reservation details for Omar Anderson to confirm the booking and provide him with the complete itinerary information, ensuring that all details are accurate and up-to-date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_anderson_1185", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "omar_anderson_1185", "flight_number": "F1234"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "omar_anderson_1185", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_patel_8889",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Taylor'} and your email is mia.taylor1368@example.com. You are optimistic, flexible, organized, patient. Retrieve user details for Fatima Patel using the email fatima.patel8582@example.com to confirm user ID. Once you have confirmed her user ID, proceed to book a reservation for Fatima Patel on flight F123 using her user ID and preferred seating class. After successfully booking her reservation, get reservation details for Fatima Patel's booking on flight F123 to confirm the reservation.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.patel8582@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_patel_8889", "flight_number": "F123", "seating_class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "fatima_patel_8889", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_smith_4705",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee7898@example.com. You are flexible, direct, organized. Book a reservation for Olivia Smith on flight AA1234 from JFK to LAX on 2023-11-15, and return on flight AA5678 on 2023-11-20.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_smith_4705", "flight_number": "AA1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_smith_4705", "flight_number": "AA5678", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_davis_4349",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Sanchez'} and your email is fatima.sanchez3339@example.com. You are logical, patient. Begin by booking a reservation for user ava.davis6849@example.com from JFK to LAX on December 15, 2023, with a return on December 20, 2023. Once the booking is confirmed, retrieve the reservation details to verify the booking reference number and flight specifics. Finally, check-in user ava.davis6849@example.com for the outbound flight on December 15, 2023, ensuring a window seat is selected as per the preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_davis_4349", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "return_date": "2023-12-20", "email": "ava.davis6849@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ava_davis_4349", "email": "ava.davis6849@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ava_davis_4349", "email": "ava.davis6849@example.com", "flight_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_davis_7802",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Li'} and your email is evelyn.li5694@example.com. You are patient, independent. First, retrieve user details for James Davis using email james.davis1376@example.com to confirm identity before making a reservation. Once his identity is confirmed, proceed to search for flights from New York (JFK) to Los Angeles (LAX) on March 15, 2024, to find available options for booking. After identifying a suitable flight, book a reservation for James Davis on flight F1234 from New York (JFK) to Los Angeles (LAX) for March 15, 2024, with a seat preference as window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.davis1376@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_davis_7802", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2024-03-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_jackson_8771",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Lee'} and your email is aarav.lee5880@example.com. You are optimistic, logical, confident, organized. Retrieve user details for James Jackson using email james.jackson9342@example.com to confirm his identity and ensure accurate information is on file. Next, search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) for the date range of December 14, 2023, to December 16, 2023, to find suitable travel options. Finally, book a reservation for user James Jackson on flight F123 from JFK to LAX for departure on 2023-12-15, ensuring all details match his preferences and requirements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.jackson9342@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "james_jackson_8771"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-14"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-16"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_jackson_8771", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_johansson_2235",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are optimistic, confident, independent, logical. Retrieve user details for Ivan Johansson using email ivan.johansson7034@example.com to confirm user ID. Once you have confirmed the user ID, proceed to book a reservation for this user on flight AA123 from JFK to LAX. This sequence ensures that the correct user is identified before making the reservation, thereby maintaining accuracy and efficiency in the booking process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.johansson7034@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_johansson_2235", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_johansson_8142",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson5573@example.com. You are confident, independent, logical. Book_reservation for user ID U101 using flight number F456, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_johansson_8142", "flight_number": "F456", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_davis_9362",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Muller'} and your email is fatima.muller7881@example.com. You are direct, organized. First, retrieve user details for Mei Davis using email mei.davis8487@example.com to confirm her identity. Once her identity is verified, proceed to book a reservation for her on flight F123 using user ID U001, ensuring a preferred seating arrangement is selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.davis8487@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_davis_9362", "flight_id": "F123", "preferred_seating": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Martin'} and your email is noah.martin7075@example.com. You are polite, confident, direct. First, search for flights from JFK to LAX for Ethan Hernandez on December 15th, 2023. Once you find a suitable flight, proceed to book a reservation for flight F123 from JFK to LAX for Ethan Hernandez, ensuring to confirm seat selection and meal preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ethan_hernandez_8041"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_number": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-12-15", "seat_selection": "Aisle", "meal_preference": "Vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_silva_7958",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Davis'} and your email is chen.davis3247@example.com. You are cautious, organized. First, get_user_details for Aarav Silva to verify user ID and preferences to ensure accuracy in handling his travel needs. Next, search for flights from JFK to LAX on 2023-11-25 for Aarav Silva using the book_reservation tool to find the best available options. Finally, book_reservation for Aarav Silva on flight F123 from JFK to LAX, ensuring his seat preference is aisle, and confirm the booking details to finalize his travel arrangements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "aarav_silva_7958"}
            ),
            Action(
                name="book_reservation",
                kwargs={"from": "JFK", "to": "LAX", "date": "2023-11-25", "user_id": "aarav_silva_7958"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F123", "from": "JFK", "to": "LAX", "seat_preference": "aisle", "user_id": "aarav_silva_7958"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_patel_3577",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Li'} and your email is juan.li6848@example.com. You are logical, flexible, confident. Search for flights from JFK International Airport to LAX International Airport departing on December 15th, 2023. Once you find a suitable flight, book a reservation for Olivia Patel on flight F6789 from JFK to LAX, departing December 15th, 2023. After the reservation is confirmed, send an email confirmation to olivia.patel6423@example.com with all booking details to ensure she has all necessary information for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_patel_3577", "flight_number": "F6789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "olivia_patel_3577"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "olivia_patel_3577", "action": "send_email_confirmation", "email": "olivia.patel6423@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_9116",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson5573@example.com. You are organized, cautious. First, retrieve user details for Aarav Nguyen using email aarav.nguyen1044@example.com to confirm user ID. Once you have confirmed Aarav's user ID, proceed to search for available flights from JFK to Los Angeles International Airport (LAX) on the desired travel date to find suitable options for Aarav. After identifying a suitable flight, book a reservation for Aarav using the confirmed user ID on the selected flight, ensuring to include preferred seating and meal options to enhance the travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.nguyen1044@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_nguyen_9116", "flight_id": "flight_123", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_lopez_2451",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kim'} and your email is lei.kim3388@example.com. You are direct, optimistic, cautious, logical. First, retrieve user details for Chen Lopez (chen.lopez3735@example.com) to confirm identity and gather user ID. Once you have confirmed the user ID as U123, proceed to book a reservation for this user for flight AA203 on 2023-11-15 from SFO to JFK, ensuring a window seat preference. After booking, get the reservation details to confirm the booking and seat assignment, ensuring everything is in order for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.lopez3735@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_lopez_2451", "flight_number": "AA203", "date": "2023-11-15", "from": "SFO", "to": "JFK", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "chen_lopez_2451"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi6938@example.com. You are logical, confident, polite, independent. Book reservation for flight ID F456 for user ID U789, including meal preference and seat selection.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_3166", "flight_id": "F456", "meal_preference": "vegetarian", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_jackson_4713",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Patel'} and your email is lei.patel8770@example.com. You are patient, direct, independent, polite. Book reservation for Lucas with user ID U101, flight number F456, and seat preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_jackson_4713", "flight_number": "F456", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_brown_8416",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Brown'} and your email is anya.brown7942@example.com. You are independent, patient, confident. First, book a reservation for Yusuf Brown on flight AB123 from JFK to LAX, using the user ID obtained earlier. Once the reservation is confirmed, get the reservation details to ensure you have the correct booking reference number. This will help you verify the reservation and prepare for any subsequent actions needed for Yusuf's travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_brown_8416", "flight_number": "AB123", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_name": "Yusuf Brown"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_brown_8416", "flight_number": "AB123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_6400",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen6855@example.com. You are patient, optimistic, flexible. As part of your responsibilities in the customer service department of SkyHigh Airlines, you need to ensure a smooth travel experience for our valued customers. First, Get_user_details using Ethan's email (ethan.hernandez1785@example.com) to retrieve his user ID. Once you have Ethan's user ID, proceed to Book_reservation for user ID U001 with flight ID F12345 for a seat in business class, ensuring he enjoys the premium services we offer. After the reservation is successfully made, Check_in for reservation ID R67890 for user ID U001 to confirm his seat and provide him with his boarding pass, ensuring a seamless check-in process before his flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.hernandez1785@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_6400", "flight_id": "F12345", "class": "business"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R67890", "user_id": "ethan_hernandez_6400"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_ahmed_3737",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are confident, independent, polite, organized. Search for flights departing from JFK Airport and arriving at LAX Airport on the specified travel date for Omar Ahmed. Once you have identified a suitable flight, book a reservation for Omar Ahmed on flight F123 from JFK to LAX, including his seat preference and meal choice.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_ahmed_3737", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_6381",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Rossi'} and your email is omar.rossi5980@example.com. You are organized, cautious, patient. First, retrieve user details for Harper Santos using email harper.santos7981@example.com to confirm user ID for reservation purposes. Once you have confirmed the user ID, search for available flights from New York (JFK) to Los Angeles (LAX) on December 15, 2023, to find options for booking. After identifying a suitable flight, proceed to book a reservation for the confirmed user ID on the selected flight, ensuring the seat preference is aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.santos7981@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_6381", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_taylor_4937",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Garcia'} and your email is yusuf.garcia4130@example.com. You are direct, independent, organized. First, book a reservation for Amelia Taylor on flight AA123 from LAX to JFK on October 15, 2023, ensuring her seat preference is aisle. Once the booking is confirmed, retrieve the reservation details to verify the booking and seat assignment. This process is crucial to ensure that Amelia's travel arrangements are accurately recorded and that she is seated according to her preference, enhancing her travel experience with our airline.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_taylor_4937", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-10-15", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_taylor_4937", "flight_number": "AA123", "departure_date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_li_4428",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are organized, logical. First, search for available flights from JFK to LAX on December 15, 2023, for a single passenger, ensuring you find the most suitable option based on price and timing. Once you have identified the best flight, proceed to book a reservation for user ID associated with yusuf.li3816@example.com on flight F789, departing from JFK to LAX on December 15, 2023. This will ensure that Yusuf has a confirmed seat on his preferred flight, streamlining his travel plans effectively.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_li_4428", "flight_id": "F789", "departure": "JFK", "destination": "LAX", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_santos_9046",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Brown'} and your email is chen.brown1849@example.com. You are independent, logical, organized, confident. First, retrieve the user details for the user with the email james.santos8116@example.com to obtain their user ID and preferences. Once you have this information, proceed to book a reservation for the retrieved user ID on flight F1234 from JFK to LAX on 2023-11-15, ensuring to select a window seat as per their preference. This sequence of actions will ensure that the user is successfully booked on their desired flight with their seating preference taken into account.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.santos8116@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_santos_9046", "flight_number": "F1234", "departure": "JFK", "destination": "LAX", "date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_brown_2409",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Anderson'} and your email is lei.anderson8099@example.com. You are polite, independent, organized, logical. Book a reservation for Anya Brown on flight AA102 from JFK to LAX on December 15, 2023, using her user details. Once the reservation is successfully made, generate reservation details for Anya Brown's booking to confirm her flight reservation. This process ensures that Anya's travel plans are secured and she receives all necessary information for her upcoming journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_brown_2409", "flight_number": "AA102", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_brown_2409", "flight_number": "AA102"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_9391",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore2560@example.com. You are confident, cautious. First, get reservation details for reservation ID R789 to confirm booking details for Lucas Rossi. Once confirmed, proceed to check in for reservation ID R789, selecting the baggage option for 1 checked bag.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R789", "user_id": "lucas_rossi_9391", "baggage_option": "1 checked bag"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_ahmed_4322",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Lopez'} and your email is ava.lopez2283@example.com. You are logical, direct, optimistic. Search for flights from airport ID A123 to airport ID B456 for the travel dates specified by James Ahmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "james_ahmed_4322"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_2677",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee7898@example.com. You are optimistic, organized. Book reservation for user chen.nguyen2563@example.com on flight AA100 from JFK to LAX (Los Angeles International Airport) for the specified date.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_2677", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_li_4428",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim1896@example.com. You are flexible, patient, confident. Book a reservation for Yusuf Li on flight F1234 from JFK to LAX on 2023-11-15, selecting a window seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_li_4428", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window", "passenger_name": {"first_name": "Yusuf", "last_name": "Li"}, "contact_email": "emma.kim1896@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_davis_4522",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Li'} and your email is yusuf.li3816@example.com. You are organized, logical, cautious, confident. \"Book reservation for Ivan Davis on flight F1234 from JFK to LAX for the date 2023-12-15, seat preference aisle.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_davis_4522", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-12-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_lee_3166",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are direct, flexible, logical. First, retrieve user details for Yara Lee using email yara.lee5793@example.com to verify user ID. Once you have verified the user ID, proceed to search for flights from New York (JFK) to Los Angeles (LAX) on December 15th, 2023. After identifying available flights, book a reservation for user ID verified from Yara Lee for flight F1234 on December 15th, 2023.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.lee5793@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_lee_3166", "flight_id": "F1234", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_johansson_8847",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ahmed'} and your email is james.ahmed6295@example.com. You are polite, confident, direct. First, retrieve user details for james.johansson1491@example.com to ensure accurate reservation processing. Once you have confirmed the user details, proceed to search for flights from JFK to LAX for the preferred travel dates specified by James Johansson. After identifying a suitable flight, book a reservation for James Johansson on flight F123 from JFK to LAX on October 20th, 2023. This will ensure that all necessary steps are taken to secure the booking and provide a seamless travel experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "james_johansson_8847"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_johansson_8847", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_li_1886",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Taylor'} and your email is sophia.taylor4639@example.com. You are polite, logical, confident, direct. Retrieve user details for Ivan Li (ivan.li1620@example.com) to confirm user identity and preferences for booking. Once confirmed, search for available flights from San Francisco (SFO) to New York (JFK) on December 15, 2023, for Ivan Li. After reviewing the search results, select flight FL1234 departing at 10:00 AM for booking.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_li_1886"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_li_1886", "flight_number": "FL1234", "departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-12-15", "departure_time": "10:00"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_wilson_2294",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are patient, confident, logical, direct. Book reservation for user ID associated with evelyn.wilson9461@example.com on flight AA123 from LAX to JFK for the date 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_wilson_2294", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_moore_5127",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Lopez'} and your email is ethan.lopez6235@example.com. You are confident, direct, organized. First, retrieve user details using the email evelyn.moore1378@example.com to confirm identity and gather user ID for reservation actions. Once you have confirmed Evelyn's identity and obtained her user ID, proceed to search for flights from LAX to JFK departing on 2023-12-15 to present Evelyn with available options. This will assist her in making an informed decision regarding her travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.moore1378@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_garcia_3833",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Sanchez'} and your email is mei.sanchez6580@example.com. You are independent, cautious. First, book a reservation for user mia.garcia1723@example.com on flight F123 from JFK to LAX on 2023-11-15, with a seat preference for a window. Next, proceed to check in for reservation ID R567 with user mia.garcia1723@example.com, ensuring seat 12A is selected. Finally, get airport information for LAX to plan ground transportation options post-arrival, ensuring a smooth transition from the airport to the final destination.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_garcia_3833", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R567", "user_id": "mia_garcia_3833", "seat_number": "12A"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_thomas_8955",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kim'} and your email is raj.kim6179@example.com. You are optimistic, patient. Retrieve user details for Liam Thomas using email liam.thomas7432@example.com to confirm user ID and preferences. Then, list all available airports to identify the nearest airport for user Liam Thomas based on his location. This information will help us provide personalized travel options and enhance his booking experience by ensuring convenience and alignment with his preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.thomas7432@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_ahmed_2732",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Rossi'} and your email is yara.rossi1917@example.com. You are flexible, confident. Book a reservation for user Sofia Ahmed with flight ID F1234, departing on 2023-11-15 from JFK to LAX, seat preference: window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_ahmed_2732", "flight_id": "F1234", "departure_date": "2023-11-15", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "first_name": "Yara", "last_name": "Rossi", "email": "yara.rossi1917@example.com", "passenger_name": "Sofia Ahmed"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_santos_3403",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Garcia'} and your email is raj.garcia9382@example.com. You are confident, direct, polite, independent. First, search available flights from airport A1234 to destination airport A5678 on 2023-12-15 to find suitable travel options for a client. Once you have identified a suitable flight, book a reservation for user ID U9876 on flight F2345 from A1234 to A5678 on 2023-12-15 with a seat preference for a window. Finally, get the reservation details for reservation ID R6789 to confirm the booking details and ensure the seat assignment meets the client's preferences.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "A1234", "arrival_airport": "A5678", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_santos_3403", "flight_id": "F2345", "departure_airport": "A1234", "arrival_airport": "A5678", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R6789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_muller_3268",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee5793@example.com. You are cautious, independent, organized, direct. Mia, a frequent traveler, has requested assistance in booking a flight for her upcoming business trip. She needs to fly from JFK Airport to LAX on November 15th. First, search for available flights from JFK to LAX on November 15th, considering Mia's preference for morning departures. Once you have identified a suitable flight, proceed to book a reservation for user ID 12345 on the selected flight using the flight ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_muller_3268", "flight_id": "FL123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_6045",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Patel'} and your email is lei.patel8770@example.com. You are confident, flexible, cautious. \"Book reservation for Ethan Nguyen on flight F1234 departing from airport A567 to airport A890 on 2023-11-15\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_nguyen_6045", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "A890", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_davis_6741",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Patel'} and your email is olivia.patel6423@example.com. You are polite, confident. First, get user details for user Yara Davis using email yara.davis9842@example.com to retrieve user ID. Once you have obtained the user ID, proceed to book a reservation for user ID U123 with flight ID F789 from airport ID A123 to airport ID A456.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.davis9842@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yara_davis_6741", "flight_id": "F789", "from_airport_id": "A123", "to_airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_ito_4432",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs7490@example.com. You are patient, direct. \"Book reservation for user Isabella Ito on flight number AA123 departing from LAX on 2023-11-20 using book_reservation tool.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_ito_4432", "flight_number": "AA123", "departure_airport": "LAX", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_li_6597",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Garcia'} and your email is harper.garcia8018@example.com. You are cautious, flexible, direct, independent. Search for available flights from JFK to LAX on December 15, 2023, for user ID associated with sofia.li2352@example.com. Once you have identified a suitable flight, proceed to book a reservation for the selected flight. After booking, retrieve the reservation details to confirm the booking for user ID associated with sofia.li2352@example.com.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_li_6597", "flight_id": "FL1234"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sofia_li_6597", "reservation_id": "RES5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7283",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez7272@example.com. You are direct, flexible, independent, logical. First, check the flight status for flight FL123 scheduled on 2023-11-15 to ensure there are no delays or cancellations. Once you have confirmed the flight status, proceed to book a reservation for the user with the email liam.smith9832@example.com on the same flight, ensuring a window seat and a vegetarian meal preference are selected.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "FL123", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7283", "flight_number": "FL123", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_2677",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Ito'} and your email is raj.ito1468@example.com. You are organized, confident, logical, optimistic. Book reservation for user chen.nguyen2563@example.com on flight F1234 from SFO to LAX on date 2023-11-20.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_2677", "flight_number": "F1234", "departure_airport": "SFO", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_9830",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Li'} and your email is sofia.li2352@example.com. You are flexible, patient. First, get user details for user mohamed.taylor5881@example.com to retrieve user ID. Then, use the retrieved user ID to book a reservation using flight number AA123 from LAX to JFK on 2023-11-15. This sequence ensures that Mohamed's travel plans are confirmed efficiently and accurately, aligning with our commitment to providing seamless booking experiences for our customers.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_garcia_5901",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Johansson'} and your email is anya.johansson3480@example.com. You are polite, confident, organized, independent. First, retrieve user details for Anya Garcia using email anya.garcia8816@example.com to ensure all her information is up-to-date and accurate in our system. Next, search for flights from SFO to JFK for Anya's preferred travel dates and times to find the most suitable options. Once the appropriate flight is identified, proceed to book a reservation for user Anya Garcia on flight F123 from SFO to JFK, ensuring her seat preference is set to aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.garcia8816@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_garcia_5901", "flight_number": "F123", "departure_airport": "SFO", "arrival_airport": "JFK", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ito'} and your email is amelia.ito1923@example.com. You are optimistic, independent, flexible. Begin by getting user details for Mia Taylor using email mia.taylor1368@example.com to ensure you have the correct passenger information. Next, proceed to book a reservation for Mia Taylor on flight AA123 from JFK to LAX on 2023-12-15 in economy class, ensuring all details match the user information retrieved. Finally, check in Mia Taylor for flight AA123 departing on 2023-12-15, confirming her seat assignment and any additional travel preferences she may have.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.taylor1368@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_taylor_2876", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mia_taylor_2876", "flight_number": "AA123", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_hernandez_8403",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Brown'} and your email is omar.brown3320@example.com. You are logical, polite, independent. First, get_user_details for User: {'first_name': 'Amelia', 'last_name': 'Hernandez'} to verify her user ID and email to ensure all information is accurate for the upcoming reservation process. Next, book_reservation for Amelia from 'JFK' to 'LAX' on Flight F123, specifying her preferred seat and meal options to enhance her travel experience. Finally, get_reservation_details for Amelia's reservation to confirm the booking ID and itinerary, ensuring all details are correct and ready for her journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "amelia_hernandez_8403"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_hernandez_8403", "departure": "JFK", "destination": "LAX", "flight_number": "F123", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_hernandez_8403"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_brown_5554",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Silva'} and your email is aarav.silva8543@example.com. You are flexible, optimistic, independent. Retrieve user details for Ivan Brown using email ivan.brown6973@example.com to ensure accurate passenger information is available. Then, book a reservation for Ivan Brown on flight AA100 from JFK to LAX, using the same email, to secure his travel itinerary.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.brown6973@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_number": "AA100", "departure": "JFK", "destination": "LAX", "email": "ivan.brown6973@example.com", "user_id": "ivan_brown_5554"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_wilson_2051",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8678@example.com. You are patient, logical, direct, organized. Begin by booking a reservation for user Mia Wilson on flight AA123 from JFK to LAX on October 15, 2023, in economy class. Once the booking is confirmed, proceed to get the reservation details for Mia Wilson's booking on flight AA123 to ensure the itinerary and seat selection are correct. Finally, check in Mia Wilson for her flight AA123 to secure her seat and obtain her boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_wilson_2051", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_wilson_2051", "flight_number": "AA123"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mia_wilson_2051", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_li_7880",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Rossi'} and your email is chen.rossi4494@example.com. You are flexible, direct. \"Get reservation details for reservation ID R4567 to confirm booking for User: Amelia Li\"",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R4567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_garcia_4365",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Garcia'} and your email is ethan.garcia3231@example.com. You are organized, cautious, direct, optimistic. Search for flights from airport ID LAX to JFK on 2023-12-01 for Noah Garcia and, once you find a suitable option, proceed to book a reservation for Noah Garcia on flight number AA123 from LAX to JFK on 2023-12-01 with a seat preference for a window. This task is crucial as Noah needs to attend a business meeting in New York, and securing a comfortable seat is important for his preparation during the flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_garcia_4365", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-01", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_muller_1116",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Silva'} and your email is james.silva8362@example.com. You are organized, direct, independent, polite. List all available airports to find departure and arrival options for a business trip. Once you have determined the best route, book a reservation for user ID U321 from airport ID A123 to airport ID A456 on flight number F456. After booking, get reservation details for reservation ID R654 to confirm the booking information and ensure everything is in order for your upcoming travel.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_muller_1116", "departure_airport_id": "A123", "arrival_airport_id": "A456", "flight_number": "F456"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R654"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_davis_3310",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Lopez'} and your email is ava.lopez2283@example.com. You are independent, patient, logical. First, book a reservation for User ID U001 (Raj Davis) from JFK to LAX on 12th December 2023 using tool book_reservation. Once the reservation is confirmed, get reservation details for Reservation ID R12345 to confirm booking information using tool get_reservation_details. Finally, check in User ID U001 for Flight ID F5678 on 12th December 2023 using tool check_in to ensure a smooth boarding process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_davis_3310", "from": "JFK", "to": "LAX", "date": "2023-12-12"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R12345"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "raj_davis_3310", "flight_id": "F5678", "date": "2023-12-12"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_7943",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson2295@example.com. You are logical, polite, organized. First, retrieve user details for Raj Khan using email raj.khan6740@example.com to confirm user identity and preferences, ensuring that all personal information is accurate and up to date. Once the user details are confirmed, proceed to book a reservation for Raj Khan on flight AA101 from JFK to LAX for 2023-11-20 using the same email. After successfully booking the reservation, get the reservation details for Raj Khan's booking on flight AA101 to confirm reservation details and seat assignment, ensuring everything is in order for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.khan6740@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_khan_7943", "flight_number": "AA101", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20", "email": "raj.khan6740@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_khan_7943", "flight_number": "AA101"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_davis_3817",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Muller'} and your email is ivan.muller6623@example.com. You are optimistic, patient. Begin by booking a reservation for user Omar Davis on Flight F1234 from LAX to JFK for 2023-11-15, seat class economy. Once the booking is confirmed, proceed to get the reservation details for Omar Davis to ensure all information is accurate and ready for his upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_davis_3817", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "omar_davis_3817"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7267",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li8768@example.com. You are flexible, confident. Book reservation for Liam Smith on Flight F1234 from JFK to LAX with seat preference of aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7267", "flight_number": "F1234", "departure": "JFK", "destination": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_kovacs_4017",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Muller'} and your email is raj.muller1211@example.com. You are flexible, organized, polite, independent. First, book a reservation for Lucas Kovacs on flight AA100 from JFK to LAX, ensuring that his seat preference and meal options are confirmed. Once the reservation is successfully made, proceed to check in Lucas Kovacs for flight AA100 to secure his boarding pass and seat assignment. This sequence ensures that Lucas's travel arrangements are efficiently managed and that he is well-prepared for his upcoming journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_kovacs_4017", "flight_number": "AA100", "departure": "JFK", "destination": "LAX", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "lucas_kovacs_4017", "flight_number": "AA100"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1916",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Martin'} and your email is isabella.martin5652@example.com. You are independent, optimistic. First, retrieve user details for Lucas Lee using email lucas.lee9489@example.com to verify user ID and reservation history. Once the user ID is confirmed, proceed to book a reservation for user ID U001 on flight ID F789 departing on 2023-11-15 from airport ID A123 to airport ID A456. Finally, check the flight status for flight ID F789 on 2023-11-15 to ensure on-time departure, providing Lucas with peace of mind for his upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.lee9489@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_lee_1916", "flight_id": "F789", "departure_date": "2023-11-15", "from_airport_id": "A123", "to_airport_id": "A456"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F789", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_silva_5208",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ito'} and your email is harper.ito9302@example.com. You are flexible, optimistic, direct, independent. First, retrieve user details for Evelyn Silva using get_user_details with email evelyn.silva5743@example.com to confirm her identity and preferences. Next, list all available airports using list_all_airports to determine potential departure and arrival locations for Evelyn's upcoming travel plans. Finally, book a reservation for user ID U1234 using book_reservation with flight number AA100, departure date 2023-11-15, and seat preference aisle to secure her spot on the desired flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.silva5743@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_silva_5208", "flight_number": "AA100", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_brown_8516",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Muller'} and your email is fatima.muller7881@example.com. You are flexible, organized. Use the `book_reservation` tool to reserve a flight for Amelia Brown from her chosen departure airport to her destination airport, ensuring the booking ID is generated. Once the reservation is successfully made, use the `get_reservation_details` tool to confirm the reservation details for Amelia's flight using her booking ID. This will ensure that all information is accurate and up to date before proceeding with any further actions.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_brown_8516", "departure_airport": "JFK", "destination_airport": "LAX", "passenger_name": "Amelia Brown", "contact_email": "fatima.muller7881@example.com", "preferences": ["flexible", "organized"]}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "amelia_brown_8516", "booking_id": "B123456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_jackson_2190",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Johnson'} and your email is fatima.johnson5264@example.com. You are confident, cautious, flexible. Book a reservation for Emma Jackson on flight F1234 from JFK to LAX on 2023-11-15 using her user ID U789.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_jackson_2190", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_anderson_7848",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Hernandez'} and your email is ava.hernandez1254@example.com. You are direct, optimistic. First, book a reservation for user Fatima Anderson on flight F123 from JFK to LAX on 2023-11-15 using book_reservation with user_id U001 and flight_id F123. Once the reservation is confirmed, check in user Fatima Anderson for flight F123 using check_in with reservation_id R456 and user_id U001 to ensure a smooth boarding process. Finally, calculate total baggage fees for 2 checked bags on reservation R456 using calculate with reservation_id R456 and baggage_count 2, so Fatima is aware of any additional costs before her journey.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_anderson_7848", "flight_id": "F123"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "fatima_anderson_7848"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R456", "baggage_count": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Sanchez'} and your email is chen.sanchez3153@example.com. You are direct, independent, optimistic. Search for available flights from Milan Malpensa Airport (MXP) to New York John F. Kennedy Airport (JFK) on the desired travel date. Once you have identified a suitable flight, book a reservation for Ivan Rossi, ensuring that his seating preferences are considered.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_rossi_8555"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "MXP"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "MXP", "arrival_airport": "JFK", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ito_4088",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Patel'} and your email is juan.patel8215@example.com. You are logical, polite. First, get the user details for Mia Ito by using her email mia.ito6295@example.com to retrieve her user ID. Once you have obtained Mia's user ID, proceed to book a reservation for her on flight FL123, which departs from airport AP001 and arrives at AP002 on 2023-11-15. This sequence ensures that Mia has a confirmed booking for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ito_4088", "flight_id": "FL123", "departure_airport": "AP001", "arrival_airport": "AP002", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8515",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ahmed'} and your email is james.ahmed6295@example.com. You are optimistic, cautious. First, book a reservation for Mei Lee on flight number AB123 from JFK Airport to LAX Airport on December 20, 2023, in economy class. Once the reservation is successfully made, proceed to get reservation details for the newly created reservation under Mei Lee's user ID to confirm the booking details, ensuring all information is accurate and ready for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lee_8515", "flight_number": "AB123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-20", "class": "economy", "passenger_name": "Mei Lee"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mei_lee_8515"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_silva_9265",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Silva'} and your email is aarav.silva8592@example.com. You are confident, polite. Book a reservation for Mohamed Silva on flight CD456 from JFK to LAX for 2023-11-05 using the user ID retrieved from the user details. After securing the reservation, promptly get the reservation details to confirm Mohamed Silva's seat assignment and meal preference. This ensures that all preferences are accurately recorded and communicated to the airline, enhancing Mohamed's travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_silva_9265", "flight_number": "CD456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-05", "passenger_name": "Mohamed Silva"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mohamed_silva_9265", "flight_number": "CD456", "departure_date": "2023-11-05"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_taylor_6615",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Kovacs'} and your email is mason.kovacs8863@example.com. You are logical, independent, optimistic, flexible. Book a reservation for Ivan Taylor on flight F123 from the selected departure airport to the selected arrival airport on the chosen date",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_taylor_6615", "flight_number": "F123", "departure_airport": "selected_departure_airport", "arrival_airport": "selected_arrival_airport", "date": "chosen_date"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_khan_5280",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Lopez'} and your email is olivia.lopez2934@example.com. You are confident, patient, organized, optimistic. Search for available flights from JFK to LAX on 2023-11-15 using calculate tool.",
        actions=[
            Action(
                name="calculate",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_khan_6285",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Khan'} and your email is anya.khan3991@example.com. You are polite, direct, logical. First, retrieve user details for Lucas Khan using email lucas.khan1454@example.com to confirm his identity and preferences. Once confirmed, proceed to search for flights departing from JFK International Airport to Los Angeles International Airport on December 15th, 2023. After identifying the suitable flight, book a reservation for Lucas Khan on flight F789 from JFK to LAX on December 15th, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.khan1454@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_khan_6285", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_moore_3967",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kim'} and your email is lei.kim1253@example.com. You are patient, logical. First, get_user_details for Raj Moore using email raj.moore1097@example.com to retrieve user-specific information. Next, use the retrieved details to book_reservation for Raj Moore on flight F123 from airport A001 to A002 for travel date 2023-10-15. Finally, get_reservation_details for Raj Moore's reservation ID R456 to verify booking details, ensuring the reservation is correctly processed and confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.moore1097@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_moore_3967", "flight_id": "F123", "departure_airport": "A001", "arrival_airport": "A002", "travel_date": "2023-10-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_smith_1028",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kim'} and your email is lei.kim3388@example.com. You are confident, polite, logical. Book a reservation for Anya on flight AA123 from JFK to LAX with her user ID and preferred seating. Once the reservation is confirmed, get reservation details for Anya's booking to confirm her travel itinerary and seat assignment.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_smith_1028", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "preferred_seating": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_smith_1028", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_davis_9130",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Muller'} and your email is juan.muller5247@example.com. You are confident, organized, logical, cautious. Book reservation for Ava Davis on flight F123 from LAX to JFK on December 15, 2023, using her user ID.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_davis_9130", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johansson_1766",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Garcia'} and your email is sophia.garcia3812@example.com. You are logical, polite. First, get user details for Fatima Johansson using email fatima.johansson8122@example.com to retrieve user ID. Once you have obtained the user ID, proceed to book a reservation for user ID U8122 on flight number F1234 from JFK to LAX on December 10, 2023. This ensures that Fatima has a confirmed seat on her desired flight, facilitating her travel plans efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.johansson8122@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johansson_1766", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8515",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Lopez'} and your email is mia.lopez8557@example.com. You are optimistic, confident, independent, direct. First, retrieve the user ID for Mei Lee by using her email mei.lee1220@example.com. Once you have obtained her user ID, proceed to book a reservation for her. She will be flying from airport A567 to A890 on flight F1234. Ensure all details are accurate to facilitate a smooth booking process for Mei Lee.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lee_8515", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "A890"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_silva_4301",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Patel'} and your email is olivia.patel6423@example.com. You are cautious, flexible, direct, organized. First, get user details for Mohamed Silva using email mohamed.silva7376@example.com to confirm user ID and preferences. Once you have confirmed his user ID, proceed to get reservation details for reservation ID R567 to confirm booking and provide the itinerary to Mohamed Silva. This will ensure that Mohamed has all the necessary information for his upcoming travel, enhancing his experience with our airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.silva7376@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_johnson_5613",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Davis'} and your email is mei.davis8487@example.com. You are polite, cautious, optimistic. Book a reservation for Ivan Johnson on flight AA123 from JFK to LAX on 2023-12-15, including seat preference and meal choice.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_johnson_5613", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_li_6867",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Santos'} and your email is mia.santos3745@example.com. You are polite, cautious, independent. Book a reservation for Evelyn Li for flight AA123 from SFO to JFK on 2023-11-01 with a return flight on 2023-11-08, including seat preference and meal choice.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_li_6867", "flight_number": "AA123", "departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-11-01", "return_date": "2023-11-08", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_wilson_8653",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim3947@example.com. You are polite, direct. First, retrieve user details for Yusuf Wilson using email yusuf.wilson1006@example.com to verify the user ID. Once you have verified the user ID, search for available flights from JFK to LAX on December 15, 2023, for the obtained user ID. After identifying a suitable flight, proceed to book a reservation for the user on flight F123 from JFK to LAX, selecting economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.wilson1006@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "class": "economy", "user_id": "yusuf_wilson_8653"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6197",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Khan'} and your email is omar.khan1438@example.com. You are flexible, confident, optimistic. First, search for flights from JFK to LAX on 2023-12-15 for user Juan Patel to find the best available options. Once you have identified a suitable flight, proceed to book a reservation for user ID 4720 on flight F123 with a seat preference for a window seat. Finally, check in user ID 4720 for reservation R789 and select seat 12A to ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "juan_patel_6197"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_patel_6197", "flight_id": "F123", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "juan_patel_6197", "reservation_id": "R789", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_4132",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Taylor'} and your email is lucas.taylor7450@example.com. You are confident, cautious, optimistic. First, get user details for the user with email evelyn.brown4905@example.com to retrieve their user ID and preferences. Once you have obtained the necessary information, proceed to book a reservation for the retrieved user ID on flight DL1234 from ATL to LAX with a window seat preference. This sequence ensures that you have the correct user information before making the reservation, streamlining the booking process for the airline and enhancing customer satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.brown4905@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_brown_4132", "flight_number": "DL1234", "departure": "ATL", "destination": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Martin'} and your email is daiki.martin3456@example.com. You are optimistic, cautious, confident, polite. Book a reservation for Ivan Rossi on flight F789 from JFK to LAX in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "class": "economy", "passenger_name": {"first_name": "Ivan", "last_name": "Rossi"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_taylor_3449",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ito'} and your email is mia.ito6295@example.com. You are logical, direct, polite. Please book a flight reservation for User {'first_name': 'Liam', 'last_name': 'Taylor'} from JFK to LAX on 2023-11-15 with a return on 2023-11-20, specifying economy class. Once the booking is confirmed, get the reservation details for User {'first_name': 'Liam', 'last_name': 'Taylor'} to confirm the booking ID and seat assignment. Finally, check the flight status for flight number AA123 departing from JFK on 2023-11-15 to ensure an on-time departure, as this is crucial for coordinating ground transportation upon arrival.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_taylor_3449", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-20", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "liam_taylor_3449"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA123", "departure_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_gonzalez_3796",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Garcia'} and your email is isabella.garcia5062@example.com. You are flexible, cautious, logical, organized. First, list all available airports to find departure and destination airport options for a client planning a business trip. Once the suitable options are identified, proceed to book a reservation for Harper Gonzalez on flight AA1234 from JFK to LAX for 11/25/2023 with user ID U12345.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_gonzalez_3796", "flight_number": "AA1234", "departure_airport": "JFK", "destination_airport": "LAX", "departure_date": "11/25/2023", "passenger_name": {"first_name": "Harper", "last_name": "Gonzalez"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_ito_8898",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Anderson'} and your email is lei.anderson8099@example.com. You are direct, organized, independent. Book a reservation for Raj Ito on the chosen flight F789, departing from JFK to LAX, using Raj Ito's user details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_ito_8898", "flight_number": "F789", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_garcia_2940",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Gonzalez'} and your email is ethan.gonzalez4384@example.com. You are flexible, logical, polite, confident. First, Get_user_details for user Ava Garcia (ava.garcia2797@example.com) to retrieve her user ID and preferences. Once you have obtained Ava's user ID and confirmed her preferences, proceed to Book_reservation for the retrieved user ID with flight number AA101, ensuring a window seat and a vegetarian meal are selected.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.garcia2797@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_garcia_2940", "flight_number": "AA101", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_li_1886",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Ahmed'} and your email is james.ahmed6295@example.com. You are confident, independent, optimistic, logical. First, get reservation details for confirmation number R5678 to verify booking for a client who is scheduled to travel next week. Once confirmed, proceed to update reservation R5678 for user ID U1234 to add a special meal request for a vegetarian option, ensuring the client’s dietary preferences are accommodated. Finally, get reservation details for confirmation number R5678 again to confirm that the meal request update has been successfully applied, ensuring all changes are correctly reflected in the system.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"confirmation_number": "R5678"}
            ),
            Action(
                name="manage_booking",
                kwargs={"confirmation_number": "R5678", "user_id": "ivan_li_1886", "special_requests": "vegetarian meal"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"confirmation_number": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_muller_4931",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Rossi'} and your email is omar.rossi5980@example.com. You are logical, polite, optimistic. Retrieve user details for Liam Muller using email liam.muller3805@example.com to verify account information. Once verified, search for available flights for Liam Muller from JFK to LAX on December 15, 2023. After identifying a suitable flight, proceed to book a reservation for Liam Muller on flight F123 from JFK to LAX on December 15, 2023, with a seat preference for a window.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.muller3805@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_muller_4931", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_2390",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Khan'} and your email is fatima.khan6332@example.com. You are direct, flexible, optimistic, confident. Use book_reservation to create a flight reservation for Harper Lopez with the chosen flight details, including seat preference and special requests.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_lopez_2390", "flight_details": {"departure": "2023-11-15T08:00:00", "arrival": "2023-11-15T11:00:00", "from": "JFK", "to": "LAX", "airline": "Delta", "flight_number": "DL123"}, "seat_preference": "aisle", "special_requests": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_moore_5020",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Garcia'} and your email is anya.garcia8816@example.com. You are patient, optimistic. First, get user details for Fatima Moore (fatima.moore5533@example.com) to confirm identity and retrieve user ID. Once you have confirmed her identity, book a reservation for the retrieved user ID on flight AA100 from JFK to LAX departing on 2023-12-01. After the reservation is successfully booked, check in the user for the newly created reservation on flight AA100 to ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.moore5533@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_moore_5020", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "fatima_moore_5020", "flight_number": "AA100"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_lopez_1974",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Silva'} and your email is james.silva8362@example.com. You are organized, optimistic, flexible, logical. First, retrieve user details for Juan Lopez using email juan.lopez8898@example.com to ensure his information is correct for the reservation process. Next, list all airports to identify departure and destination options for a new reservation, focusing on the most convenient choices for Juan Lopez. Finally, book a reservation for user ID U101 with flight ID F789 from airport ID A123 to airport ID A456, ensuring all details align with Juan's preferences and requirements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.lopez8898@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_lopez_1974", "flight_id": "F789", "from_airport_id": "A123", "to_airport_id": "A456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_moore_9091",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Li'} and your email is amelia.li8768@example.com. You are patient, flexible, independent. First, Get_user_details for Juan Moore to retrieve user ID using email juan.moore1720@example.com. Once you have the user ID, proceed to Book_reservation for user ID retrieved for Juan Moore from JFK to LAX on 2023-11-15 with flight number AA1001. After successfully booking the reservation, Check_in for reservation ID ABC123 for Juan Moore to secure seat assignment.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_moore_9091", "from_airport": "JFK", "to_airport": "LAX", "flight_number": "AA1001", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "ABC123", "user_id": "juan_moore_9091"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_silva_4301",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen8380@example.com. You are independent, patient, confident. Search for flights from JFK to LAX for the upcoming weekend to find suitable travel options for Mohamed Silva. Once you have identified the best flight option, proceed to book a reservation for Mohamed Silva on flight AA100 from JFK to LAX, ensuring seat selection and special requests are noted. This will help streamline the booking process and enhance the travel experience for Mohamed Silva.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_silva_4301", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_selection": "12A", "special_requests": "Vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_lopez_9956",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8926@example.com. You are polite, organized, cautious. \"Book reservation for Ivan Lopez with user ID U001 for flight F1234 from airport A567 to destination D890\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_lopez_9956", "flight_id": "F1234", "departure_airport": "A567", "destination_airport": "D890"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_wilson_8866",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are logical, independent, direct. Book reservation for Harper Wilson on flight F1234 from JFK to LAX using user ID and flight details. Once the reservation is confirmed, check-in Harper Wilson for flight F1234 using reservation and user IDs to receive a boarding pass. This will ensure Harper is fully prepared for her journey, with her seat secured and boarding pass ready for a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_wilson_8866", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_wilson_8866", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lopez_8334",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi6938@example.com. You are direct, patient. Book_reservation for user Daiki Lopez on flight F12345 from airport A567 to airport A890 with preferred seat type.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lopez_8334", "flight_id": "F12345", "departure_airport": "A567", "arrival_airport": "A890", "seat_type": "preferred"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_li_8840",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Kovacs'} and your email is mia.kovacs4378@example.com. You are organized, independent, polite. First, get user details for user email ava.li8273@example.com to retrieve user ID and preferences. Then, use the retrieved user ID to search for flights from airport ID JFK to airport ID LAX on 2023-11-15, ensuring the options align with the user's preferences for a seamless booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.li8273@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_gonzalez_4431",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Hernandez'} and your email is liam.hernandez2558@example.com. You are optimistic, patient. Retrieve user details for Sofia Gonzalez using email sofia.gonzalez2543@example.com to confirm her user ID. Once you have confirmed her user ID, proceed to book a reservation for Sofia Gonzalez on the selected flight using her user ID and the provided flight details. This sequence ensures that Sofia's booking is accurately linked to her account, allowing for seamless travel management.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.gonzalez2543@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_gonzalez_4431", "flight_id": "FL123", "seat_class": "economy", "departure_date": "2023-12-15", "departure_time": "10:00", "origin": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_johnson_3148",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Johansson'} and your email is omar.johansson3839@example.com. You are polite, organized, direct, logical. Calculate the total cost for a new reservation from JFK to LAX for Fatima Johnson, including any discounts or offers.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "fatima_johnson_3148"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_johnson_3148", "departure": "JFK", "destination": "LAX"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "fatima_johnson_3148"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_davis_2143",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez6891@example.com. You are confident, optimistic, logical, flexible. First, get reservation details for Isabella Davis's booking on flight number AA123 to confirm her seat assignment. Once the seat assignment is confirmed, proceed to check in Isabella Davis for flight AA123 using her reservation details to ensure she is ready to board.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "isabella_davis_2143", "flight_number": "AA123"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "isabella_davis_2143", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_thomas_5479",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Li'} and your email is juan.li3600@example.com. You are confident, cautious, logical. First, retrieve user details for Mia Thomas using email mia.thomas9453@example.com to confirm her user ID. Once you have confirmed her user ID, proceed to book a reservation for Mia Thomas on flight F123 from JFK to LAX on October 15, 2023. After successfully booking the reservation, get the reservation details for Mia Thomas to confirm her booking on flight F123. This sequence ensures that Mia Thomas has a confirmed booking for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.thomas9453@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_thomas_5479", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_thomas_5479", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_nguyen_6566",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Li'} and your email is isabella.li1262@example.com. You are flexible, independent, direct. Book a reservation for user Noah Nguyen on flight F123 from JFK to LAX on 2023-12-15. Once the reservation is confirmed, proceed to check-in Noah Nguyen for flight F123 to secure seat assignment and boarding pass.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_nguyen_6566", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "noah_nguyen_6566", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_li_3601",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Patel'} and your email is daiki.patel8585@example.com. You are direct, flexible. \"Book reservation for user ID U1051 on flight F123 from JFK to LAX on 2023-12-15 with seat preference window.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_li_3601", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_taylor_8420",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are direct, organized, cautious. First, retrieve user details using email sofia.taylor9399@example.com to confirm Sofia Taylor's identity, ensuring all information is accurate and up-to-date. Once confirmed, proceed to book a reservation for Sofia Taylor on flight number AA100 from JFK to LAX, utilizing her verified user details. After the reservation is successfully made, update Sofia's booking to include a special meal request that aligns with her dietary preferences, ensuring all requirements are met.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.taylor9399@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_taylor_8420", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "sofia_taylor_8420", "special_request": "special meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_patel_3102",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Khan'} and your email is amelia.khan7634@example.com. You are patient, optimistic. Book reservation for user James Patel on flight F123 from JFK to London Heathrow Airport, including meal preferences and seat selection.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_patel_3102", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "London Heathrow Airport", "meal_preference": "vegetarian", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_martin_4744",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are direct, flexible, organized. Search for flights from JFK to LAX on 2023-11-15 for Aarav Martin and, once you find a suitable option, book a reservation for him on flight AA123 from JFK to LAX on 2023-11-15, with an aisle seating preference. Ensure the booking aligns with his travel schedule and preferences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_martin_4744", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_brown_7075",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Jackson'} and your email is mia.jackson4610@example.com. You are optimistic, independent. Check in Mei Brown for flight number AA1234 using her user ID to secure her boarding pass and seat assignment.",
        actions=[
            Action(
                name="check_in",
                kwargs={"user_id": "mei_brown_7075", "flight_number": "AA1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_li_1886",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are independent, cautious, polite. Book a reservation for user Ivan Li on flight F1234 from JFK to LAX, selecting seat 12A.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_li_1886", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_6762",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito7126@example.com. You are logical, optimistic, independent. Search for available flights from JFK to LAX on December 15, 2023, for user with email yusuf.kovacs8968@example.com. Once you find a suitable flight, proceed to book a reservation for flight F123 from JFK to LAX for the same user, including seat selection and meal preference. This will ensure a seamless travel experience for the user by securing their travel arrangements in advance.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_6762", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_sanchez_7079",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Kovacs'} and your email is harper.kovacs2607@example.com. You are independent, direct, organized, flexible. Check flight status for flight AA100 from SFO to JFK on 2023-12-15",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "AA100", "departure_airport": "SFO", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_anderson_6815",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Jackson'} and your email is ava.jackson4706@example.com. You are confident, patient. Book reservation for Liam Anderson on flight F9876 using user ID and flight details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_anderson_6815", "flight_number": "F9876", "first_name": "Liam", "last_name": "Anderson"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_1489",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are patient, logical, independent. First, get user details for user Harper Lopez using email harper.lopez8439@example.com to verify account status. Once the account status is confirmed, proceed to book a reservation for Harper Lopez on flight F1234 from JFK to LAX on 2023-12-15. After booking the reservation, obtain the reservation details for reservation R5678 to confirm booking information for Harper Lopez, ensuring all details are accurate and in order.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.lopez8439@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_lopez_1489", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_9794",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez7272@example.com. You are direct, polite. First, retrieve user details for Liam Jackson using his email liam.jackson2763@example.com to confirm his user ID for reservation purposes. Once you have confirmed his user ID, proceed to book a reservation for Liam Jackson on flight F12345 from JFK to LAX on December 15, 2023. This sequence ensures that the booking is accurately linked to his profile for seamless travel arrangements.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.jackson2763@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_9794", "flight_number": "F12345", "departure": "JFK", "destination": "LAX", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_taylor_6683",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Anderson'} and your email is aarav.anderson2369@example.com. You are cautious, flexible, logical. First, retrieve user details for Liam Taylor using email liam.taylor5916@example.com to ensure you have the correct passenger information. Once you have confirmed Liam's details, proceed to search for available flights from John F. Kennedy International Airport to Los Angeles International Airport on the preferred travel date. This will enable you to find the most suitable flight options for Liam's travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.taylor5916@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "liam_taylor_6683"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_moore_3878",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Silva'} and your email is ava.silva9457@example.com. You are logical, optimistic, flexible, independent. Please check in for reservation ID 'R123456' for user Raj Moore to receive the boarding pass, and then calculate the baggage fees for the same reservation ID with 2 checked bags. This will ensure that Raj Moore is fully prepared for his upcoming flight, having both his boarding pass and baggage fees settled in advance.",
        actions=[
            Action(
                name="check_in",
                kwargs={"reservation_id": "R123456", "user_id": "raj_moore_3878"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R123456", "checked_bags": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_6381",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Sanchez'} and your email is lucas.sanchez2568@example.com. You are direct, independent, logical, cautious. Book a flight reservation for user Harper Santos from Los Angeles (LAX) to New York (JFK) on December 15, 2023, using book_reservation tool with user ID U7981.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_6381", "origin": "LAX", "destination": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_jackson_3290",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Rossi'} and your email is amelia.rossi4259@example.com. You are confident, optimistic. Please begin by booking a flight reservation for user Chen Jackson (chen.jackson9941@example.com) from JFK to LAX on December 15, 2023, with flight number AA100. After the booking is made, proceed to get the reservation details for Chen Jackson to verify the booking for flight AA100. Finally, ensure that Chen Jackson is checked in for flight AA100 departing on December 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_jackson_3290", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "chen_jackson_3290", "flight_number": "AA100", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "chen_jackson_3290", "flight_number": "AA100", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_smith_8416",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Rossi'} and your email is juan.rossi3718@example.com. You are patient, organized, logical. Use the get_user_details tool with email 'olivia.smith7972@example.com' to retrieve Olivia Smith's user ID for booking purposes.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.smith7972@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_brown_9300",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Smith'} and your email is mason.smith6255@example.com. You are direct, patient, flexible, polite. Book reservation for Omar Brown on flight F1234 from JFK to LAX departing on 2023-11-15 using user ID retrieved.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_brown_9300", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_lopez_2996",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are independent, optimistic, direct, organized. \"Book reservation for user james.lopez4194@example.com on Flight ID F456 from A123 to A789 on 2023-11-15.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_lopez_2996", "flight_id": "F456", "departure_airport": "A123", "arrival_airport": "A789", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_kovacs_6640",
        instruction="Your name is {'first_name': 'Aarav', 'last_name': 'Nguyen'} and your email is aarav.nguyen1044@example.com. You are patient, optimistic, cautious, independent. Search for flights from JFK (John F. Kennedy International Airport) to LAX (Los Angeles International Airport) on December 12, 2023, for James Kovacs. Once you find a suitable flight, book a reservation for James Kovacs on flight F123 from JFK to LAX on December 12, 2023, using his user ID. After booking the reservation, update it to include a special meal request (vegetarian) for James Kovacs to ensure his dietary preferences are accommodated during the flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-12", "user_id": "james_kovacs_6640"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "james_kovacs_6640", "special_request": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_davis_3817",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed2997@example.com. You are patient, logical, independent. First, get user details for Omar Davis using email omar.davis7857@example.com to confirm user profile information. Once confirmed, proceed to book a reservation for Omar Davis on flight ID F456, departing from airport ID A123 to destination airport ID A789 on 2023-11-15. After booking, get reservation details for reservation ID R789 to confirm booking details and ensure everything is in order for Omar Davis.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.davis7857@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_davis_3817", "flight_id": "F456", "departure_airport_id": "A123", "destination_airport_id": "A789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_silva_4267",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Silva'} and your email is evelyn.silva5743@example.com. You are direct, cautious, independent, polite. Book reservation for Mia Silva on flight ID F456 from airport A123 to A789 with seat preference and meal option.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_silva_4267", "flight_id": "F456", "departure_airport": "A123", "arrival_airport": "A789", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_taylor_2700",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Li'} and your email is juan.li6848@example.com. You are confident, direct. Retrieve user details for Emma Taylor using email emma.taylor9655@example.com to confirm user ID. Once the user ID is confirmed, search for available flights from JFK to LAX on 2023-11-15 for the user ID associated with emma.taylor9655@example.com.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.taylor9655@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_wilson_9173",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ito'} and your email is harper.ito9302@example.com. You are logical, patient, polite. First, retrieve user details for Liam Wilson using email liam.wilson5699@example.com to confirm identity. Once confirmed, find and book a reservation for Liam Wilson on a flight from JFK to LAX departing on October 15, 2023. After securing the reservation, update Liam Wilson’s reservation to include a special meal request for vegetarian.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "liam.wilson5699@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_wilson_9173", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "liam_wilson_9173", "special_request": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_anderson_3457",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Silva'} and your email is ava.silva9457@example.com. You are confident, direct. First, book a reservation for user Juan Anderson (juan.anderson1791@example.com) from LAX to JFK on flight AA123 for 2023-11-15 with a seat preference of aisle. Once the booking is confirmed, proceed to check-in for flight AA123 for user Juan Anderson using the booking reference BR4567. Ensure all details are accurate to facilitate a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_anderson_3457", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "aisle", "passenger_email": "juan.anderson1791@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "juan_anderson_3457", "flight_number": "AA123", "booking_reference": "BR4567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_garcia_8768",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez7272@example.com. You are direct, logical, cautious. Book reservation for Ethan Garcia on flight F789 from LAX to JFK with seat preference for window seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_garcia_8768", "flight_number": "F789", "departure": "LAX", "arrival": "JFK", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_nguyen_7360",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Gonzalez'} and your email is sophia.gonzalez7573@example.com. You are optimistic, independent. \"Book reservation for Ethan Nguyen on flight F123 from JFK to LAX on 2023-12-15, departing at 09:00 AM.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_nguyen_7360", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "departure_time": "09:00 AM"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_moore_5127",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Smith'} and your email is liam.smith3091@example.com. You are cautious, logical. First, book a reservation for user Evelyn Moore for flight AA123 on 2023-11-15 from JFK to LAX. Once the reservation is confirmed, proceed to check in Evelyn Moore for the same flight using reservation ID R5678 to ensure she is ready for her journey. After successfully checking her in, book a reservation for Evelyn Moore for her return flight AA456 on 2023-11-20 from LAX to JFK, ensuring her travel plans are complete and seamless.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_moore_5127", "flight_number": "AA123", "departure_date": "2023-11-15", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "evelyn_moore_5127", "reservation_id": "R5678"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_moore_5127", "flight_number": "AA456", "departure_date": "2023-11-20", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_muller_9002",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Lee'} and your email is liam.lee4529@example.com. You are confident, logical, organized, flexible. Book reservation for user Sophia Muller on flight F1234 with preferred seating.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_muller_9002", "flight_number": "F1234", "preferred_seating": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_muller_6989",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito7126@example.com. You are organized, independent, optimistic. First, get user details for Juan Muller using email juan.muller5247@example.com to verify his user ID. Once you have confirmed his user ID, proceed to book a reservation for Juan Muller on Flight ID F123 from Airport ID A001 to Airport ID A002. After successfully booking the reservation, check in Juan Muller for Reservation ID R456 to secure his seat and generate his boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.muller5247@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_muller_6989", "flight_id": "F123", "from_airport_id": "A001", "to_airport_id": "A002"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "juan_muller_6989", "reservation_id": "R456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7283",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson2295@example.com. You are flexible, direct, logical, independent. First, search for flights departing from JFK Airport to LAX Airport on December 15, 2023, to identify available options for our client, Liam Smith. Once you have confirmed the availability of flight F123, proceed to book a reservation for Liam Smith on this flight, ensuring all details are accurate and the booking is successfully completed.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7283", "flight_number": "F123", "passenger_first_name": "Liam", "passenger_last_name": "Smith", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_rossi_8555",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi1664@example.com. You are independent, confident, polite. Use the `book_reservation` tool to book a flight reservation for user {'first_name': 'Ivan', 'last_name': 'Rossi'} from JFK to LAX on flight AA123 on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_rossi_8555", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_taylor_7043",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Thomas'} and your email is evelyn.thomas2312@example.com. You are polite, flexible, independent. Use `book_reservation` to reserve a seat for user James Taylor on flight F123 from JFK to LAX on November 15, 2023, specifying window seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_patel_9828",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Johnson'} and your email is chen.johnson6896@example.com. You are logical, cautious, confident. First, retrieve user details for James Patel using the email james.patel1360@example.com to confirm his user ID. Once you have the user ID, proceed to book a reservation for James Patel on flight number AA456 from JFK to LAX on December 20, 2023. After successfully booking the reservation, check in James Patel for the same flight using the reservation ID and the user ID obtained earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_patel_9828", "flight_number": "AA456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-20"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "james_patel_9828", "reservation_id": "RES12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_3782",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs7490@example.com. You are flexible, logical, cautious. Book a reservation for Liam Jackson on flight AA100 from JFK to LAX on the upcoming Friday using the user details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_3782", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "upcoming Friday"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_3174",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs2444@example.com. You are cautious, flexible. First, retrieve user details for Mason Johansson using email mason.johansson3750@example.com to confirm his user ID. Once you have confirmed the user ID, proceed to search for available flights from JFK to LAX on 2023-10-15 for Mason. This sequence ensures that you have the correct user information before checking flight availability, which is crucial for providing accurate booking options and maintaining efficient customer service in the airline industry.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.johansson3750@example.com"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "mason_johansson_3174", "origin": "JFK", "destination": "LAX", "date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_muller_2311",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Ahmed'} and your email is evelyn.ahmed7132@example.com. You are cautious, logical. First, search for flights from JFK to LAX on 2023-11-20 for user Isabella Muller to ensure availability and pricing options. Once you have identified a suitable flight, proceed to book a reservation for flight number DL456 from JFK to LAX on 2023-11-20 for user Isabella Muller (isabella.muller7926@example.com). After successfully booking the flight, obtain the reservation details for reservation ID 78901 to confirm the booking and seat assignment, ensuring everything is in order for the upcoming travel.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-20"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_muller_2311", "flight_number": "DL456", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-20", "passenger_name": "Isabella Muller", "passenger_email": "isabella.muller7926@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "78901"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_garcia_6211",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ito'} and your email is amelia.ito1923@example.com. You are direct, flexible, independent, cautious. First, get user details for Evelyn Garcia (evelyn.garcia5661@example.com) to confirm user ID and preferences. Once you have confirmed the user ID, proceed to search for flights from airport ID A123 to destination airport ID A456 on 2023-11-15. After identifying a suitable flight, book a reservation for the confirmed user ID on the selected flight with a seat preference for the aisle.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.garcia5661@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_garcia_6211", "flight_id": "FL123", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_muller_4960",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Li'} and your email is isabella.li1262@example.com. You are direct, polite, optimistic, patient. First, retrieve user details for Yusuf Muller using email yusuf.muller7236@example.com to verify user ID, ensuring accurate identification for travel arrangements. Next, list all airports to find the nearest one to Yusuf's location, assisting in his travel planning by determining the most convenient departure point. Finally, search for flights from airport ID A1234 to destination airport ID A5678 on 2023-12-15 to provide Yusuf with suitable travel options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.muller7236@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_martin_3924",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Kovacs'} and your email is olivia.kovacs3528@example.com. You are patient, cautious, logical, confident. Begin by searching for flights from JFK Airport to LAX Airport on 2023-12-15 for user Olivia Martin to find the best available options. Once you have identified a suitable flight, proceed to book a reservation for user Olivia Martin on flight F789 from JFK to LAX on 2023-12-15. After successfully booking the reservation, obtain the reservation details for user Olivia Martin to confirm the booking ID and seat assignment, ensuring all information is accurate for the upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_martin_3924", "flight_number": "F789", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "olivia_martin_3924"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_lopez_2996",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johnson'} and your email is mason.johnson4736@example.com. You are polite, logical, confident. First, retrieve reservation details for James Lopez to confirm his booking and seat assignment on Flight F456 from airport A123 to destination D789. Once confirmed, proceed to check in James Lopez for Flight F456, assigning him seat 12A and issuing his boarding pass. This ensures a smooth and efficient process for his upcoming travel.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "james_lopez_2996", "flight_number": "F456"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "james_lopez_2996", "flight_number": "F456", "seat_assignment": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_wilson_8653",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Davis'} and your email is harper.davis7823@example.com. You are logical, organized, flexible, direct. Retrieve user details for Yusuf Wilson using the email yusuf.wilson1006@example.com to confirm user ID, then book a reservation for Yusuf Wilson on flight F789 from airport ID A123 to airport ID A456, including meal preference and seat selection. This sequence ensures that all necessary user information is verified before proceeding with the booking, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.wilson1006@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_wilson_8653", "flight_id": "F789", "departure_airport_id": "A123", "arrival_airport_id": "A456", "meal_preference": "vegetarian", "seat_selection": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_garcia_2126",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Garcia'} and your email is ethan.garcia3231@example.com. You are direct, cautious, logical. Use the book_reservation tool to reserve a flight for User Harper Garcia from JFK to LAX on 2023-12-15, specifying seat preference as window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_garcia_2126", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_brown_8416",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Taylor'} and your email is yusuf.taylor8412@example.com. You are cautious, organized. Book a reservation for Yusuf on flight AB123 from New York (JFK) to Los Angeles (LAX) with a window seat preference. Once the reservation is confirmed, update Yusuf's reservation to add an extra checked bag and confirm the updated details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_brown_8416", "flight_number": "AB123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "yusuf_brown_8416", "action": "add_checked_bag", "quantity": 1}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_brown_8416"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_kovacs_8269",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ahmed'} and your email is harper.ahmed4982@example.com. You are cautious, flexible, optimistic. Book reservation for user Mia Kovacs on flight F12345 from JFK to LAX on 2023-12-15, seating preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_kovacs_8269", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seating_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_kovacs_2340",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Anderson'} and your email is harper.anderson5822@example.com. You are optimistic, cautious, logical, flexible. Book a reservation for user Mei Kovacs on flight F123 from JFK to LAX departing on 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_kovacs_2340", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_8687",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Gonzalez'} and your email is noah.gonzalez5162@example.com. You are optimistic, polite, patient, flexible. Search for available flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15, 2023. Once you find a suitable flight, book a reservation for user Harper Santos on flight F1234 from LAX to JFK on December 15, 2023, in economy class. This will ensure that Harper has a confirmed seat for their upcoming business trip to New York.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_santos_8687", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_jackson_9794",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Lee'} and your email is daiki.lee6987@example.com. You are optimistic, independent, polite. Please begin by listing all airports to find departure and arrival options for user Liam Jackson, as he is planning a trip. Once you have identified the suitable options, proceed to book a reservation for Liam Jackson on flight number AA123 from JFK to LAX on October 15, 2023. After successfully booking the reservation, ensure that Liam Jackson is checked in for reservation ID R456 to secure his boarding pass and facilitate a smooth travel experience.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_jackson_9794", "flight_number": "AA123", "departure": "JFK", "arrival": "LAX", "date": "2023-10-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "liam_jackson_9794", "reservation_id": "R456"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_santos_2092",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Jackson'} and your email is lucas.jackson5157@example.com. You are confident, organized, patient, independent. First, search for flights from JFK to LAX on 2023-11-15 for user Mia Santos to find the most suitable options available. Once you have identified the best flight, proceed to book a reservation for user ID U123 on flight F456 from JFK to LAX, ensuring to select a window seat as per the user's preference. After booking, check the flight status for flight F456 on 2023-11-15 to confirm that it is on time for Mia Santos, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_santos_2092", "flight_id": "F456", "seat_preference": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "F456", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_patel_4666",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Sanchez'} and your email is fatima.sanchez3339@example.com. You are polite, independent, cautious. First, check the flight status for flight F5678 on date 2023-11-15 to ensure there are no delays or cancellations. Once you have confirmed that the flight is on schedule, proceed to check in for reservation_id R2345 for the same flight on the same date.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F5678", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R2345", "flight_number": "F5678", "date": "2023-11-15", "user_id": "lei_patel_4666"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_2677",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Johansson'} and your email is ivan.johansson7034@example.com. You are independent, organized, optimistic. Book a reservation for user Chen Nguyen on flight ID F1234 from the nearest airport to Paris.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "nearest"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_2677", "flight_id": "F1234", "departure_airport": "nearest", "destination": "Paris"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_martin_7498",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Li'} and your email is ethan.li9943@example.com. You are confident, logical, cautious, polite. First, get user details for Noah Martin using email noah.martin7075@example.com to verify user ID. Once you have confirmed his user ID, proceed to book a reservation for Noah Martin on flight AA100 from LAX to JFK. Ensure that all the information is accurate and up-to-date, as this is crucial for the smooth processing of his travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.martin7075@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_martin_7498", "flight_number": "AA100", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_brown_1657",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Muller'} and your email is liam.muller3463@example.com. You are independent, logical, confident, cautious. Search for flights departing from Los Angeles International Airport (LAX) with destination to John F. Kennedy International Airport (JFK) on the desired travel date. Once you have identified a suitable flight, book a reservation for Juan Brown on flight F123 from LAX to JFK using the user ID retrieved earlier. Ensure that the booking process is completed efficiently to secure the best available options for the client.",
        actions=[
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "flight_number": "F123"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_brown_1657", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_nguyen_4236",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Silva'} and your email is mia.silva8990@example.com. You are flexible, polite, direct. Search for flights departing from LAX to JFK on the 15th of November 2023 to find options for Evelyn's trip. Once you have identified a suitable flight, book a reservation for user ID U12345 on flight F67890 from LAX to JFK on the 15th of November 2023. This will ensure Evelyn has a confirmed booking for her travel needs.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_nguyen_4236", "flight_id": "F67890", "departure": "LAX", "destination": "JFK", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_7043",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are cautious, independent, optimistic, confident. List all available airports to identify departure and arrival options for user Mei Wilson, who is planning a business trip and needs to choose the most convenient airports. Once the airports are identified, book a reservation for user ID U789 on flight F456 from airport A123 to A456, including seat preference, ensuring that Mei Wilson has a confirmed seat on her chosen flight. After the reservation is successfully made, check in user ID U789 for flight F456 using reservation ID R123 to ensure boarding pass issuance, allowing Mei Wilson to have a seamless travel experience.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_7043", "flight_id": "F456", "from_airport": "A123", "to_airport": "A456", "seat_preference": "aisle"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mei_wilson_7043", "flight_id": "F456", "reservation_id": "R123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_davis_7802",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Patel'} and your email is fatima.patel8582@example.com. You are polite, direct, cautious. Retrieve user details for James Davis using james.davis1376@example.com to confirm user ID and reservation history. Once you have confirmed the user ID, proceed to book a reservation for James Davis on Flight F1234, ensuring that seat selection is available. This will help us maintain an accurate record of his travel preferences and ensure a smooth booking process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.davis1376@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "james_davis_7802"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_davis_7802", "flight_id": "F1234", "seat_selection": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_anderson_6815",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Davis'} and your email is mei.davis8487@example.com. You are cautious, independent. First, check in for reservation ID R56789 for Liam Anderson to receive the boarding pass and confirm the seat. Once the check-in is completed, calculate the baggage fees for the same reservation to inform Liam Anderson of any additional costs he might incur before his flight. This ensures that Liam has all necessary information and documents ready for his travel, enhancing his experience with the airline.",
        actions=[
            Action(
                name="check_in",
                kwargs={"reservation_id": "R56789", "user_id": "liam_anderson_6815"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R56789", "user_id": "liam_anderson_6815"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_martin_8571",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Patel'} and your email is mei.patel5375@example.com. You are logical, polite. Search for flights from JFK Airport to LAX Airport for the preferred travel dates of Emma Martin. Once you find a suitable flight, book a reservation for Emma Martin on flight AA123, ensuring her seating preference is a window seat.",
        actions=[
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_user_details",
                kwargs={"user_id": "emma_martin_8571"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_martin_8571", "flight_number": "AA123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_li_6597",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Smith'} and your email is james.smith6775@example.com. You are confident, flexible, optimistic. First, book a reservation for Sofia Li on flight AA123 from JFK to LAX on 2023-11-15. Once the booking is confirmed, obtain the reservation details for reservation ID R5678 to ensure everything is in order for Sofia Li's travel. Finally, check in Sofia Li for flight AA123 using reservation ID R5678 to secure her seat and streamline her travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_li_6597", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Sofia Li"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sofia_li_6597", "reservation_id": "R5678"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "sofia_li_6597", "reservation_id": "R5678", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_li_6597",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi1664@example.com. You are direct, confident, cautious, optimistic. First, retrieve user details for Sofia Li using email sofia.li2352@example.com to ensure you have the correct information for booking. Next, book a reservation for Sofia Li on flight AA123 from JFK to LAX on 2023-11-15. Once the booking is confirmed, retrieve the reservation details for Sofia Li to verify the booking confirmation and ensure all information is accurate and complete.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.li2352@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_li_6597", "flight_number": "AA123", "departure": "JFK", "destination": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sofia_li_6597"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_rossi_1297",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Garcia'} and your email is mohamed.garcia1541@example.com. You are confident, logical, optimistic. Retrieve user details for Amelia Rossi using her email amelia.rossi3096@example.com to confirm her identity, and then book a reservation for her on flight AA123 with a window seat preference. This will ensure that Amelia's identity is verified before securing her preferred seating on the flight, enhancing her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.rossi3096@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_rossi_1297", "flight_number": "AA123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_davis_9130",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Gonzalez'} and your email is noah.gonzalez5162@example.com. You are cautious, polite, independent. First, book a reservation for Ava on flight F123 from JFK to LAX on 2023-11-15 with a window seat preference. Once the booking is confirmed, retrieve the reservation details to ensure the booking status is confirmed and the seat assignment reflects Ava's preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_davis_9130", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ava_davis_9130", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_wilson_8118",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Wilson'} and your email is evelyn.wilson9461@example.com. You are independent, optimistic, confident, cautious. Cancel reservation R456 for user lucas.wilson2040@example.com due to flight changes.",
        actions=[
            Action(
                name="cancel_reservation",
                kwargs={"reservation_id": "R456", "user_id": "lucas_wilson_8118", "reason": "Flight changes"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_sanchez_3680",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Lee'} and your email is chen.lee7831@example.com. You are organized, direct. Book reservation for user ID retrieved for flight F1234, including seat preference and meal selection.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_sanchez_3680", "flight_number": "F1234", "seat_preference": "aisle", "meal_selection": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_martin_8571",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Garcia'} and your email is ava.garcia2797@example.com. You are optimistic, cautious. First, get user details for Emma Martin using email emma.martin1739@example.com to retrieve user ID and preferences. Then, use the retrieved user ID to book a reservation for Emma Martin from JFK to LAX on flight AA123 on 2023-11-15. Finally, check in Emma Martin for flight AA123 using the reservation ID and provide her with the boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.martin1739@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_martin_8571", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "emma_martin_8571", "reservation_id": "reservation_id_placeholder"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1916",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Kim'} and your email is noah.kim2865@example.com. You are cautious, independent. First, book a reservation for Lucas Lee on flight AA123 from JFK to LAX departing on 2023-11-15. Once the reservation is made, retrieve the reservation details to confirm that the booking is successful and accurate. Finally, update Lucas Lee's reservation to include a meal preference of vegetarian to ensure his dietary needs are met during the flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "AA123", "departure_date": "2023-11-15", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_thomas_5479",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Kovacs'} and your email is lucas.kovacs2444@example.com. You are cautious, direct, polite. Retrieve user details for Mia Thomas using email mia.thomas9453@example.com. Then, search for flights from LAX to JFK on a specific date that suits Mia Thomas's schedule. You are assisting Mia Thomas in planning her upcoming business trip to New York, ensuring that her travel arrangements align with her meeting schedule. Please ensure that the flight options you find accommodate her preferences for departure and arrival times.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.thomas9453@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "user_id": "mia_thomas_5479"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_kim_3844",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Johansson'} and your email is ivan.johansson7034@example.com. You are cautious, logical, optimistic, confident. Book a reservation for Ivan Kim on flight AA123 departing from JFK, ensuring all user details are correct.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_kim_3844", "flight_number": "AA123", "departure_airport": "JFK", "passenger_name": "Ivan Kim"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_li_6867",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Khan'} and your email is omar.khan1438@example.com. You are organized, confident, logical. Book a flight reservation for user Evelyn Li from New York (JFK) to Los Angeles (LAX) on December 15, 2023, with a preference for morning flights. Once the reservation is confirmed, select and reserve a window seat for Evelyn Li on flight AA123. After the seat selection, check in Evelyn Li for flight AA123 and generate a mobile boarding pass to ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_li_6867", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "flight_time_preference": "morning"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "evelyn_li_6867", "flight_number": "AA123", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "evelyn_li_6867", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_li_9671",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Martin'} and your email is emma.martin1739@example.com. You are organized, flexible. Search for available flights from JFK to LAX departing on 2023-12-15 for user Juan Li. Once you have identified a suitable flight, proceed to book a reservation for flight F1234 for Juan Li, ensuring a window seat preference is selected. This will ensure Juan has a comfortable journey, aligning with our commitment to providing personalized travel experiences.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_li_9671", "flight_id": "F1234", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_nguyen_9006",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Lopez'} and your email is olivia.lopez2934@example.com. You are cautious, direct, patient, polite. First, check the flight status for flight F123 on 2023-11-25 from JFK to LAX to ensure there are no delays or cancellations. Once confirmed, proceed to book a reservation for user Yusuf Nguyen on the same flight with seat preference aisle.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-11-25", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_nguyen_9006", "flight_number": "F123", "departure_date": "2023-11-25", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_brown_9300",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Rossi'} and your email is lei.rossi4666@example.com. You are optimistic, confident, cautious, patient. Search for flights from JFK to LAX departing on 2023-11-15 for user Omar Brown, ensuring that the options align with his preferences for an aisle seat. Once you find a suitable flight, proceed to book a reservation for Omar Brown on flight F9876, securing an aisle seat for him on this date.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "omar_brown_9300"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_brown_9300", "flight_id": "F9876", "seat_preference": "aisle", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_gonzalez_3796",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Johnson'} and your email is daiki.johnson3136@example.com. You are independent, polite. Retrieve user details for Harper Gonzalez using email harper.gonzalez9176@example.com to confirm user ID. Once you have confirmed the user ID, search for available flights from LAX to JFK on the desired travel date using the user ID from Harper Gonzalez. This will help ensure that we can provide Harper with the best options for their travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.gonzalez9176@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_lopez_9361",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Wilson'} and your email is mia.wilson7579@example.com. You are optimistic, flexible, confident, direct. Begin by getting user details for Ethan Lopez using his email ethan.lopez6235@example.com to retrieve his user ID and preferences. Once you have his user ID, search for available flights from LAX to JFK on his preferred dates. This will help us provide Ethan with the best travel options tailored to his preferences, ensuring a smooth booking process and enhancing his overall travel experience with our airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.lopez6235@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_martin_3393",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs5639@example.com. You are direct, organized. Book a reservation for user Olivia Martin from LAX to JFK on flight F123 with seat preference aisle.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_martin_3393", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_garcia_1932",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Anderson'} and your email is sofia.anderson9643@example.com. You are logical, polite, confident. First, use get_user_details with user email isabella.garcia5062@example.com to retrieve user ID and preferences. Next, use book_reservation with user ID U5678 and flight ID F1234 to reserve a seat for Isabella on her upcoming flight. Finally, use get_reservation_details with reservation ID R8901 to confirm the booking details for Isabella, ensuring her travel plans are accurately recorded and communicated.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.garcia5062@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_garcia_1932", "flight_id": "F1234"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R8901"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9268",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Li'} and your email is james.li5284@example.com. You are independent, polite. Get user details for Fatima Rossi using email fatima.rossi5152@example.com to retrieve user ID and preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5152@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_ahmed_2248",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Moore'} and your email is olivia.moore1716@example.com. You are polite, logical. Book a reservation for Fatima Ahmed on flight number AA101 using user ID and selected travel details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_ahmed_2248", "flight_number": "AA101", "passenger_name": "Fatima Ahmed"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_kovacs_1132",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Rossi'} and your email is lucas.rossi6938@example.com. You are cautious, organized, flexible. Retrieve user details for Ethan Kovacs using email ethan.kovacs3760@example.com to confirm user ID. Once confirmed, proceed to book a reservation for Ethan Kovacs on flight AA123 from JFK to LAX, ensuring seat preference and class selection are confirmed.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.kovacs3760@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_kovacs_1132", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_nguyen_6408",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez8734@example.com. You are cautious, flexible, polite, organized. First, retrieve user details for Lucas Nguyen using email lucas.nguyen9405@example.com to confirm user ID. Once confirmed, proceed to search for flights from airport ID A001 to airport ID A002 on 2023-11-25 for Lucas Nguyen. After identifying a suitable flight, book a reservation for Lucas Nguyen on flight ID F123 from airport ID A001 to airport ID A002 on 2023-11-25.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.nguyen9405@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_nguyen_6408", "flight_id": "F123", "departure_airport_id": "A001", "arrival_airport_id": "A002", "departure_date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_johnson_4945",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Jackson'} and your email is ava.jackson4706@example.com. You are logical, confident, cautious. First, retrieve user details for Evelyn Johnson using her email address evelyn.johnson2294@example.com to verify her identity. Once her identity is confirmed, search for available flights departing from JFK Airport to LAX Airport on December 15, 2023, for Evelyn Johnson. After identifying a suitable flight, proceed to book a reservation for Evelyn Johnson on flight F12345 departing from JFK to LAX on December 15, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.johnson2294@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "evelyn_johnson_4945"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_johnson_4945", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_silva_7958",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Li'} and your email is mia.li3308@example.com. You are confident, patient, organized. First, get user details for Aarav Silva using email aarav.silva8592@example.com to verify account information. Once verified, proceed to book a reservation for Aarav Silva on flight ID AA123 from LAX to JFK for the date 2024-05-15. Finally, check the flight status for flight ID AA123 on the departure day to ensure there are no delays, providing Aarav with timely updates for a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.silva8592@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_silva_7958", "flight_id": "AA123", "departure": "LAX", "destination": "JFK", "date": "2024-05-15"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "AA123", "date": "2024-05-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lopez_8334",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Jackson'} and your email is emma.jackson2892@example.com. You are direct, patient, independent, logical. Book reservation for user Daiki Lopez on flight ID F456 from airport ID A123. Once the reservation is confirmed, get reservation details for reservation ID R789 to confirm booking details for Daiki Lopez.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lopez_8334", "flight_id": "F456", "airport_id": "A123"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_kovacs_4904",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore2560@example.com. You are logical, flexible, polite, direct. First, get user details for Olivia Kovacs using email olivia.kovacs9948@example.com to verify identity and retrieve user ID. Once you have verified her identity and obtained her user ID, proceed to book a reservation for her on flight FL123 from airport A567 to airport A890 on 2023-11-20. After successfully booking the reservation, check Olivia Kovacs in for her reservation to ensure a smooth boarding process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.kovacs9948@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_kovacs_4904", "flight_number": "FL123", "departure_airport": "A567", "arrival_airport": "A890", "departure_date": "2023-11-20"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "olivia_kovacs_4904", "flight_number": "FL123", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_3174",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Davis'} and your email is amelia.davis1624@example.com. You are logical, independent, optimistic, flexible. Search for flights departing from airport ID A123 to the desired destination on the user's travel date. Once you have identified a suitable flight, book a reservation for Mason Johansson on flight F456, specifying his preference for an aisle seat and a vegetarian meal option.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johansson_3174", "flight_id": "F456", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_santos_3700",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Ito'} and your email is liam.ito5014@example.com. You are confident, optimistic, polite. Retrieve user details for Ava Santos using email ava.santos7003@example.com to confirm user ID. Once you have confirmed the user ID, search for available flights from JFK to LAX on December 15, 2023, for the user. This will ensure that Ava Santos can plan her travel efficiently and secure a suitable flight option.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.santos7003@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_lee_4334",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Ito'} and your email is mia.ito3567@example.com. You are direct, flexible. Book reservation for user anya.lee6655@example.com on flight FL123 with seat preference 'window'.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_lee_4334", "flight_number": "FL123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_johansson_6921",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Lee'} and your email is yara.lee7898@example.com. You are independent, optimistic, direct. Book a reservation for Yusuf Johansson on flight AA123 from JFK to LAX on 2023-11-15, and once the booking is confirmed, proceed to check-in Yusuf Johansson for the same flight, ensuring to select his seat preference if available.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_johansson_6921", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_johansson_6921", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_hernandez_9084",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Lopez'} and your email is ivan.lopez7081@example.com. You are organized, polite. First, get user details for Liam Hernandez to retrieve user ID and preferences. Once you have the user ID, list all airports to find nearby options for Liam Hernandez's travel plans. This will help in providing tailored travel recommendations and ensuring a smooth booking experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "liam_hernandez_9084"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_gonzalez_5087",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Gonzalez'} and your email is harper.gonzalez9176@example.com. You are optimistic, flexible, patient. Search for flights departing from LAX to JFK on December 15th, 2023 for Noah. Once you find a suitable option, proceed to book a reservation for Noah Gonzalez on the selected flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_gonzalez_5087", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15", "passenger_first_name": "Noah", "passenger_last_name": "Gonzalez"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_ahmed_9069",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Gonzalez'} and your email is ava.gonzalez5150@example.com. You are direct, patient, optimistic. Book a reservation for Sofia Ahmed on flight F1234 from LAX to JFK for the specified dates, ensuring all user preferences are met.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_ahmed_9069", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "passenger_name": {"first_name": "Sofia", "last_name": "Ahmed"}, "contact_email": "ava.gonzalez5150@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_khan_8728",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Lopez'} and your email is mei.lopez4337@example.com. You are direct, organized, flexible, cautious. First, use the get_user_details tool to retrieve the user ID for Amelia Khan (amelia.khan3954@example.com). Next, use the check_flight_status tool to find available flights from Amelia's nearest airport to her desired destination. Once you have identified a suitable flight, use the book_reservation tool to reserve a seat for Amelia on flight F1234 from her nearest airport to her destination.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "amelia.khan3954@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"user_id": "amelia_khan_8728", "origin": "nearest_airport", "destination": "desired_destination"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_khan_8728", "flight_number": "F1234", "origin": "nearest_airport", "destination": "desired_destination"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_khan_7943",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Johansson'} and your email is fatima.johansson8122@example.com. You are confident, cautious. Retrieve user details for Raj Khan using the email raj.khan6740@example.com to confirm his user ID. Once you have obtained the user ID, retrieve reservation details for Raj Khan's upcoming reservation. This information is crucial to ensure that all his travel arrangements are accurately recorded and any potential issues can be addressed proactively.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.khan6740@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "raj_khan_7943"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_davis_4349",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Nguyen'} and your email is lucas.nguyen9405@example.com. You are polite, flexible, cautious. Please search for available flights from JFK to LAX on date 2023-11-20 to find suitable travel options for user Ava Davis. Once you have identified a suitable flight, proceed to book a reservation for Ava Davis on flight F5678 from JFK to LAX on the same date, ensuring her seat preference is a window seat.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_davis_4349", "flight_number": "F5678", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_patel_3577",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Nguyen'} and your email is chen.nguyen2526@example.com. You are flexible, logical, polite. Search for available flights from JFK to LAX for Olivia Patel on October 15th, ensuring you find options that fit her schedule and preferences. Once you have identified the best flight option, proceed to book a reservation for Olivia Patel on flight F123 from JFK to LAX, including selecting her preferred seat and meal choice.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "olivia_patel_3577"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_date": "2023-10-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_patel_3577", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "seat_preference": "window", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_johnson_8493",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed2997@example.com. You are independent, logical, patient. First, retrieve user details for Omar Johnson using email omar.johnson8258@example.com to ensure you have the correct passenger information. Next, search for flights from JFK to LAX on 2023-11-15 for user Omar Johnson to find the most suitable travel options. Once you have identified the best flight, proceed to book a reservation for flight F1234 from JFK to LAX for user Omar Johnson, ensuring all booking details are accurately recorded.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.johnson8258@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "omar_johnson_8493"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_id": "F1234", "origin": "JFK", "destination": "LAX", "user_id": "omar_johnson_8493"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_4151",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Thomas'} and your email is mia.thomas9453@example.com. You are direct, confident. First, retrieve user details for Isabella Khan using email isabella.khan4289@example.com to verify user ID and preferences. Once verified, book a reservation for user ID U8901 on flight F1234 from airport A567 to destination D890, ensuring to include the user's seat preference and meal choice. Finally, send a confirmation email to isabella.khan4289@example.com with the reservation details and itinerary for reservation R6789, ensuring all information is accurate and complete for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.khan4289@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_khan_4151", "flight_id": "F1234", "departure_airport": "A567", "destination_airport": "D890", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R6789"}
            ),
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R6789", "action": "send_confirmation", "email": "isabella.khan4289@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_6400",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are independent, optimistic. First, get user details for Ethan Hernandez using email ethan.hernandez1785@example.com to retrieve user ID, which is essential for managing his travel arrangements. Once you have obtained the user ID, proceed to book a reservation for Ethan Hernandez using user ID U123 with departure airport A456, destination airport A789, and flight F1023. This will ensure Ethan's travel plans are confirmed, allowing him to prepare for his upcoming trip with confidence.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.hernandez1785@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_6400", "departure_airport": "A456", "destination_airport": "A789", "flight": "F1023"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johansson_4039",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ahmed'} and your email is amelia.ahmed2287@example.com. You are independent, logical. First, retrieve user details for Mei Johansson using email mei.johansson6451@example.com to ensure all personal information is accurate. Next, book a reservation for Mei Johansson on flight F1234 from JFK to LAX on November 15th, 2023, ensuring her travel plans are confirmed. Finally, update Mei's reservation to include a special meal request for vegetarian options, catering to her dietary preferences and enhancing her travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johansson6451@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johansson_4039", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "mei_johansson_4039", "special_request": "vegetarian meal"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_davis_6741",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Martin'} and your email is noah.martin7075@example.com. You are optimistic, patient. First, get user details using user email yara.davis9842@example.com to retrieve user ID and preferences. Once you have the user ID and preferences, list all airports to find the closest airport for user Yara Davis. This will help ensure her travel plans are as convenient as possible, enhancing her overall experience with our airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yara.davis9842@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_taylor_4937",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Kovacs'} and your email is lei.kovacs5832@example.com. You are flexible, direct. Book a reservation for Amelia Taylor on flight F123 from JFK to LAX on 2023-11-15 in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_taylor_4937", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_hernandez_2149",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Brown'} and your email is mohamed.brown5678@example.com. You are patient, organized, polite. Retrieve user details for Mia Hernandez using email mia.hernandez5840@example.com to confirm user ID, then use this information to book a reservation for Mia Hernandez on Flight F123 from JFK to LAX on October 15th, seating in business class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mia.hernandez5840@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_hernandez_2149", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "class": "business"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_johansson_5154",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson6900@example.com. You are optimistic, polite, direct, cautious. First, search for available flights from JFK to LAX on 2023-11-15 for user Mason Johansson with the flexible dates option enabled to find the best possible travel options. Once you have identified a suitable flight, proceed to book a reservation for user Mason Johansson on flight F1234, selecting a window seat in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mason_johansson_5154"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"origin": "JFK", "destination": "LAX", "date": "2023-11-15", "flexible_dates": True}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_johansson_5154", "flight_number": "F1234", "seat_preference": "window", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_brown_7405",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Johansson'} and your email is anya.johansson3480@example.com. You are optimistic, flexible, organized, logical. First, get user details for Juan Brown using email juan.brown5591@example.com to retrieve the user ID. Once you have the user ID, proceed to search for available flights from LAX to JFK on the specific travel dates provided by Juan. This will help ensure that Juan can plan his trip efficiently and make informed decisions about his travel itinerary.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.brown5591@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_khan_9070",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs5639@example.com. You are cautious, optimistic. Book a flight reservation for user Evelyn Khan from JFK to LAX on December 15, 2023, with flight number AA123.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_khan_9070", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_khan_1074",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Davis'} and your email is mei.davis8487@example.com. You are patient, logical, organized, confident. Search for available flights from airport 'JFK' to 'LAX' on the desired travel date for Anya. Once you find a suitable option, book a reservation for Anya on flight F123 from 'JFK' to 'LAX' using the user ID obtained from her user details.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "user_id": "anya_khan_1074"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_taylor_7043",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johansson'} and your email is mei.johansson6451@example.com. You are organized, patient. Use the book_reservation tool to book a flight for James Taylor from JFK to LAX on flight AA123, specifying his seat preference as an aisle seat and his meal choice as vegetarian. Once the reservation is made, get the reservation details for James Taylor to confirm the booking confirmation number and other essential details, ensuring everything is accurately recorded for his upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_taylor_7043", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "james_taylor_7043"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_1941",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Rossi'} and your email is omar.rossi5980@example.com. You are logical, polite, flexible, cautious. First, retrieve user details for Fatima Rossi using email fatima.rossi5024@example.com to confirm her identity. Once her identity is confirmed, proceed to book a reservation for Fatima Rossi on flight AL123 from JFK to LAX on November 15, 2023, and save the booking ID as BR5678. After successfully booking the flight, get the reservation details for booking ID BR5678 to confirm the flight time and seat assignment, ensuring all information is accurate for her upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.rossi5024@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_1941", "flight_number": "AL123", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15", "booking_id": "BR5678"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"booking_id": "BR5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_garcia_3316",
        instruction="Your name is {'first_name': 'Emma', 'last_name': 'Kim'} and your email is emma.kim1896@example.com. You are cautious, flexible. First, get_user_details for user Raj Garcia using email raj.garcia9382@example.com to retrieve their user ID. Once you have the user ID, proceed to book_reservation for Raj Garcia with flight ID AA1234, traveling from LAX to JFK on 2023-10-15, ensuring a window seat preference is selected. This sequence ensures Raj's travel plans are set up efficiently, maintaining high customer satisfaction and smooth operational flow for the airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.garcia9382@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_garcia_3316", "flight_id": "AA1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-10-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_li_9671",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Moore'} and your email is fatima.moore5533@example.com. You are direct, logical, flexible. Use book_reservation with user ID U5678, flight ID F1234, and seat preference \"Aisle\" to book a ticket for Juan.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_li_9671", "flight_id": "F1234", "seat_preference": "Aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_wilson_9692",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Kovacs'} and your email is olivia.kovacs3528@example.com. You are optimistic, cautious, independent, flexible. First, check the flight status for flight F123 from JFK to LAX on 2023-11-25 to find availability, ensuring that the flight is operating as scheduled and has seats available. Once confirmed, proceed to book a reservation for user ID U001 on the same flight to secure a spot for the upcoming trip.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-25"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_wilson_9692", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-25"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_7450",
        instruction="Your name is {'first_name': 'Fatima', 'last_name': 'Silva'} and your email is fatima.silva5101@example.com. You are cautious, patient, polite, flexible. First, use book_reservation for user ID U002 with flight number AA123 on 2023-11-20 from LAX to JFK to ensure the user has a confirmed seat for their upcoming trip. Once the reservation is confirmed, proceed to use check_in for reservation ID R56789 to complete Mason's check-in process. This will ensure Mason has a smooth boarding experience by having his boarding pass ready in advance.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_7450", "flight_number": "AA123", "date": "2023-11-20", "departure": "LAX", "arrival": "JFK"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R56789", "user_id": "mason_lee_7450"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_brown_8513",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Martin'} and your email is evelyn.martin3593@example.com. You are patient, flexible, optimistic. Retrieve user details for Evelyn Brown using her email, evelyn.brown2248@example.com, to confirm identity and gather user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.brown2248@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_rossi_4467",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Taylor'} and your email is liam.taylor5916@example.com. You are independent, optimistic, confident, organized. Retrieve user details for Daiki Rossi using email daiki.rossi1310@example.com to confirm user ID. Once confirmed, proceed to book a reservation for user ID U789 on flight ID F123 from airport ID AP001 to airport ID AP002 on 2023-12-15. Ensure the booking is completed accurately to facilitate a smooth travel experience for the user.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "daiki.rossi1310@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_rossi_4467", "flight_id": "F123", "from_airport_id": "AP001", "to_airport_id": "AP002", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_moore_2080",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Silva'} and your email is sophia.silva5929@example.com. You are polite, optimistic, confident. Please search for available flights from JFK to LAX for Olivia Moore, who intends to travel on March 15th. Once you find a suitable flight, proceed to book a reservation for Olivia Moore on flight F123 from JFK to LAX, ensuring to select her preferred seating. After the reservation is confirmed, check the flight status for flight F123 to confirm the departure and arrival times, ensuring all details are accurate for a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_moore_2080", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2024-03-15", "passenger_name": "Olivia Moore", "preferred_seating": "window"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yara_davis_6741",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Johnson'} and your email is daiki.johnson3136@example.com. You are confident, polite. First, get reservation details for R2345 to retrieve Yara's boarding pass information. Once you have confirmed the boarding pass details, proceed to check in Yara Davis for Reservation ID R2345 to ensure she is ready to board.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R2345"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R2345", "user_id": "yara_davis_6741"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_jackson_7027",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Taylor'} and your email is sofia.taylor9399@example.com. You are organized, logical. First, book a reservation for Noah Jackson on flight number AA123 from LAX to JFK on 2023-11-15 with a seat preference for a window. Once the reservation is confirmed, check in for Noah Jackson on the same flight to secure his boarding pass and seat, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_jackson_7027", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "noah_jackson_7027", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_silva_9292",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Khan'} and your email is raj.khan4061@example.com. You are direct, organized, cautious, patient. First, retrieve user details for Ivan Silva using email ivan.silva1323@example.com to confirm user ID, ensuring the accuracy of our records. Next, proceed to book a reservation for user ID U789 on flight ID F456 from airport ID A123 to destination airport ID A789 on 2023-11-15, ensuring all travel details are correct and confirmed. Finally, check-in user ID U789 for flight ID F456 using reservation ID R1012 to receive the boarding pass, facilitating a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.silva1323@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_silva_9292", "flight_id": "F456", "from_airport_id": "A123", "to_airport_id": "A789", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ivan_silva_9292", "flight_id": "F456", "reservation_id": "R1012"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_thomas_7802",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Muller'} and your email is isabella.muller7926@example.com. You are polite, independent, cautious. Search for flights from Yusuf Thomas's departure airport to his desired destination, ensuring that you consider his preferred travel dates and any specific requirements he may have. Once you have identified the most suitable flight option, proceed to book a reservation for Yusuf Thomas on the selected flight using his user ID. Make sure to confirm all details thoroughly to ensure accuracy and satisfaction.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "yusuf_thomas_7802"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "Yusuf's Departure Airport Code"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "Yusuf's Destination Airport Code"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_thomas_7802", "flight_id": "Selected Flight ID", "seat_preference": "Yusuf's Seat Preference", "meal_preference": "Yusuf's Meal Preference"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_rossi_9652",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6819@example.com. You are polite, cautious, patient. Book reservation for user Fatima Rossi on Flight ID F123 from Airport ID A567 to Airport ID A890 on date 2023-11-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_rossi_9652", "flight_id": "F123", "from_airport_id": "A567", "to_airport_id": "A890", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_anderson_6815",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Johnson'} and your email is chen.johnson6896@example.com. You are independent, direct, cautious. Book_reservation for user ID retrieved earlier on flight F123 from JFK to LAX with specific seat preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_anderson_6815", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_ahmed_3737",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Martin'} and your email is daiki.martin3456@example.com. You are direct, flexible, organized. Search for flights from JFK Airport to LAX Airport departing on 2023-12-15 to find suitable travel options for Omar Ahmed. Once a suitable flight is identified, book a reservation for Omar Ahmed on flight F12345 from JFK to LAX on 2023-12-15, ensuring seat selection and meal preferences are confirmed.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_ahmed_3737", "flight_number": "F12345", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "seat_selection": "12A", "meal_preference": "Vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_4931",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Khan'} and your email is anya.khan3991@example.com. You are polite, patient, cautious, organized. First, use the get_user_details tool to retrieve the user ID for Mei Johnson using her email mei.johnson6054@example.com. Once you have obtained the user ID, proceed to use the book_reservation tool to book a flight for this user from JFK to LAX on flight F123 departing on 2023-12-15. This sequence ensures that Mei Johnson's travel arrangements are confirmed efficiently and accurately.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johnson6054@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_khan_1074",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Wilson'} and your email is ivan.wilson5573@example.com. You are logical, independent, flexible, optimistic. Search for flights from JFK Airport to LAX Airport on December 15, 2023, for Anya Khan, then proceed to book a reservation for her on flight F123 with a preference for a window seat. Ensure that the booking aligns with her travel schedule and preferences, facilitating a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "anya_khan_1074"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"location": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_khan_1074", "flight_number": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_khan_2521",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Davis'} and your email is sophia.davis4814@example.com. You are confident, independent, flexible. Book a reservation for Liam Khan on flight F67890 departing on 2023-12-01 from JFK to LAX. Then, check in for Liam Khan's flight F67890 using reservation ID R98766 to receive the boarding pass. This will ensure that all travel arrangements are confirmed and that Liam has a smooth check-in process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_khan_2521", "flight_number": "F67890", "departure_date": "2023-12-01", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_first_name": "Liam", "passenger_last_name": "Khan"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "liam_khan_2521", "reservation_id": "R98766"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_lopez_2185",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Khan'} and your email is omar.khan1438@example.com. You are organized, patient, independent, direct. Book a new reservation for Isabella Lopez from JFK to LAX on flight number AA123 for the travel date 2023-12-15.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_lopez_2185", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "travel_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_1489",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Kovacs'} and your email is ethan.kovacs1120@example.com. You are direct, logical. First, retrieve user details for Harper Lopez using email harper.lopez8439@example.com to confirm user ID. Once confirmed, proceed to book a reservation for Harper Lopez on flight F9876 from LAX to JFK, specifying a window seat preference. This sequence ensures that Harper's user ID is verified before securing her preferred seating on the flight, enhancing her travel experience with our airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.lopez8439@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_lopez_1489", "flight_number": "F9876", "departure": "LAX", "arrival": "JFK", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_davis_9362",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Ahmed'} and your email is evelyn.ahmed7132@example.com. You are optimistic, independent, flexible. Book reservation for Mei Davis on flight AA123 from LAX to JFK on 2023-11-15 with seat preference 'Window'",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_davis_9362", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "Window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_lopez_9361",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Silva'} and your email is mia.silva5793@example.com. You are flexible, cautious, independent, optimistic. First, retrieve user details for Ethan Lopez using the email ethan.lopez6235@example.com to confirm his user ID. Once you have confirmed his user ID, proceed to book a reservation for Ethan Lopez on flight AA123 from JFK to LAX on October 15, 2023. After successfully booking the reservation, check in Ethan Lopez for flight AA123 to secure his seat and obtain a boarding pass, ensuring a smooth travel experience for him.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.lopez6235@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_lopez_9361", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ethan_lopez_9361", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_davis_2143",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Davis'} and your email is harper.davis7823@example.com. You are optimistic, independent, cautious. First, retrieve user details for Isabella Davis using her email isabella.davis7889@example.com to confirm her identity and gather necessary information. Once her identity is confirmed and you have her user ID, proceed to book a reservation for Isabella Davis on Flight F1234 from New York (JFK) to Los Angeles (LAX) on December 15, 2023, using her user ID U001.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.davis7889@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_davis_2143", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_wilson_8288",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Ahmed'} and your email is sofia.ahmed2997@example.com. You are direct, patient, logical. First, search for flights departing from JFK airport to LAX airport on 2023-12-15 for Amelia Wilson to find the best available options. Once you have identified a suitable flight, proceed to book a reservation for her on flight F1234 departing from JFK to LAX on the same date. Ensure all details are accurately recorded to facilitate a smooth booking process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "amelia_wilson_8288"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_wilson_8288", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_muller_9002",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Sanchez'} and your email is omar.sanchez8001@example.com. You are logical, direct, organized, polite. Book reservation for user Sophia Muller on flight AA123 from JFK to LAX on 2023-10-15, specifying seat preference as window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_muller_9002", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-10-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_garcia_1794",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Smith'} and your email is james.smith6775@example.com. You are logical, flexible, direct. First, get reservation details for reservation ID R56789 to confirm booking details for Ivan Garcia, ensuring all information is accurate and up-to-date. Once confirmed, proceed to check in for reservation ID R56789 to secure his seat and receive the boarding pass, ensuring a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R56789"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R56789", "user_id": "ivan_garcia_1794"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_sanchez_7079",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Ito'} and your email is isabella.ito7126@example.com. You are optimistic, direct, flexible, polite. Search for flights from JFK to LAX on 2023-11-15 to find options for Raj Sanchez. Once you have identified a suitable flight, proceed to book a reservation for user Raj Sanchez with flight ID F1234 from JFK to LAX.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_sanchez_7079", "flight_id": "F1234", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_rossi_8135",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Jackson'} and your email is sophia.jackson7991@example.com. You are patient, independent, logical, direct. First, book a reservation for user chen.rossi4494@example.com on flight F1234 from JFK to LAX on 2023-11-20. Once the booking is confirmed, retrieve the reservation details to ensure the flight F1234 booking is accurate and all necessary information is correct. Finally, check in user chen.rossi4494@example.com for flight F1234 on 2023-11-20 to streamline their travel experience and ensure they are ready for departure.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_rossi_8135", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "chen_rossi_8135", "flight_number": "F1234", "departure_date": "2023-11-20"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "chen_rossi_8135", "flight_number": "F1234", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_ahmed_8438",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Sanchez'} and your email is sofia.sanchez3601@example.com. You are direct, patient. Search for flights from JFK to LAX for Evelyn Ahmed on the specified travel dates, ensuring to find options that align with her schedule and preferences. Once a suitable flight is identified, book a reservation for Evelyn Ahmed on flight F1234 with selected seat 12A. After securing the reservation, send a confirmation email to evelyn.ahmed7132@example.com with all the reservation details, including flight itinerary, seat assignment, and any additional information she may need for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_ahmed_8438", "flight_number": "F1234", "seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_li_5039",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Rossi'} and your email is yara.rossi1917@example.com. You are logical, direct, flexible, organized. Book a reservation for Daiki on Flight JL123 with a seat preference for the window using the user ID and verified details. Once the reservation is confirmed, check in Daiki for Flight JL123 using the booking reference and user ID to receive the boarding pass. This ensures Daiki has a confirmed seat and all necessary travel documents for the flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"flight_number": "JL123", "user_id": "daiki_li_5039", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"booking_reference": "BR123456", "user_id": "daiki_li_5039"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_anderson_1185",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Gonzalez'} and your email is noah.gonzalez5162@example.com. You are logical, direct, polite, flexible. Book reservation for Omar Anderson with user ID U001 for flight AA123 from JFK to LAX on 2023-11-15, seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_anderson_1185", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_7287",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Gonzalez'} and your email is yusuf.gonzalez6753@example.com. You are logical, patient, direct, cautious. Retrieve user details for Sofia Kim using her email sofia.kim1937@example.com to confirm her user ID, as this is necessary for booking her flight. Once you have confirmed her user ID, proceed to book a reservation for Sofia Kim from LAX to JFK on flight F1234 using her user ID. After successfully booking the reservation, get the reservation details for Sofia Kim's booking to confirm the flight details and seat assignment, ensuring everything is in order for her upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_7287", "flight_number": "F1234", "departure": "LAX", "destination": "JFK"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "sofia_kim_7287"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_brown_8416",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs5639@example.com. You are cautious, flexible, polite. Please book a reservation for Yusuf Brown on flight AA123 from JFK to LAX on 2023-11-15, with a seat preference for a window. After securing the reservation, update Yusuf Brown’s booking to include a vegetarian meal option to ensure dietary preferences are accommodated during the flight.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_brown_8416", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "yusuf_brown_8416", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_muller_3268",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown8989@example.com. You are independent, cautious, patient. First, Get_user_details for user Mia Muller to retrieve user ID and contact information for reservation purposes. Once you have obtained the necessary details, proceed to Book_reservation for user ID U5678 on flight F2023 from airport A101 to A202 with seat preference and special meal request. This will ensure Mia Muller has a confirmed seat and meal on her upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "mia_muller_3268"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_muller_3268", "flight_id": "F2023", "departure_airport": "A101", "arrival_airport": "A202", "seat_preference": "window", "special_meal_request": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_7287",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Patel'} and your email is mei.patel5375@example.com. You are confident, optimistic, organized. First, get user details for Sofia Kim using email sofia.kim1937@example.com to ensure all necessary information is accurate and up-to-date. Then, proceed to book a reservation for Sofia Kim on flight number AA123 from JFK to LAX on 2023-11-15, ensuring her travel plans are confirmed and all preferences are noted.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.kim1937@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_7287", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_rossi_9663",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown1288@example.com. You are cautious, logical, organized, polite. First, retrieve user details for Aarav Rossi using email aarav.rossi8016@example.com to confirm identity. Once his identity is confirmed, proceed to search for flights departing from JFK to Los Angeles International Airport (LAX) on November 20, 2023. After identifying a suitable flight, book a reservation for Aarav Rossi on flight F1234 from JFK to LAX with his preferred seat selection.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.rossi8016@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "aarav_rossi_9663"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_rossi_9663", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_moore_2925",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Brown'} and your email is chen.brown1849@example.com. You are direct, organized, cautious. First, book a reservation for user ID U567 for flight AA123 from JFK to LAX on 2023-11-15 with a seat preference for a window. Once the reservation is confirmed, get the reservation details for reservation ID R890 to verify the booking details and obtain the confirmation number. After ensuring all details are correct, proceed to calculate the baggage fee for 2 checked bags on reservation ID R890 to ensure the correct payment is processed.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_moore_2925", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R890"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R890", "baggage_count": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_lopez_2390",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Taylor'} and your email is sofia.taylor9399@example.com. You are direct, confident, logical, optimistic. Use get_user_details with email harper.lopez7272@example.com to retrieve Harper Lopez's user ID. Then, use book_reservation with the user ID obtained from the previous step, flight number AA1001, and preferred seating class 'Economy' to book a flight for Harper.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.lopez7272@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_lopez_2390", "flight_number": "AA1001", "seating_class": "Economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_taylor_8420",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li3866@example.com. You are patient, independent, flexible. First, get user details for Sofia Taylor using her email sofia.taylor9399@example.com to retrieve her user ID. Next, search for flights from JFK International Airport to LAX International Airport on December 15, 2023, for Sofia Taylor. Once you have identified a suitable flight, book a reservation for Sofia Taylor on Flight F1234 from JFK to LAX on December 15, 2023, using the user ID retrieved earlier.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sofia.taylor9399@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_taylor_8420", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_4931",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Johnson'} and your email is harper.johnson9867@example.com. You are confident, direct. First, retrieve user details for Mei Johnson using email mei.johnson6054@example.com to ensure her information is up-to-date in our system. Next, search for flights departing from JFK to LAX on 2023-11-15 to find available options that suit her travel needs. Once you have identified a suitable flight, proceed to book a reservation for Mei Johnson on flight F123 from JFK to LAX, selecting seat 12A, to secure her preferred seating.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johnson6054@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_thomas_9373",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Khan'} and your email is liam.khan7273@example.com. You are independent, patient, optimistic, polite. Book reservation for Lucas Thomas on flight F1234, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_thomas_9373", "flight_number": "F1234", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_anderson_4579",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Taylor'} and your email is mei.taylor3805@example.com. You are confident, patient. First, get user details for Evelyn Anderson using email evelyn.anderson3204@example.com to verify user ID for further actions. Once verified, search for flights from JFK to Los Angeles International Airport (LAX) on Evelyn's preferred travel date to ensure availability and suitable options. After confirming the flight details, proceed to book a reservation for user ID U5678 on flight F1234 from JFK to LAX, considering her seat preference and meal choice, to complete the booking process efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "evelyn.anderson3204@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_anderson_4579", "flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_muller_9847",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Taylor'} and your email is amelia.taylor3833@example.com. You are direct, confident. First, retrieve user details for Noah Muller using email noah.muller2290@example.com to ensure all information is accurate and up-to-date. Then, proceed to book a reservation for Noah Muller on flight F1234 from JFK to LAX on 2023-11-15. This sequence ensures that we have the correct passenger details before confirming the flight reservation, maintaining a seamless booking process for our valued customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.muller2290@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_muller_9847", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_ahmed_3350",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Lee'} and your email is lucas.lee9489@example.com. You are logical, optimistic, polite, confident. Search for flights from JFK Airport to LAX Airport on December 20th, 2023, for Mohamed Ahmed. Once you have identified a suitable flight, get details of flight F12345 to check availability and pricing for Mohamed. If the flight meets Mohamed's requirements, proceed to book a reservation for Mohamed Ahmed with user ID U5678 on flight F12345, including seat selection and meal preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_ahmed_3350", "flight_number": "F12345", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_davis_7802",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Johnson'} and your email is liam.johnson5509@example.com. You are patient, logical, cautious. First, retrieve user details for James Davis using email james.davis1376@example.com to confirm identity before proceeding with booking. Once identity is confirmed, search for available flights from JFK to LAX on 2023-11-15 for user James Davis to find suitable travel options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.davis1376@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "james_davis_7802"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="liam_smith_7267",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Garcia'} and your email is yara.garcia6882@example.com. You are cautious, patient. book_reservation for User: Liam Smith (liam.smith3091@example.com) from JFK to LAX on 2023-11-15, flight F456, seat 12A, class economy",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "liam_smith_7267", "flight_number": "F456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat": "12A", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_johnson_9800",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Rossi'} and your email is chen.rossi4494@example.com. You are flexible, cautious, patient, polite. Use `book_reservation` for Ethan (ethan.johnson7828@example.com) on flight F1234 with seat preference 'Aisle'.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_johnson_9800", "flight_number": "F1234", "seat_preference": "Aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_garcia_1794",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Johansson'} and your email is ivan.johansson7034@example.com. You are flexible, independent. Retrieve user details for Ivan Garcia using email ivan.garcia1055@example.com to confirm identity and retrieve user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.garcia1055@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_ito_5790",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Rossi'} and your email is noah.rossi9901@example.com. You are organized, confident. Search for flights from Tokyo Haneda Airport to Los Angeles International Airport departing on 2023-11-15 for Lei Ito to find the best available options. Once you have identified a suitable flight, book a reservation for Lei Ito on flight F1234 with a preference for a window seat to ensure comfort during the journey. After booking, get the reservation details for Lei Ito to confirm the booking on flight F1234, ensuring all information is accurate and the seat preference is honored.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_ito_5790", "flight_number": "F1234", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lei_ito_5790", "flight_number": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_kim_3844",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Li'} and your email is isabella.li1262@example.com. You are logical, cautious. First, retrieve user details for Ivan Kim using email ivan.kim8149@example.com to verify the user ID for reservation purposes. Once the user ID is confirmed, proceed to search for available flights from New York (JFK) to Los Angeles (LAX) on December 10, 2023, ensuring the user ID associated with ivan.kim8149@example.com is used. Upon finding a suitable flight, book a reservation for the user on flight F1234 departing from JFK to LAX on December 10, 2023, ensuring all details are accurately recorded for the airline's booking system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ivan.kim8149@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_kim_3844", "flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_kovacs_3082",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Kovacs'} and your email is yusuf.kovacs8968@example.com. You are optimistic, logical, organized, flexible. First, get user details for Harper Kovacs using email harper.kovacs2607@example.com to ensure accurate passenger information is on file. Next, search for flights from JFK to LAX on December 15, 2023, for Harper Kovacs to find the most suitable travel options. Finally, book a reservation for Harper Kovacs on flight F1234 from JFK to LAX on December 15, 2023, securing their travel plans efficiently.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.kovacs2607@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "user_id": "harper_kovacs_3082"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_thomas_8446",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Ito'} and your email is mei.ito9153@example.com. You are optimistic, direct, cautious, flexible. First, retrieve user details for Mei Thomas using email mei.thomas3105@example.com to confirm identity. Once confirmed, search for flights from JFK to LAX on the specific date 2023-11-15 for Mei Thomas. After identifying the available options, proceed to book a reservation for Mei Thomas on flight F123 from JFK to LAX on 2023-11-15 with a seat preference for a window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.thomas3105@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_thomas_8446", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_rossi_7216",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Ito'} and your email is liam.ito7299@example.com. You are independent, optimistic, flexible. First, get the user details for Sophia Rossi using the email sophia.rossi9619@example.com to retrieve her user ID and preferences. Once you have her user ID, proceed to check in for reservation ID R456 to secure her boarding pass. This will ensure that Sophia Rossi has a smooth travel experience by confirming her seat and preferences on her upcoming flight.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "sophia.rossi9619@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R456", "user_id": "sophia_rossi_7216"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_martin_8571",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Li'} and your email is harper.li7659@example.com. You are independent, patient, polite. Retrieve user details for Emma Martin using email emma.martin1739@example.com to confirm user ID. Once the user ID is confirmed, get reservation details for this user ID to check any existing bookings. This will help ensure that any new reservations do not conflict with existing plans, maintaining a smooth travel experience for Emma Martin.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "emma.martin1739@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "emma_martin_8571"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_kim_9822",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Patel'} and your email is mohamed.patel6819@example.com. You are confident, direct, patient. Retrieve user details for Raj Kim using email raj.kim6179@example.com to confirm user ID and preferences. Once confirmed, book reservation for user ID U123 with flight F4567, including seat preference and meal options. This task ensures that Raj Kim's travel preferences are accurately recorded and that the booking process is streamlined, providing a seamless experience for the customer.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.kim6179@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_kim_9822", "flight_id": "F4567", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_jackson_1850",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Brown'} and your email is ava.brown2670@example.com. You are cautious, optimistic, flexible. Begin by booking a reservation for Harper Jackson on Flight F1234 from Airport A567 to Airport B890 on 2023-12-15 with a seat preference for a window. Once the reservation is confirmed, retrieve the reservation details to confirm the booking ID and travel itinerary, ensuring all information is accurate and complete. Finally, check in Harper Jackson for Flight F1234 using the confirmed booking ID to secure the boarding pass and seat assignment, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_jackson_1850", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "B890", "departure_date": "2023-12-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "harper_jackson_1850", "flight_number": "F1234", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_jackson_1850", "booking_id": "CONFIRMED_BOOKING_ID"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_rossi_1297",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Ahmed'} and your email is evelyn.ahmed7132@example.com. You are direct, optimistic, flexible. \"Book reservation for Amelia Rossi from JFK to LAX on flight F123 departing 2023-11-15\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_rossi_1297", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_li_2415",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Rossi'} and your email is sophia.rossi9619@example.com. You are optimistic, flexible, organized. Search for flights departing from JFK Airport on 2023-12-15 to determine available options for Amelia Li. Once you have identified a suitable option, proceed to book a reservation for Amelia Li on flight F1234 departing from JFK to LAX on 2023-12-15 in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_li_2415", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_garcia_4690",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Taylor'} and your email is james.taylor4788@example.com. You are independent, direct, patient, logical. First, retrieve user details for Raj Garcia using email raj.garcia3173@example.com to verify his identity and gather necessary information. Next, list all available airports to find suitable departure and destination options for Raj, ensuring that the selected airports are convenient and align with his travel plans. Finally, book a reservation for Raj Garcia on flight F789 from airport ID A123 to A456, making sure to include his seat preferences and any special requests he might have, such as dietary needs or additional assistance.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "raj.garcia3173@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_garcia_4690", "flight_id": "F789", "departure_airport_id": "A123", "destination_airport_id": "A456", "seat_preferences": "aisle", "special_requests": "vegetarian meal, wheelchair assistance"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_6762",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Nguyen'} and your email is amelia.nguyen8380@example.com. You are flexible, logical, patient, direct. First, retrieve user details for Yusuf Kovacs using email yusuf.kovacs8968@example.com to confirm identity and gather user ID. Once verified, proceed to book a reservation for Yusuf Kovacs on flight F123 from JFK to LAX, selecting seat 12A in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.kovacs8968@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_6762", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_number": "12A", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_gonzalez_8223",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johnson'} and your email is mason.johnson4736@example.com. You are polite, logical, cautious. First, please get_user_details for user Ivan Gonzalez (ivan.gonzalez2763@example.com) to retrieve user ID and current reservation details. Next, use the retrieved user ID to book_reservation on flight F1234 from airport A5678 to destination airport A9012 for the date 2023-11-25. After booking, get_reservation_details for the newly created reservation to verify all booking information and special requests for user ID U1234, ensuring that everything is accurate and complete for the upcoming travel.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "ivan_gonzalez_8223"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ivan_gonzalez_8223", "flight_number": "F1234", "departure_airport": "A5678", "destination_airport": "A9012", "date": "2023-11-25"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ivan_gonzalez_8223"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_silva_6452",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Li'} and your email is noah.li3866@example.com. You are patient, confident, polite, cautious. First, check the flight status for Flight F789 to New York departing on 2023-11-15 for updated departure time to ensure the schedule is on track. Next, book a reservation for user U123 on Flight F789 from Los Angeles to New York on 2023-11-15 with a seat preference of window, ensuring all details align with the user's preferences. Finally, calculate the cost for additional baggage for Reservation R345, including 2 extra bags, to provide the user with a complete overview of their travel expenses.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_silva_6452", "flight_number": "F789", "departure_city": "Los Angeles", "arrival_city": "New York", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="calculate",
                kwargs={"reservation_id": "R345", "extra_bags": 2}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_brown_8516",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Lopez'} and your email is ethan.lopez6235@example.com. You are patient, cautious, logical. First, book a reservation for Amelia Brown from JFK to LAX on 2023-12-01 with an aisle seat preference. After securing the reservation, calculate the total cost for Amelia's reservation, including applicable taxes and fees, to ensure she is aware of the full amount due.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_brown_8516", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01", "seat_preference": "aisle"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "amelia_brown_8516"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_lopez_2996",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Garcia'} and your email is anya.garcia8816@example.com. You are flexible, organized, logical. Book reservation for James Lopez on flight F789 from LAX to JFK, including seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_lopez_2996", "flight_number": "F789", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_rossi_9391",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Ahmed'} and your email is daiki.ahmed9601@example.com. You are organized, direct, cautious, patient. First, get user details for Lucas Rossi using email lucas.rossi6938@example.com to retrieve his user ID. Once you have the user ID, proceed to get reservation details for this user ID to verify his current bookings. This will help ensure there are no conflicting reservations before proceeding with any new bookings.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.rossi6938@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_rossi_9391"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_martin_3083",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Johansson'} and your email is mason.johansson3750@example.com. You are direct, optimistic, cautious, confident. Book a reservation for Noah Martin on the selected flight, ensuring all necessary passenger details are included.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_martin_3083", "passenger_details": {"first_name": "Noah", "last_name": "Martin", "contact_email": "noah.martin@example.com"}, "flight_id": "FL1234", "seat_preference": "aisle", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_rossi_7264",
        instruction="Your name is {'first_name': 'Olivia', 'last_name': 'Moore'} and your email is olivia.moore1716@example.com. You are independent, polite, flexible, organized. Retrieve user details for Juan Rossi using email juan.rossi3718@example.com to confirm his identity for booking. Once confirmed, book a reservation for Juan Rossi on flight F789 from the selected departure airport to the chosen destination on his preferred date. After the reservation is successfully made, proceed to check-in Juan Rossi for his flight using the reservation ID to secure his seat and issue a boarding pass.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.rossi3718@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_rossi_7264", "flight_number": "F789", "departure_airport": "selected_departure_airport", "destination": "chosen_destination", "date": "preferred_date"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "juan_rossi_7264", "reservation_id": "reservation_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_sanchez_5251",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Lopez'} and your email is daiki.lopez3534@example.com. You are logical, independent, confident. Use the `book_reservation` tool to book a flight from \"JFK\" to \"LAX\" for user Anya Sanchez with a flexible return date. Once the reservation is confirmed, use the `get_reservation_details` tool to confirm the booking details for reservation ID \"RES4567\" made by Anya Sanchez. This will ensure that all travel arrangements are accurate and meet her requirements for an upcoming business trip.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_sanchez_5251", "departure_airport": "JFK", "arrival_airport": "LAX", "return_date": "flexible"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "RES4567"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_brown_4047",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Moore'} and your email is mohamed.moore7778@example.com. You are patient, logical, independent, flexible. Book reservation for Lucas Brown on flight F1234 from LAX to JFK, specifying seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_brown_4047", "flight_number": "F1234", "departure": "LAX", "destination": "JFK", "seat_preference": "aisle", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_hernandez_8041",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Gonzalez'} and your email is yusuf.gonzalez6753@example.com. You are organized, optimistic, patient. Search for flights from LAX to JFK on 2023-11-15 to find available options for Ethan. Once you have identified a suitable flight, proceed to book a reservation for Ethan Hernandez on flight F12345 from LAX to JFK on 2023-11-15 with a window seat preference. This will ensure that Ethan has a confirmed booking for his business trip, aligning with his travel schedule and seating preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_hernandez_8041", "flight_number": "F12345", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_johansson_1855",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Nguyen'} and your email is ethan.nguyen9209@example.com. You are polite, optimistic, flexible, organized. Please begin by booking a reservation for user Anya Johansson on flight AA100 from JFK to LAX, in economy class, with an aisle seat preference. Once the reservation is successfully made, proceed to get the reservation details to confirm the booking and ensure all information is accurate. Finally, check in Anya Johansson for flight AA100, selecting seat 14C to accommodate her aisle preference, ensuring a smooth travel experience for her on October 15, 2023.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "class": "economy", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "AA100"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "AA100", "seat_number": "14C", "date": "2023-10-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_martin_3587",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Wilson'} and your email is yara.wilson5847@example.com. You are logical, cautious. Retrieve user details for Isabella Martin using email isabella.martin5652@example.com to confirm identity. Once confirmed, proceed to check-in Isabella Martin for Flight F1234 using reservation C56789 to secure her boarding pass. After check-in, get airport information for JFK to find terminal and gate details for Flight F1234, ensuring Isabella has all necessary information for a smooth boarding process.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.martin5652@example.com"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "isabella_martin_3587", "reservation_code": "C56789", "flight_number": "F1234"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_9671",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Brown'} and your email is raj.brown6519@example.com. You are confident, polite, direct, patient. Retrieve user details for Aarav Lee using email aarav.lee2966@example.com to verify user ID and preferences. Once you have confirmed Aarav Lee's user ID and preferences, list all airports to select a departure and destination airport for Aarav Lee's upcoming trip. This will help ensure that the selected airports align with Aarav's preferences and travel needs.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "aarav.lee2966@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_li_6854",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Kim'} and your email is raj.kim9425@example.com. You are direct, flexible, independent, patient. First, retrieve user details for email isabella.li1262@example.com to confirm the user ID and reservation preferences. Once you have confirmed the user ID, proceed to book a reservation for this user ID on flight F123, which departs from JFK Airport to LAX Airport. Finally, obtain the reservation details for the newly created booking to confirm the booking reference and seat assignment, ensuring all information aligns with the user's preferences.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.li1262@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_li_6854", "flight_id": "F123", "departure_airport": "JFK", "arrival_airport": "LAX"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "isabella_li_6854", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_sanchez_4758",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Lopez'} and your email is isabella.lopez5223@example.com. You are optimistic, organized. Book reservation for Sofia Sanchez on flight number F1234 with preferred seating options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_sanchez_4758", "flight_number": "F1234", "preferred_seating": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lei_rossi_7984",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Lopez'} and your email is harper.lopez8439@example.com. You are polite, organized, cautious. Book a reservation for Lei Rossi on flight F123 with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "lei_rossi_7984", "flight_id": "F123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_martin_3470",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed8926@example.com. You are polite, logical, independent. First, get reservation details for Yusuf Martin's booking on flight F5678 to confirm booking status and seat assignment. Once the reservation is confirmed, proceed to check in Yusuf Martin for flight F5678 on 2023-11-15 to secure the boarding pass and confirm check-in status. This will ensure a smooth travel experience for Yusuf Martin from JFK to LAX.",
        actions=[
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_martin_3470", "flight_number": "F5678"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_martin_3470", "flight_number": "F5678", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="james_jackson_8771",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Muller'} and your email is isabella.muller7926@example.com. You are cautious, confident, organized. Retrieve the user details for James Jackson using the email james.jackson9342@example.com to confirm user ID and preferences. Once you have confirmed the user ID, proceed to book a reservation for James Jackson on the selected flight, ensuring all necessary passenger details are accurately provided. This will help streamline the booking process and ensure a smooth travel experience for the passenger.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "james.jackson9342@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "james_jackson_8771", "flight_id": "FL123", "passenger_details": {"first_name": "James", "last_name": "Jackson", "email": "james.jackson9342@example.com"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_rossi_7216",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Nguyen'} and your email is chen.nguyen2563@example.com. You are flexible, patient, direct, logical. First, search for available flights from JFK to LAX on the preferred travel date to ensure there are suitable options. Once you have identified a flight, proceed to book a reservation for Sophia Rossi on flight F12345 from JFK to LAX. This will help secure her travel plans efficiently and ensure a seamless booking process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_rossi_7216", "flight_number": "F12345", "departure": "JFK", "destination": "LAX"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="emma_martin_8571",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Davis'} and your email is mason.davis5855@example.com. You are direct, patient, polite, logical. Book a reservation for Emma Martin on Flight F1234 from Airport A567 to Airport A890, including seat preference and meal options.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "emma_martin_8571", "flight_number": "F1234", "departure_airport": "A567", "arrival_airport": "A890", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_6824",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Anderson'} and your email is juan.anderson1791@example.com. You are optimistic, cautious, patient. First, get user details for Mason Lee using email mason.lee3019@example.com to retrieve user ID. Once you have the user ID, proceed to book a reservation for user ID U3019 on flight AA123 from LAX to JFK on 2023-11-15. After successfully booking the flight, check in user ID U3019 for reservation ID R5678 on 2023-11-14 to ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.lee3019@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_6824", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mason_lee_6824", "reservation_id": "R5678", "check_in_date": "2023-11-14"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_9571",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Hernandez'} and your email is mohamed.hernandez8983@example.com. You are polite, patient, organized, logical. Retrieve Ethan Li's user details using the email ethan.li3632@example.com to access his profile information. Then, search for flights departing from JFK Airport to LAX Airport on the date 2023-12-15 to find suitable options for Ethan Li. Once you have identified a suitable flight, book a reservation for Ethan Li on flight number AA123 from JFK to LAX on 2023-12-15, using Ethan's user ID from his profile.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.li3632@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_9571", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_ahmed_9069",
        instruction="Your name is {'first_name': 'Amelia', 'last_name': 'Ahmed'} and your email is amelia.ahmed2287@example.com. You are confident, cautious, patient. First, book a reservation for Sofia Ahmed on flight F1234 from JFK to LAX, seat 12A, using user ID U001. Once the booking is confirmed, get the reservation details for reservation ID R789 for Sofia Ahmed to confirm booking information. Finally, check in for reservation ID R789 for Sofia Ahmed 24 hours before departure to ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_ahmed_9069", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "seat": "12A", "passenger_name": "Sofia Ahmed"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R789", "passenger_name": "Sofia Ahmed"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="noah_rossi_6214",
        instruction="Your name is {'first_name': 'Mason', 'last_name': 'Patel'} and your email is mason.patel6016@example.com. You are independent, patient, optimistic. Retrieve user details for Noah Rossi using email noah.rossi9901@example.com to confirm user ID. Once you have confirmed Noah Rossi's user ID, list all available airports to determine departure and destination options for his upcoming trip. After selecting the appropriate airports, book a reservation for user ID U12345 on flight ID F12345 from airport ID AP123 to airport ID AP456 on 2023-11-15.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "noah.rossi9901@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "noah_rossi_6214", "flight_id": "F12345", "departure_airport_id": "AP123", "destination_airport_id": "AP456", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_muller_7373",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Garcia'} and your email is noah.garcia7790@example.com. You are logical, organized, independent. Retrieve user details for Fatima Muller using email fatima.muller7881@example.com to confirm her identity and preferences. Once her details and preferences are confirmed, proceed to book a reservation for Fatima Muller on flight F1234, ensuring her seat preference and meal options are accommodated if available. This will help ensure a seamless travel experience for Fatima Muller and maintain high customer satisfaction for the airline.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.muller7881@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_muller_7373", "flight_number": "F1234", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_taylor_2876",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Thomas'} and your email is lucas.thomas6475@example.com. You are flexible, polite, logical. First, book a flight reservation for user {'first_name': 'Mia', 'last_name': 'Taylor'} (mia.taylor1368@example.com) from JFK to LAX on 2023-11-15 with flight ID F1234. Once the booking is confirmed, retrieve the reservation details for user {'first_name': 'Mia', 'last_name': 'Taylor'} with reservation ID R5678 to verify all booking information is correct. Finally, check in for flight ID F1234 for user {'first_name': 'Mia', 'last_name': 'Taylor'} with reservation ID R5678 to secure her seat assignments and ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_taylor_2876", "flight_id": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mia_taylor_2876", "reservation_id": "R5678"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mia_taylor_2876", "flight_id": "F1234", "reservation_id": "R5678"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="amelia_nguyen_8708",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Patel'} and your email is juan.patel4720@example.com. You are logical, patient, polite. First, Get_user_details for user Amelia Nguyen (amelia.nguyen6855@example.com) to retrieve user ID and preferences, as this will allow us to personalize her travel experience. Next, Book_reservation for user ID U12345 on flight FL123 from JFK to LAX on 2023-11-01, ensuring that her seating preferences are accommodated. Finally, Check_flight_status for flight FL123 on 2023-11-01 to confirm any gate changes or delays, so we can promptly inform Amelia and ensure a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "amelia_nguyen_8708"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "amelia_nguyen_8708", "flight_id": "FL123", "departure": "JFK", "destination": "LAX", "date": "2023-11-01", "preferences": "seating"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"flight_id": "FL123", "date": "2023-11-01"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_ahmed_9365",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Silva'} and your email is mohamed.silva7376@example.com. You are optimistic, direct. First, check the flight status for flight F123 on 2023-11-15 to ensure it is on time and has no delays. Once confirmed, proceed to book a reservation for user harper.ahmed4982@example.com on flight F123 from JFK to LAX on 2023-11-15 with seat preference aisle. Finally, get the reservation details for user harper.ahmed4982@example.com to confirm the booking on flight F123.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_ahmed_9365", "flight_number": "F123", "departure": "JFK", "arrival": "LAX", "date": "2023-11-15", "seat_preference": "aisle"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "harper_ahmed_9365", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ava_garcia_2940",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Jackson'} and your email is yara.jackson6598@example.com. You are patient, logical. Retrieve user details for Ava Garcia using email ava.garcia2797@example.com to verify user ID. Once you have verified Ava's user ID, proceed to book a reservation for her on flight F123 using the user ID and flight details. After successfully booking the reservation, check in Ava Garcia for flight F123 using the user ID and reservation details to ensure she is ready for boarding.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ava.garcia2797@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ava_garcia_2940", "flight_id": "F123"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ava_garcia_2940", "flight_id": "F123"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "ava_garcia_2940", "flight_id": "F123", "reservation_details": "reservation_id"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ivan_wilson_7587",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Taylor'} and your email is sophia.taylor4639@example.com. You are organized, independent, logical, patient. First, calculate the total cost for Ivan Wilson's reservation, including taxes and fees, to ensure accurate billing. Once the cost is confirmed, proceed to get the reservation details for Ivan Wilson's booking to confirm seat assignment and meal preferences. This will ensure that all aspects of the reservation are correct and meet the customer's needs before finalizing the booking.",
        actions=[
            Action(
                name="calculate",
                kwargs={"user_id": "ivan_wilson_7587"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "ivan_wilson_7587"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_moore_2080",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Wilson'} and your email is harper.wilson6600@example.com. You are independent, polite. Search for available flights from JFK to LAX on Olivia Moore's preferred travel date to identify options. Once you find a suitable flight, book a reservation for Olivia Moore on flight F1234 from JFK to LAX, confirming her seat preference and meal options. After booking, retrieve the reservation details to confirm the booking and provide Olivia Moore with a summary of her travel plans, including flight details, check-in status, and any updates.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "olivia_moore_2080"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_moore_2080", "flight_number": "F1234", "departure": "JFK", "arrival": "LAX", "seat_preference": "window", "meal_option": "vegetarian"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "olivia_moore_2080"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_sanchez_1853",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Anderson'} and your email is juan.anderson1791@example.com. You are patient, direct, logical. Search for flights from airport ID A123 to airport ID A456 on the 15th of next month for Lucas Sanchez, and once you find a suitable option, book a reservation for him on flight ID F789. Ensure that the flight meets his travel requirements and confirm the booking promptly to secure his seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "lucas_sanchez_1853"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport_id": "A123", "arrival_airport_id": "A456", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_sanchez_1853", "flight_id": "F789", "passenger_name": {"first_name": "Lucas", "last_name": "Sanchez"}, "contact_email": "juan.anderson1791@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_kim_8433",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Kim'} and your email is ivan.kim8149@example.com. You are optimistic, patient, organized. \"Book reservation for Sofia Kim on flight AA123 from LAX to JFK on 2023-11-15 with seat preference window\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_kim_8433", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_moore_9091",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis5061@example.com. You are logical, flexible, direct. First, retrieve user details for Juan Moore using juan.moore1720@example.com to verify account information. Once the account is verified, search for flights from LAX to JFK on 15th November 2023 for Juan Moore to find suitable options. After identifying the best flight, book a reservation for Juan Moore from LAX to JFK on flight F123 for 15th November 2023, including his seating preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "juan.moore1720@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_moore_9091", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seating_preference": "aisle"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_nguyen_1055",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez5778@example.com. You are flexible, organized, independent. First, get_user_details for Aarav Nguyen to retrieve user ID and contact information, as he is a frequent flyer and we need to ensure his preferences are updated in our system. Next, search for available flights from airport ID A123 to airport ID B456 on his preferred travel dates, as he plans to attend a crucial business meeting. Finally, book_reservation for user ID U001 on flight F789 with seat preference and meal choice, ensuring that Aarav's travel experience is seamless and meets his expectations.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"user_id": "aarav_nguyen_1055"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_nguyen_1055", "flight_id": "F789", "seat_preference": "aisle", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_davis_9868",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Gonzalez'} and your email is mohamed.gonzalez8734@example.com. You are direct, flexible. \"Get user details for Fatima Davis using email fatima.davis2844@example.com to verify user ID and preferences\"",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.davis2844@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_lee_8515",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Muller'} and your email is liam.muller3805@example.com. You are independent, polite, cautious, organized. First, retrieve user details for Mei Lee using her email mei.lee1220@example.com to verify her account information. Once her account is verified, search for available flights from SFO to JFK (John F. Kennedy International Airport) on Mei Lee's preferred travel date. After confirming the flight options, proceed to book a reservation for Mei Lee on flight F123 from SFO to JFK on December 20, 2023, in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.lee1220@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mei_lee_8515"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_lee_8515", "flight_number": "F123", "departure": "SFO", "arrival": "JFK", "date": "2023-12-20", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sofia_anderson_8718",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Garcia'} and your email is raj.garcia3173@example.com. You are independent, direct, organized. Search for flights departing from JFK airport to LAX airport on 2023-11-15 for Sofia Anderson. Once you have identified a suitable flight, book reservation for Sofia Anderson on flight F123 departing on 2023-11-15 using user ID associated with sofia.anderson9643@example.com. After securing her outbound flight, proceed to search for flights returning from LAX to JFK on 2023-11-20 for Sofia Anderson to ensure a complete round trip.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_anderson_8718", "flight_id": "F123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "sofia_anderson_8718", "flight_id": "F456", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_ahmed_9365",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Davis'} and your email is isabella.davis7889@example.com. You are logical, organized, independent. Retrieve user details for Harper Ahmed using the email harper.ahmed4982@example.com to confirm user ID for reservation. Once confirmed, proceed to search for flights from JFK to LAX departing on 2023-11-15 to find available options for booking. After selecting a suitable flight, book a reservation for the confirmed user ID on the chosen flight in economy class.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.ahmed4982@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_ahmed_9365", "flight_id": "FL123", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_davis_1257",
        instruction="Your name is {'first_name': 'Evelyn', 'last_name': 'Rossi'} and your email is evelyn.rossi3321@example.com. You are direct, cautious. First, book a reservation for user Aarav Davis on flight F456, specifying seat preference as window. Next, get reservation details for user Aarav Davis to confirm booking specifics and ensure accuracy. Finally, check in user Aarav Davis for flight F456, selecting seat 12A to complete the process efficiently.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_davis_1257", "flight_number": "F456", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "aarav_davis_1257"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "aarav_davis_1257", "flight_number": "F456", "seat_number": "12A"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="chen_nguyen_6691",
        instruction="Your name is {'first_name': 'Anya', 'last_name': 'Sanchez'} and your email is anya.sanchez6891@example.com. You are cautious, logical. First, get user details for Chen Nguyen using email chen.nguyen2526@example.com to retrieve user ID. Once you have the user ID, search for flights from JFK to LAX on December 15, 2023, for potential reservations. After identifying a suitable flight, book a reservation for the retrieved user ID from JFK to LAX on flight F123 for December 15, 2023.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "chen.nguyen2526@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "chen_nguyen_6691", "flight_number": "F123", "departure": "JFK", "destination": "LAX", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_santos_9228",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are flexible, logical, polite, confident. First, retrieve user details using email yusuf.santos3031@example.com to verify identity and preferences. Once verified, proceed to book a reservation for user Yusuf Santos on flight AA123 from JFK to LAX on 2023-11-15. After booking, check in user Yusuf Santos for flight AA123 to secure boarding pass and seat assignment, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.santos3031@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_santos_9228", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_santos_9228", "flight_number": "AA123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_muller_7373",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Johnson'} and your email is raj.johnson7007@example.com. You are organized, confident, cautious, patient. Get user details for Fatima Muller using email fatima.muller7881@example.com to retrieve her user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "fatima.muller7881@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_davis_2143",
        instruction="Your name is {'first_name': 'James', 'last_name': 'Lopez'} and your email is james.lopez4194@example.com. You are confident, cautious, patient, organized. Book a reservation for Isabella Davis (User ID U123) on Flight F1234 from Airport A567 to Airport B789 for 2023-11-15. After booking, retrieve the reservation details to confirm the booking reference number, ensuring all information is accurate for the upcoming travel.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "isabella_davis_2143", "flight_id": "F1234", "departure_airport": "A567", "arrival_airport": "B789", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "isabella_davis_2143", "flight_id": "F1234"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_hernandez_8984",
        instruction="Your name is {'first_name': 'Yara', 'last_name': 'Patel'} and your email is yara.patel6643@example.com. You are polite, independent, optimistic. Retrieve user details for Mei Hernandez using her email mei.hernandez3561@example.com to confirm her identity. Once confirmed, search for flights from LAX to JFK departing on December 15, 2023, to find suitable options for Mei. This is necessary to ensure that we have the correct passenger information before proceeding with the flight search, which is crucial for providing personalized service and accurate booking details.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.hernandez3561@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "mei_hernandez_8984"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "mei_hernandez_8984"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_hernandez_8985",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Wilson'} and your email is harper.wilson6600@example.com. You are optimistic, polite, logical, independent. First, search for available flights from JFK International Airport to LAX on December 15, 2023, for Lucas Hernandez to identify potential options. Once you have found a suitable flight, proceed to book a reservation for Lucas Hernandez on flight F123 from JFK to LAX on December 15, 2023, in economy class. After booking, retrieve reservation details for Lucas Hernandez to confirm the booking on flight F123 and ensure all information is accurate for his travel plans.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_hernandez_8985", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15", "class": "economy"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "lucas_hernandez_8985", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_rossi_1241",
        instruction="Your name is {'first_name': 'Lucas', 'last_name': 'Sanchez'} and your email is lucas.sanchez2568@example.com. You are cautious, polite. \"Book_reservation for user omar.rossi5980@example.com with flight number AA100, departing from JFK to LAX, including passenger details and payment information.\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "omar_rossi_1241", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "passenger_details": {"first_name": "Omar", "last_name": "Rossi", "email": "omar.rossi5980@example.com"}, "payment_info": {"card_number": "4111111111111111", "expiry_date": "12/25", "cvv": "123"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_lee_6824",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Johansson'} and your email is sophia.johansson7738@example.com. You are logical, cautious, patient, organized. First, get user details for Mason Lee using email mason.lee3019@example.com to verify user ID and preferences. Once you have confirmed Mason Lee's user ID and identified his seat preference, proceed to search for flights from JFK International Airport to LAX International Airport departing on 2023-12-15. After finding a suitable flight, book a reservation for Mason Lee using his user ID on the selected flight, ensuring to choose a window seat as per his preference.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.lee3019@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mason_lee_6824", "flight_id": "flight_123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_brown_7075",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Brown'} and your email is sofia.brown9418@example.com. You are confident, direct, polite. Book a reservation for user Mei Brown (mei.brown7062@example.com) on flight F123 from JFK to LAX on 15th November 2023 with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_brown_7075", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="juan_patel_6613",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Brown'} and your email is mei.brown7062@example.com. You are optimistic, cautious, logical. First, search for available flights from airport A123 to airport B456 on the date 2023-12-15 to ensure there are suitable options for our client. Once you have identified a suitable flight, proceed to book a reservation for Juan Patel on flight F1234 from A123 to B456 on 2023-12-15. This will ensure that Juan has a confirmed seat for his travel plans.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "A123", "arrival_airport": "B456", "date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "juan_patel_6613", "flight_number": "F1234", "departure_airport": "A123", "arrival_airport": "B456", "date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_4931",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Santos'} and your email is sophia.santos7908@example.com. You are polite, optimistic, logical. First, get_user_details for user Mei Johnson using email mei.johnson6054@example.com to verify account information, ensuring her profile is up-to-date for seamless service. Next, list_all_airports to find available departure and destination options for Mei Johnson's upcoming trip, helping her choose the most convenient travel itinerary. Finally, book_reservation for user Mei Johnson on flight AA123 from LAX to JFK with seat preference window, confirming her travel plans and ensuring a comfortable journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.johnson6054@example.com"}
            ),
            Action(
                name="list_all_airports",
                kwargs={}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "AA123", "departure": "LAX", "destination": "JFK", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_li_4016",
        instruction="Your name is {'first_name': 'Isabella', 'last_name': 'Kim'} and your email is isabella.kim4342@example.com. You are organized, confident. First, retrieve Ethan's user ID using his email ethan.li9943@example.com with the get_user_details tool to ensure you have the correct identification for booking purposes. Next, search for available flights from airport A001 (Los Angeles International Airport) to airport A002 (John F. Kennedy International Airport) for the upcoming weekend to find a suitable option for Ethan's travel. Once you have identified an appropriate flight, book a reservation for Ethan on flight F456 from Los Angeles to New York using the book_reservation tool, with Ethan's user ID and selected flight details, to secure his travel plans.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.li9943@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_li_4016", "flight_id": "F456", "departure_airport": "A001", "arrival_airport": "A002"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_santos_6381",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Wilson'} and your email is mohamed.wilson2728@example.com. You are direct, cautious, organized, logical. Retrieve user details for Harper Santos using email harper.santos7981@example.com to confirm user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "harper.santos7981@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="omar_patel_2218",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Santos'} and your email is sophia.santos7908@example.com. You are independent, confident. Retrieve user details for Omar Patel using email omar.patel5555@example.com to verify user ID. Once you have obtained the user ID, search for flights from JFK to LAX on the desired travel date for Omar Patel. This task is part of ensuring a seamless booking experience for our valued customers by providing accurate and timely flight options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "omar.patel5555@example.com"}
            ),
            Action(
                name="lookup_passenger",
                kwargs={"user_id": "omar_patel_2218"}
            ),
            Action(
                name="manage_booking",
                kwargs={"user_id": "omar_patel_2218", "from_airport": "JFK", "to_airport": "LAX", "travel_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="sophia_moore_9694",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Johnson'} and your email is raj.johnson7007@example.com. You are confident, cautious. Book a new reservation for Sophia Moore on flight DL456 from JFK to LAX departing on 2023-11-15, including seat selection and meal preference.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "sophia_moore_9694", "flight_number": "DL456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_brown_7075",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Moore'} and your email is juan.moore1720@example.com. You are cautious, independent, logical. First, use the get_user_details tool with user email mei.brown7062@example.com to retrieve Mei's user ID. Once you have Mei's user ID, proceed to use the book_reservation tool with user ID U1010, flight number FL1234, and departure date 2023-11-15 to book a flight reservation for Mei. After successfully booking the flight, use the get_reservation_details tool with reservation ID R2021 to confirm the booking details for Mei's flight. This sequence of actions ensures that Mei's travel plans are accurately recorded and verified, providing a seamless experience for her upcoming journey.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.brown7062@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_brown_7075", "flight_number": "FL1234", "departure_date": "2023-11-15"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R2021"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="daiki_lee_7603",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Ito'} and your email is liam.ito7299@example.com. You are confident, polite, cautious. First, search for available flights from Tokyo Narita International Airport to Los Angeles International Airport for Daiki Lee, ensuring you find options that suit his schedule and preferences. Once you have identified a suitable flight, proceed to book a reservation for Daiki Lee on flight FL123 from Tokyo Narita International Airport to Los Angeles International Airport.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "daiki_lee_7603", "flight_number": "FL123", "departure_airport": "Tokyo Narita International Airport", "arrival_airport": "Los Angeles International Airport"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_smith_8416",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis6849@example.com. You are flexible, independent. \"Book_reservation for user Olivia Smith on flight AA123 from JFK to LAX on 2023-11-10 with seat preference window\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_smith_8416", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-10", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1916",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Ahmed'} and your email is mohamed.ahmed1896@example.com. You are independent, polite. First, check flight status for flight F123 on 2023-11-15 to ensure it is on schedule. Then, proceed to book a reservation for user Lucas Lee on flight F123 from JFK to LAX on 2023-11-15. Finally, calculate baggage fees for user Lucas Lee for flight F123 to provide him with a complete overview of his travel costs.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F123", "date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "F123", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
            Action(
                name="calculate",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="ethan_lopez_9361",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Ito'} and your email is harper.ito9302@example.com. You are optimistic, flexible. Retrieve user details for Ethan Lopez using email ethan.lopez6235@example.com to confirm user ID and preferences. Once you have obtained Ethan's user ID, search for flights from Los Angeles International Airport (LAX) to John F. Kennedy International Airport (JFK) on December 15, 2023, for Ethan. After identifying a suitable flight, book a reservation for Ethan Lopez on flight F1234, seat 12A, using the confirmed user ID.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "ethan.lopez6235@example.com"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "LAX"}
            ),
            Action(
                name="get_airport_info",
                kwargs={"airport_code": "JFK"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "ethan_lopez_9361", "flight_number": "F1234", "seat_number": "12A", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ito_3194",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Jackson'} and your email is sophia.jackson7991@example.com. You are polite, flexible. Search for flights from JFK to LAX on preferred dates using book_reservation tool.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ito_3194", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "return_date": "2023-11-22", "passenger_details": {"first_name": "Sophia", "last_name": "Jackson", "email": "sophia.jackson7991@example.com"}}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="anya_johansson_1855",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Davis'} and your email is ava.davis5061@example.com. You are optimistic, cautious. First, get user details for Anya Johansson using email anya.johansson3480@example.com to retrieve her user ID. Once you have Anya's user ID, proceed to book a reservation for her on flight F1234 from JFK to LAX on November 15th, ensuring her seat preference is a window seat. This sequence is crucial to ensure Anya's travel plans are smoothly set up, aligning with our commitment to providing a seamless customer experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "anya.johansson3480@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "anya_johansson_1855", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_wilson_9061",
        instruction="Your name is {'first_name': 'Sofia', 'last_name': 'Kim'} and your email is sofia.kim8076@example.com. You are patient, independent. First, check flight status for flight F1234 departing on 2023-11-15 to ensure it is on schedule. Once confirmed, book a reservation for Mei Wilson on flight F1234 from SFO to LAX (Los Angeles International Airport) on 2023-11-15. After the booking is complete, check in Mei Wilson for flight F1234 with reservation R5678 to ensure seat assignment and a smooth boarding process.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "departure_date": "2023-11-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_wilson_9061", "flight_number": "F1234", "departure_airport": "SFO", "arrival_airport": "LAX", "departure_date": "2023-11-15", "passenger_name": "Mei Wilson"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R5678", "user_id": "mei_wilson_9061"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_wilson_8866",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Garcia'} and your email is liam.garcia1258@example.com. You are confident, optimistic, direct. Book a reservation on flight F123 for Harper Wilson, ensuring seat selection and meal preference are confirmed.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_wilson_8866", "flight_number": "F123", "seat_selection": "12A", "meal_preference": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_ahmed_8438",
        instruction="Your name is {'first_name': 'Raj', 'last_name': 'Khan'} and your email is raj.khan6740@example.com. You are optimistic, independent, direct, flexible. Book reservation for Evelyn Ahmed on flight F1234 from JFK to LAX for the date 2023-11-15 using user ID retrieved earlier.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_ahmed_8438", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_kovacs_9564",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Li'} and your email is mia.li3818@example.com. You are cautious, patient. First, retrieve user details using email yusuf.kovacs5639@example.com to confirm user ID for reservation purposes. Once confirmed, proceed to search for flights departing from LAX to John F. Kennedy International Airport (JFK) on December 15th, 2023. After identifying suitable flight options, book a reservation for Yusuf Kovacs on flight F1234 from LAX to JFK, ensuring to select a window seat and add extra baggage.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "yusuf.kovacs5639@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_kovacs_9564", "flight_id": "F1234", "seat_preference": "window", "extra_baggage": True}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_hernandez_2149",
        instruction="Your name is {'first_name': 'Omar', 'last_name': 'Brown'} and your email is omar.brown3320@example.com. You are independent, logical, polite. First, check the flight status for flight F1234 on 2023-07-20 to ensure on-time departure for Mia Hernandez. Once confirmed, proceed to check in Mia Hernandez for flight F1234 using reservation ID R2345 to obtain her boarding pass.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"flight_number": "F1234", "date": "2023-07-20"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mia_hernandez_2149", "reservation_id": "R2345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johansson_4039",
        instruction="Your name is {'first_name': 'Noah', 'last_name': 'Taylor'} and your email is noah.taylor2496@example.com. You are patient, logical, polite, independent. First, book a reservation for user Mei Johansson on flight AA123 from LAX to JFK on November 15, 2023. Once the reservation is confirmed, proceed to check in Mei Johansson for the same flight, ensuring to select a window seat if available. This sequence will ensure a smooth travel experience for the passenger by securing her seat preference early and confirming her travel arrangements.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johansson_4039", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mei_johansson_4039", "flight_number": "AA123", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_kovacs_3082",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are patient, confident. First, book a reservation for user Harper Kovacs on flight F123 from JFK to LAX on 2023-11-15 using the book_reservation tool with user_id U001, flight_id F123, and date 2023-11-15. Once the reservation is confirmed, check in user Harper Kovacs for the same flight using the check_in tool with user_id U001 and flight_id F123 to ensure a smooth boarding process.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_kovacs_3082", "flight_id": "F123", "date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "harper_kovacs_3082", "flight_id": "F123"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="olivia_li_1537",
        instruction="Your name is {'first_name': 'Ivan', 'last_name': 'Silva'} and your email is ivan.silva1323@example.com. You are direct, polite, patient. First, use get_user_details to retrieve Olivia Li's user ID using her email olivia.li8860@example.com. Once you have her user ID, proceed to use check_flight_status to find available flights from Los Angeles (LAX) to New York (JFK) on December 15th, 2023. After confirming the availability of flight F123, use book_reservation with the user ID obtained from Olivia Li's details to book flight F123 from LAX to JFK on December 15th, 2023.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "olivia.li8860@example.com"}
            ),
            Action(
                name="check_flight_status",
                kwargs={"departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "olivia_li_1537", "flight_number": "F123", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="fatima_ito_3977",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Martin'} and your email is ethan.martin2913@example.com. You are cautious, flexible. Book a reservation for Fatima Ito on flight AA123 from LAX to JFK using her user ID, specifying seat preference and meal choice.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "fatima_ito_3977", "flight_number": "AA123", "departure_airport": "LAX", "arrival_airport": "JFK", "seat_preference": "window", "meal_choice": "vegetarian"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_silva_6452",
        instruction="Your name is {'first_name': 'Chen', 'last_name': 'Patel'} and your email is chen.patel4688@example.com. You are independent, polite, cautious. Use the book_reservation tool to book a flight reservation for user Aarav Silva (aarav.silva8543@example.com) from airport A123 to destination airport A456 on November 15, 2023. Once the reservation is confirmed, use the get_reservation_details tool to retrieve the reservation ID R789 for Aarav Silva's newly booked flight. After obtaining the reservation ID, proceed to use the check_in tool to check in Aarav Silva for flight reservation ID R789 and select a window seat, ensuring a comfortable travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_silva_6452", "departure_airport": "A123", "destination_airport": "A456", "departure_date": "2023-11-15", "email": "aarav.silva8543@example.com"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"reservation_id": "R789"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "aarav_silva_6452", "reservation_id": "R789", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mohamed_taylor_9830",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Silva'} and your email is sophia.silva5929@example.com. You are confident, organized. First, retrieve user details for Mohamed Taylor using email mohamed.taylor5881@example.com to confirm identity and account information. Once confirmed, proceed to book a reservation for Mohamed Taylor on flight AA100 from JFK to LAX, departing on 2023-12-15. Finally, check in user Mohamed Taylor for flight AA100 to secure boarding pass and seat assignment, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mohamed.taylor5881@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA100", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mohamed_taylor_9830", "flight_number": "AA100"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="lucas_lee_1916",
        instruction="Your name is {'first_name': 'Ava', 'last_name': 'Gonzalez'} and your email is ava.gonzalez5150@example.com. You are organized, direct. First, retrieve user details for Lucas Lee using email lucas.lee9489@example.com to confirm account information. Once confirmed, search for flights departing from LAX to JFK (John F. Kennedy International Airport) on 2023-11-15 for Lucas Lee. After identifying the available options, proceed to book a reservation for Lucas Lee on flight F789 from LAX to JFK on 2023-11-15, selecting a window seat.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "lucas.lee9489@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "lucas_lee_1916", "flight_number": "F789", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_kovacs_2340",
        instruction="Your name is {'first_name': 'Liam', 'last_name': 'Taylor'} and your email is liam.taylor8460@example.com. You are organized, polite, logical, cautious. First, retrieve user details for Mei Kovacs using email mei.kovacs7368@example.com to verify her account information. Once verified, proceed to book a reservation for Mei Kovacs on flight F1234 from JFK to LAX on December 15, 2023, using her user account details. This ensures that her travel itinerary is confirmed and all necessary information is accurately recorded in the airline's system.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mei.kovacs7368@example.com"}
            ),
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_kovacs_2340", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="isabella_khan_8788",
        instruction="Your name is {'first_name': 'Juan', 'last_name': 'Brown'} and your email is juan.brown1288@example.com. You are logical, flexible, cautious, independent. Retrieve user details for isabella.khan1596@example.com to verify user ID for booking purposes.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "isabella.khan1596@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_johnson_4931",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Silva'} and your email is mia.silva8990@example.com. You are optimistic, patient, direct, logical. Begin by booking a reservation for user Mei Johnson on flight AA123 from SFO to LAX on 2023-11-15, ensuring her seat preference is a window. Once the reservation is confirmed, promptly check in Mei Johnson for the same flight to secure her boarding pass, ensuring a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "AA123", "departure_airport": "SFO", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "mei_johnson_4931", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mason_kovacs_2875",
        instruction="Your name is {'first_name': 'Yusuf', 'last_name': 'Nguyen'} and your email is yusuf.nguyen9677@example.com. You are direct, optimistic, polite, logical. First, retrieve user details for Mason Kovacs using email mason.kovacs8863@example.com to confirm his identity. Once his identity is confirmed, proceed to search for flights from JFK to LAX on 2023-12-15 to find available options for him. This will ensure that we have the correct information before providing him with the best travel options.",
        actions=[
            Action(
                name="get_user_details",
                kwargs={"email": "mason.kovacs8863@example.com"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mia_ito_3194",
        instruction="Your name is {'first_name': 'Mohamed', 'last_name': 'Brown'} and your email is mohamed.brown5678@example.com. You are cautious, flexible, logical. Search for flights from LAX to JFK departing on 2023-11-15 to find suitable options for Mia. Once you have identified the best option, proceed to book a reservation for user Mia Ito on flight F1234 from LAX to JFK departing on 2023-11-15 in economy class. This will ensure she has a confirmed seat for her business trip.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mia_ito_3194", "flight_number": "F1234", "departure_airport": "LAX", "arrival_airport": "JFK", "departure_date": "2023-11-15", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="mei_ito_6207",
        instruction="Your name is {'first_name': 'Sophia', 'last_name': 'Davis'} and your email is sophia.davis4814@example.com. You are optimistic, confident, patient, flexible. Book a reservation for Mei Ito from Tokyo Narita Airport (NRT) to Los Angeles International Airport (LAX) on November 10, 2023, using flight number JL62.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "mei_ito_6207", "flight_number": "JL62", "departure_airport": "NRT", "arrival_airport": "LAX", "departure_date": "2023-11-10"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="harper_thomas_8641",
        instruction="Your name is {'first_name': 'Daiki', 'last_name': 'Johnson'} and your email is daiki.johnson3136@example.com. You are optimistic, organized, polite, cautious. Search for available flights from JFK to LAX on 2023-12-01 for Harper's desired travel date. Once you find an appropriate flight, book a reservation for Harper Thomas on flight number AA456 from JFK to LAX on 2023-12-01, using the user ID retrieved earlier. This will ensure Harper has a confirmed booking for their trip, aligning with their travel plans.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "harper_thomas_8641", "flight_number": "AA456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-01", "passenger_name": "Harper Thomas"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_garcia_1177",
        instruction="Your name is {'first_name': 'Mia', 'last_name': 'Khan'} and your email is mia.khan3010@example.com. You are direct, flexible, independent. First, update reservation ID R202 with a special meal request for user ID U101 based on dietary preferences, ensuring the passenger receives the appropriate meal during the flight. Once the meal request is confirmed, proceed to check in for user ID U101 on reservation ID R202 to secure the boarding pass for Aarav Garcia. This sequence ensures that all special requests are accommodated before finalizing the check-in process, enhancing the passenger's travel experience.",
        actions=[
            Action(
                name="manage_booking",
                kwargs={"reservation_id": "R202", "user_id": "aarav_garcia_1177", "special_request": "vegetarian meal"}
            ),
            Action(
                name="check_in",
                kwargs={"reservation_id": "R202", "user_id": "aarav_garcia_1177"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_9671",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Anderson'} and your email is harper.anderson5822@example.com. You are independent, optimistic, patient. \"Book reservation for user Aarav Lee on flight number AA456 from JFK to LAX on 2023-11-20\"",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "aarav_lee_9671", "flight_number": "AA456", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-20"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="raj_johnson_6495",
        instruction="Your name is {'first_name': 'Ethan', 'last_name': 'Johnson'} and your email is ethan.johnson7828@example.com. You are patient, polite, organized. Book reservation for Raj Johnson on flight F1234 from JFK to LAX with seat preference window.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "raj_johnson_6495", "flight_number": "F1234", "departure_airport": "JFK", "arrival_airport": "LAX", "seat_preference": "window"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="aarav_lee_3563",
        instruction="Your name is {'first_name': 'Lei', 'last_name': 'Ito'} and your email is lei.ito7204@example.com. You are flexible, organized. First, search for flights from New York (JFK) to Los Angeles (LAX) on 2023-11-15 for user 'aarav.lee5880@example.com'. Once you have identified a suitable flight, get details for flight F12345 to check available seat types and prices. This will help ensure you can provide the user with the best options for their travel needs.",
        actions=[
            Action(
                name="check_flight_status",
                kwargs={"origin": "JFK", "destination": "LAX", "date": "2023-11-15", "user_id": "aarav_lee_3563"}
            ),
            Action(
                name="get_aircraft_info",
                kwargs={"flight_number": "F12345"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="evelyn_garcia_6211",
        instruction="Your name is {'first_name': 'Mei', 'last_name': 'Johnson'} and your email is mei.johnson6054@example.com. You are optimistic, polite, cautious, organized. Book a flight reservation for user Evelyn Garcia from New York (JFK) to Los Angeles (LAX) on December 12, 2023, in economy class.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "evelyn_garcia_6211", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-12-12", "class": "economy"}
            ),
        ],
        outputs=[]
    ),
    Task(
        annotator="gpt-4o",
        user_id="yusuf_garcia_2058",
        instruction="Your name is {'first_name': 'Harper', 'last_name': 'Davis'} and your email is harper.davis7823@example.com. You are patient, cautious, optimistic, polite. Begin by booking a reservation for Yusuf Garcia on flight AA123 from JFK to LAX on 2023-11-15, ensuring his seat preference is noted. Once the booking is confirmed, retrieve the reservation details to verify the booking reference and seat assignment. Finally, check in Yusuf Garcia for the flight, selecting seat 12A and adding one checked bag to ensure a smooth travel experience.",
        actions=[
            Action(
                name="book_reservation",
                kwargs={"user_id": "yusuf_garcia_2058", "flight_number": "AA123", "departure_airport": "JFK", "arrival_airport": "LAX", "departure_date": "2023-11-15", "seat_preference": "window"}
            ),
            Action(
                name="get_reservation_details",
                kwargs={"user_id": "yusuf_garcia_2058", "flight_number": "AA123", "departure_date": "2023-11-15"}
            ),
            Action(
                name="check_in",
                kwargs={"user_id": "yusuf_garcia_2058", "flight_number": "AA123", "departure_date": "2023-11-15", "seat_assignment": "12A", "checked_bags": 1}
            ),
        ],
        outputs=[]
    ),
]
